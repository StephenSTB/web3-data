{
  "contractName": "CometHarness",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pauseGuardian",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseTokenPriceFeed",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "extensionDelegate",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "supplyKink",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "supplyPerYearInterestRateSlopeLow",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "supplyPerYearInterestRateSlopeHigh",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "supplyPerYearInterestRateBase",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "borrowKink",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "borrowPerYearInterestRateSlopeLow",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "borrowPerYearInterestRateSlopeHigh",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "borrowPerYearInterestRateBase",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "storeFrontPriceFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "trackingIndexScale",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "baseTrackingSupplySpeed",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "baseTrackingBorrowSpeed",
              "type": "uint64"
            },
            {
              "internalType": "uint104",
              "name": "baseMinForRewards",
              "type": "uint104"
            },
            {
              "internalType": "uint104",
              "name": "baseBorrowMin",
              "type": "uint104"
            },
            {
              "internalType": "uint104",
              "name": "targetReserves",
              "type": "uint104"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "decimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint64",
                  "name": "borrowCollateralFactor",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "liquidateCollateralFactor",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "liquidationFactor",
                  "type": "uint64"
                },
                {
                  "internalType": "uint128",
                  "name": "supplyCap",
                  "type": "uint128"
                }
              ],
              "internalType": "struct CometConfiguration.AssetConfig[]",
              "name": "assetConfigs",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct CometConfiguration.Configuration",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Absurd",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadAsset",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadDecimals",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadDiscount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadMinimum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BorrowCFTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BorrowTooSmall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientReserves",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidInt104",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidInt256",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidUInt104",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidUInt128",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidUInt64",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LiquidateCFTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NegativeNumber",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSelfTransfer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotCollateralized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotForSale",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotLiquidatable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Paused",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SupplyCapExceeded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TimestampTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooManyAssets",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooMuchSlippage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferInFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferOutFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "absorber",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAbsorbed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdValue",
          "type": "uint256"
        }
      ],
      "name": "AbsorbCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "absorber",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "basePaidOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdValue",
          "type": "uint256"
        }
      ],
      "name": "AbsorbDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "BuyCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "supplyPaused",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "transferPaused",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "withdrawPaused",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "absorbPaused",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "buyPaused",
          "type": "bool"
        }
      ],
      "name": "PauseAction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Supply",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SupplyCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawReserves",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "absorber",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "absorb",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accrueAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approveThis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseBorrowMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseMinForRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseTokenPriceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseTrackingBorrowSpeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseTrackingSupplySpeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowKink",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowPerSecondInterestRateBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowPerSecondInterestRateSlopeHigh",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowPerSecondInterestRateSlopeLow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "buyCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "extensionDelegate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "i",
          "type": "uint8"
        }
      ],
      "name": "getAssetInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "offset",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "priceFeed",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "scale",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "borrowCollateralFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "liquidateCollateralFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "liquidationFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "supplyCap",
              "type": "uint128"
            }
          ],
          "internalType": "struct CometCore.AssetInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getAssetInfoByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "offset",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "priceFeed",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "scale",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "borrowCollateralFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "liquidateCollateralFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "liquidationFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "supplyCap",
              "type": "uint128"
            }
          ],
          "internalType": "struct CometCore.AssetInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "utilization",
          "type": "uint256"
        }
      ],
      "name": "getBorrowRate",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getCollateralReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserves",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "utilization",
          "type": "uint256"
        }
      ],
      "name": "getSupplyRate",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUtilization",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "hasPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeStorage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAbsorbPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBorrowCollateralized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isBuyPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isLiquidatable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSupplyPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTransferPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isWithdrawPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidatorPoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "numAbsorbs",
          "type": "uint32"
        },
        {
          "internalType": "uint64",
          "name": "numAbsorbed",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "approxSpend",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "_reserved",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nowOverride",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAssets",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "supplyPaused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "transferPaused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "withdrawPaused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "absorbPaused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "buyPaused",
          "type": "bool"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseGuardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        }
      ],
      "name": "quoteCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "storeFrontPriceFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "supply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "supplyFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyKink",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyPerSecondInterestRateBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyPerSecondInterestRateSlopeHigh",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyPerSecondInterestRateSlopeLow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "supplyTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalsCollateral",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "totalSupplyAsset",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_reserved",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trackingIndexScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferAssetFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBasic",
      "outputs": [
        {
          "internalType": "int104",
          "name": "principal",
          "type": "int104"
        },
        {
          "internalType": "uint64",
          "name": "baseTrackingIndex",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "baseTrackingAccrued",
          "type": "uint64"
        },
        {
          "internalType": "uint16",
          "name": "assetsIn",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "_reserved",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userCollateral",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "balance",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_reserved",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawReserves",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNow",
      "outputs": [
        {
          "internalType": "uint40",
          "name": "",
          "type": "uint40"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "now_",
          "type": "uint256"
        }
      ],
      "name": "setNow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "baseSupplyIndex",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "baseBorrowIndex",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "trackingSupplyIndex",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "trackingBorrowIndex",
              "type": "uint64"
            },
            {
              "internalType": "uint104",
              "name": "totalSupplyBase",
              "type": "uint104"
            },
            {
              "internalType": "uint104",
              "name": "totalBorrowBase",
              "type": "uint104"
            },
            {
              "internalType": "uint40",
              "name": "lastAccrualTime",
              "type": "uint40"
            },
            {
              "internalType": "uint8",
              "name": "pauseFlags",
              "type": "uint8"
            }
          ],
          "internalType": "struct CometStorage.TotalsBasic",
          "name": "totals",
          "type": "tuple"
        }
      ],
      "name": "setTotalsBasic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "totalSupplyAsset",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "_reserved",
              "type": "uint128"
            }
          ],
          "internalType": "struct CometStorage.TotalsCollateral",
          "name": "totals",
          "type": "tuple"
        }
      ],
      "name": "setTotalsCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "int104",
          "name": "principal",
          "type": "int104"
        }
      ],
      "name": "setBasePrincipal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "balance",
          "type": "uint128"
        }
      ],
      "name": "setCollateralBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "initialUserBalance",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "finalUserBalance",
          "type": "uint128"
        }
      ],
      "name": "updateAssetsInExternal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAssetList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "result",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accrue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauseGuardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseTokenPriceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"extensionDelegate\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"supplyKink\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"supplyPerYearInterestRateSlopeLow\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"supplyPerYearInterestRateSlopeHigh\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"supplyPerYearInterestRateBase\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"borrowKink\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"borrowPerYearInterestRateSlopeLow\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"borrowPerYearInterestRateSlopeHigh\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"borrowPerYearInterestRateBase\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storeFrontPriceFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"trackingIndexScale\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"baseTrackingSupplySpeed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"baseTrackingBorrowSpeed\",\"type\":\"uint64\"},{\"internalType\":\"uint104\",\"name\":\"baseMinForRewards\",\"type\":\"uint104\"},{\"internalType\":\"uint104\",\"name\":\"baseBorrowMin\",\"type\":\"uint104\"},{\"internalType\":\"uint104\",\"name\":\"targetReserves\",\"type\":\"uint104\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"borrowCollateralFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidateCollateralFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidationFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"supplyCap\",\"type\":\"uint128\"}],\"internalType\":\"struct CometConfiguration.AssetConfig[]\",\"name\":\"assetConfigs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct CometConfiguration.Configuration\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Absurd\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadAsset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadDiscount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowCFTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInt104\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInt256\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUInt104\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUInt128\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUInt64\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateCFTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NegativeNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSelfTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCollateralized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotForSale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotLiquidatable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Paused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SupplyCapExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TimestampTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyAssets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooMuchSlippage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferInFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferOutFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"absorber\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAbsorbed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"}],\"name\":\"AbsorbCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"absorber\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"basePaidOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"}],\"name\":\"AbsorbDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"BuyCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"supplyPaused\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"transferPaused\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"withdrawPaused\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"absorbPaused\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"buyPaused\",\"type\":\"bool\"}],\"name\":\"PauseAction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SupplyCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawReserves\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"absorber\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"absorb\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accrue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accrueAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveThis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseBorrowMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseMinForRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenPriceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTrackingBorrowSpeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTrackingSupplySpeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowKink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowPerSecondInterestRateBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowPerSecondInterestRateSlopeHigh\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowPerSecondInterestRateSlopeLow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"buyCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extensionDelegate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"i\",\"type\":\"uint8\"}],\"name\":\"getAssetInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"offset\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"scale\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"borrowCollateralFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidateCollateralFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidationFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"supplyCap\",\"type\":\"uint128\"}],\"internalType\":\"struct CometCore.AssetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetInfoByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"offset\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"scale\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"borrowCollateralFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidateCollateralFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidationFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"supplyCap\",\"type\":\"uint128\"}],\"internalType\":\"struct CometCore.AssetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAssetList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"result\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"utilization\",\"type\":\"uint256\"}],\"name\":\"getBorrowRate\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getCollateralReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNow\",\"outputs\":[{\"internalType\":\"uint40\",\"name\":\"\",\"type\":\"uint40\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"utilization\",\"type\":\"uint256\"}],\"name\":\"getSupplyRate\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUtilization\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAbsorbPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBorrowCollateralized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBuyPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isLiquidatable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSupplyPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTransferPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWithdrawPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidatorPoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"numAbsorbs\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"numAbsorbed\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"approxSpend\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"_reserved\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nowOverride\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAssets\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"supplyPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"withdrawPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"absorbPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"buyPaused\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGuardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"}],\"name\":\"quoteCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int104\",\"name\":\"principal\",\"type\":\"int104\"}],\"name\":\"setBasePrincipal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"balance\",\"type\":\"uint128\"}],\"name\":\"setCollateralBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"now_\",\"type\":\"uint256\"}],\"name\":\"setNow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"baseSupplyIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"baseBorrowIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"trackingSupplyIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"trackingBorrowIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint104\",\"name\":\"totalSupplyBase\",\"type\":\"uint104\"},{\"internalType\":\"uint104\",\"name\":\"totalBorrowBase\",\"type\":\"uint104\"},{\"internalType\":\"uint40\",\"name\":\"lastAccrualTime\",\"type\":\"uint40\"},{\"internalType\":\"uint8\",\"name\":\"pauseFlags\",\"type\":\"uint8\"}],\"internalType\":\"struct CometStorage.TotalsBasic\",\"name\":\"totals\",\"type\":\"tuple\"}],\"name\":\"setTotalsBasic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"totalSupplyAsset\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_reserved\",\"type\":\"uint128\"}],\"internalType\":\"struct CometStorage.TotalsCollateral\",\"name\":\"totals\",\"type\":\"tuple\"}],\"name\":\"setTotalsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storeFrontPriceFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"supplyFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyKink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyPerSecondInterestRateBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyPerSecondInterestRateSlopeHigh\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyPerSecondInterestRateSlopeLow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"supplyTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalsCollateral\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"totalSupplyAsset\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_reserved\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trackingIndexScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAssetFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"initialUserBalance\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"finalUserBalance\",\"type\":\"uint128\"}],\"name\":\"updateAssetsInExternal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBasic\",\"outputs\":[{\"internalType\":\"int104\",\"name\":\"principal\",\"type\":\"int104\"},{\"internalType\":\"uint64\",\"name\":\"baseTrackingIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"baseTrackingAccrued\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"assetsIn\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"_reserved\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userCollateral\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"balance\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_reserved\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"absorb(address,address[])\":{\"params\":{\"absorber\":\"The recipient of the incentive paid to the caller of absorb\",\"accounts\":\"The list of underwater accounts to absorb\"}},\"approveThis(address,address,uint256)\":{\"details\":\"Only callable by governorNote: Setting the `asset` as Comet's address will allow the manager to withdraw from Comet's Comet balance\",\"params\":{\"amount\":\"The amount of an asset to approve\",\"asset\":\"The asset that the manager will gain approval of\",\"manager\":\"The account which will be allowed or disallowed\"}},\"balanceOf(address)\":{\"details\":\"Note: uses updated interest indices to calculate\",\"params\":{\"account\":\"The account whose balance to query\"},\"returns\":{\"_0\":\"The present day base balance magnitude of the account, if positive\"}},\"borrowBalanceOf(address)\":{\"details\":\"Note: uses updated interest indices to calculate\",\"params\":{\"account\":\"The account whose balance to query\"},\"returns\":{\"_0\":\"The present day base balance magnitude of the account, if negative\"}},\"buyCollateral(address,uint256,uint256,address)\":{\"params\":{\"asset\":\"The asset to buy\",\"baseAmount\":\"The amount of base tokens used to buy the collateral\",\"minAmount\":\"The minimum amount of collateral tokens that should be received by the buyer\",\"recipient\":\"The recipient address\"}},\"getAssetInfo(uint8)\":{\"params\":{\"i\":\"The index of the asset info to get\"},\"returns\":{\"_0\":\"The asset info object\"}},\"getAssetInfoByAddress(address)\":{\"details\":\"Determine index of asset that matches given address\"},\"getBorrowRate(uint256)\":{\"details\":\"Note: Does not accrue interest first\",\"params\":{\"utilization\":\"The utilization to check the borrow rate for\"},\"returns\":{\"_0\":\"The per second borrow rate at `utilization`\"}},\"getCollateralReserves(address)\":{\"details\":\"Note: Reverts if collateral reserves are somehow negative, which should not be possible\",\"params\":{\"asset\":\"The collateral asset\"}},\"getPrice(address)\":{\"params\":{\"priceFeed\":\"The address of a price feed\"},\"returns\":{\"_0\":\"The price, scaled by `PRICE_SCALE`\"}},\"getSupplyRate(uint256)\":{\"details\":\"Note: Does not accrue interest first\",\"params\":{\"utilization\":\"The utilization to check the supply rate for\"},\"returns\":{\"_0\":\"The per second supply rate at `utilization`\"}},\"getUtilization()\":{\"details\":\"Note: Does not accrue interest first\",\"returns\":{\"_0\":\"The utilization rate of the base asset\"}},\"hasPermission(address,address)\":{\"params\":{\"manager\":\"The manager account\",\"owner\":\"The owner account\"},\"returns\":{\"_0\":\"Whether or not the manager has permission\"}},\"initializeStorage()\":{\"details\":\"Can be used from constructor or proxy\"},\"isAbsorbPaused()\":{\"returns\":{\"_0\":\"Whether or not absorb actions are paused\"}},\"isBorrowCollateralized(address)\":{\"params\":{\"account\":\"The address to check\"},\"returns\":{\"_0\":\"Whether the account is minimally collateralized enough to borrow\"}},\"isBuyPaused()\":{\"returns\":{\"_0\":\"Whether or not buy actions are paused\"}},\"isLiquidatable(address)\":{\"params\":{\"account\":\"The address to check\"},\"returns\":{\"_0\":\"Whether the account is minimally collateralized enough to not be liquidated\"}},\"isSupplyPaused()\":{\"returns\":{\"_0\":\"Whether or not supply actions are paused\"}},\"isTransferPaused()\":{\"returns\":{\"_0\":\"Whether or not transfer actions are paused\"}},\"isWithdrawPaused()\":{\"returns\":{\"_0\":\"Whether or not withdraw actions are paused\"}},\"pause(bool,bool,bool,bool,bool)\":{\"params\":{\"absorbPaused\":\"Boolean for pausing absorb actions\",\"buyPaused\":\"Boolean for pausing buy actions\",\"supplyPaused\":\"Boolean for pausing supply actions\",\"transferPaused\":\"Boolean for pausing transfer actions\",\"withdrawPaused\":\"Boolean for pausing withdraw actions\"}},\"quoteCollateral(address,uint256)\":{\"params\":{\"asset\":\"The collateral asset to get the quote for\",\"baseAmount\":\"The amount of the base asset to get the quote for\"},\"returns\":{\"_0\":\"The quote in terms of the collateral asset\"}},\"supply(address,uint256)\":{\"params\":{\"amount\":\"The quantity to supply\",\"asset\":\"The asset to supply\"}},\"supplyFrom(address,address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to supply\",\"asset\":\"The asset to supply\",\"dst\":\"The address which will hold the balance\",\"from\":\"The supplier address\"}},\"supplyTo(address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to supply\",\"asset\":\"The asset to supply\",\"dst\":\"The address which will hold the balance\"}},\"totalBorrow()\":{\"details\":\"Note: uses updated interest indices to calculate\",\"returns\":{\"_0\":\"The amount of debt*\"}},\"totalSupply()\":{\"details\":\"Note: uses updated interest indices to calculate\",\"returns\":{\"_0\":\"The supply of tokens*\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The quantity to transfer\",\"dst\":\"The recipient address\"},\"returns\":{\"_0\":\"true\"}},\"transferAsset(address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to transfer\",\"asset\":\"The asset to transfer\",\"dst\":\"The recipient address\"}},\"transferAssetFrom(address,address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to transfer\",\"asset\":\"The asset to transfer\",\"dst\":\"The recipient address\",\"src\":\"The sender address\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to transfer\",\"dst\":\"The recipient address\",\"src\":\"The sender address\"},\"returns\":{\"_0\":\"true\"}},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"The quantity to withdraw\",\"asset\":\"The asset to withdraw\"}},\"withdrawFrom(address,address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to withdraw\",\"asset\":\"The asset to withdraw\",\"src\":\"The sender address\",\"to\":\"The recipient address\"}},\"withdrawReserves(address,uint256)\":{\"params\":{\"amount\":\"The amount of reserves to be withdrawn from the protocol\",\"to\":\"An address of the receiver of withdrawn reserves\"}},\"withdrawTo(address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to withdraw\",\"asset\":\"The asset to withdraw\",\"to\":\"The recipient address\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidUInt64()\":[{\"notice\":\"Custom errors *\"}]},\"events\":{\"AbsorbCollateral(address,address,address,uint256,uint256)\":{\"notice\":\"Event emitted when a user's collateral is absorbed by the protocol\"},\"AbsorbDebt(address,address,uint256,uint256)\":{\"notice\":\"Event emitted when a borrow position is absorbed by the protocol\"},\"BuyCollateral(address,address,uint256,uint256)\":{\"notice\":\"Event emitted when a collateral asset is purchased from the protocol\"},\"PauseAction(bool,bool,bool,bool,bool)\":{\"notice\":\"Event emitted when an action is paused/unpaused\"},\"WithdrawReserves(address,uint256)\":{\"notice\":\"Event emitted when reserves are withdrawn by the governor\"}},\"kind\":\"user\",\"methods\":{\"absorb(address,address[])\":{\"notice\":\"Absorb a list of underwater accounts onto the protocol balance sheet\"},\"accrueAccount(address)\":{\"notice\":\"Accrue interest and rewards for an account*\"},\"approveThis(address,address,uint256)\":{\"notice\":\"Sets Comet's ERC20 allowance of an asset for a manager\"},\"balanceOf(address)\":{\"notice\":\"Query the current positive base balance of an account or zero\"},\"baseBorrowMin()\":{\"notice\":\"The minimum base amount required to initiate a borrow\"},\"baseMinForRewards()\":{\"notice\":\"The minimum amount of base principal wei for rewards to accrue\"},\"baseScale()\":{\"notice\":\"The scale for base token (must be less than 18 decimals)\"},\"baseToken()\":{\"notice\":\"The address of the base token contract\"},\"baseTokenPriceFeed()\":{\"notice\":\"The address of the price feed for the base token\"},\"baseTrackingBorrowSpeed()\":{\"notice\":\"The speed at which borrow rewards are tracked (in trackingIndexScale)\"},\"baseTrackingSupplySpeed()\":{\"notice\":\"The speed at which supply rewards are tracked (in trackingIndexScale)\"},\"borrowBalanceOf(address)\":{\"notice\":\"Query the current negative base balance of an account or zero\"},\"borrowKink()\":{\"notice\":\"The point in the borrow rate separating the low interest rate slope and the high interest rate slope (factor)\"},\"borrowPerSecondInterestRateBase()\":{\"notice\":\"Per second borrow base interest rate (factor)\"},\"borrowPerSecondInterestRateSlopeHigh()\":{\"notice\":\"Per second borrow interest rate slope applied when utilization is above kink (factor)\"},\"borrowPerSecondInterestRateSlopeLow()\":{\"notice\":\"Per second borrow interest rate slope applied when utilization is below kink (factor)\"},\"buyCollateral(address,uint256,uint256,address)\":{\"notice\":\"Buy collateral from the protocol using base tokens, increasing protocol reserves A minimum collateral amount should be specified to indicate the maximum slippage acceptable for the buyer.\"},\"decimals()\":{\"notice\":\"The number of decimals for wrapped base token\"},\"extensionDelegate()\":{\"notice\":\"The address of the extension contract delegate\"},\"getAssetInfo(uint8)\":{\"notice\":\"Get the i-th asset info, according to the order they were passed in originally\"},\"getCollateralReserves(address)\":{\"notice\":\"Gets the total balance of protocol collateral reserves for an asset\"},\"getPrice(address)\":{\"notice\":\"Get the current price from a feed\"},\"getReserves()\":{\"notice\":\"Gets the total amount of protocol reserves of the base asset\"},\"governor()\":{\"notice\":\"The admin of the protocol\"},\"hasPermission(address,address)\":{\"notice\":\"Determine if the manager has permission to act on behalf of the owner\"},\"initializeStorage()\":{\"notice\":\"Initialize storage for the contract\"},\"isAllowed(address,address)\":{\"notice\":\"Mapping of users to accounts which may be permitted to manage the user account\"},\"isBorrowCollateralized(address)\":{\"notice\":\"Check whether an account has enough collateral to borrow\"},\"isLiquidatable(address)\":{\"notice\":\"Check whether an account has enough collateral to not be liquidated\"},\"liquidatorPoints(address)\":{\"notice\":\"Mapping of magic liquidator points\"},\"numAssets()\":{\"notice\":\"The number of assets this contract actually supports\"},\"pause(bool,bool,bool,bool,bool)\":{\"notice\":\"Pauses different actions within Comet\"},\"pauseGuardian()\":{\"notice\":\"The account which may trigger pauses\"},\"quoteCollateral(address,uint256)\":{\"notice\":\"Gets the quote for a collateral asset in exchange for an amount of base asset\"},\"storeFrontPriceFactor()\":{\"notice\":\"The fraction of the liquidation penalty that goes to buyers of collateral instead of the protocol\"},\"supply(address,uint256)\":{\"notice\":\"Supply an amount of asset to the protocol\"},\"supplyFrom(address,address,address,uint256)\":{\"notice\":\"Supply an amount of asset from `from` to dst, if allowed\"},\"supplyKink()\":{\"notice\":\"The point in the supply rates separating the low interest rate slope and the high interest rate slope (factor)\"},\"supplyPerSecondInterestRateBase()\":{\"notice\":\"Per second supply base interest rate (factor)\"},\"supplyPerSecondInterestRateSlopeHigh()\":{\"notice\":\"Per second supply interest rate slope applied when utilization is above kink (factor)\"},\"supplyPerSecondInterestRateSlopeLow()\":{\"notice\":\"Per second supply interest rate slope applied when utilization is below kink (factor)\"},\"supplyTo(address,address,uint256)\":{\"notice\":\"Supply an amount of asset to dst\"},\"targetReserves()\":{\"notice\":\"The minimum base token reserves which must be held before collateral is hodled\"},\"totalBorrow()\":{\"notice\":\"Get the total amount of debt\"},\"totalSupply()\":{\"notice\":\"Get the total number of tokens in circulation\"},\"totalsCollateral(address)\":{\"notice\":\"Aggregate variables tracked for each collateral asset\"},\"trackingIndexScale()\":{\"notice\":\"The scale for reward tracking\"},\"transfer(address,uint256)\":{\"notice\":\"ERC20 transfer an amount of base token to dst\"},\"transferAsset(address,address,uint256)\":{\"notice\":\"Transfer an amount of asset to dst\"},\"transferAssetFrom(address,address,address,uint256)\":{\"notice\":\"Transfer an amount of asset from src to dst, if allowed\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"ERC20 transfer an amount of base token from src to dst, if allowed\"},\"userBasic(address)\":{\"notice\":\"Mapping of users to base principal and other basic data\"},\"userCollateral(address,address)\":{\"notice\":\"Mapping of users to collateral data per collateral asset\"},\"userNonce(address)\":{\"notice\":\"The next expected nonce for an address, for validating authorizations via signature\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraw an amount of asset from the protocol\"},\"withdrawFrom(address,address,address,uint256)\":{\"notice\":\"Withdraw an amount of asset from src to `to`, if allowed\"},\"withdrawReserves(address,uint256)\":{\"notice\":\"Withdraws base token reserves if called by the governor\"},\"withdrawTo(address,address,uint256)\":{\"notice\":\"Withdraw an amount of asset to `to`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/comet/contracts/test/CometHarness.sol\":\"CometHarness\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/comet/contracts/Comet.sol\":{\"keccak256\":\"0xab4571bb7ed9430e36563114799dfbdb2525b77d081ebe0d5e59d7e67621451e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c76ef2801c7547be1c04205e4a6fbd955263a6d523658a9887edf10e0034220\",\"dweb:/ipfs/QmVWdyF5Ee1213ehsAXB1i88DJLXSkGT8o1S5PWFPNPUBA\"]},\"project:/contracts/comet/contracts/CometConfiguration.sol\":{\"keccak256\":\"0x58cdf3e481d05a5fb47f25304d104115af196c97d38725d33a2d27a9f01f7b4a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a3f44637440f16fab29a16528b88cbe234ad300f87f3b5e25f8b85ead47bdd35\",\"dweb:/ipfs/QmQGFFE6YKnm1KtTsoMm5fRFKjnhECd6Fr1ZwAsRfJ4bio\"]},\"project:/contracts/comet/contracts/CometCore.sol\":{\"keccak256\":\"0x843ecc64cab2c0cae5a1d7f4111c6d02834f798f3834fe9405f259b476bd875a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0c2d0a9cb559321b9b651b486d8d8d2a4afc8dd4688bfb211af1ecaf95b02700\",\"dweb:/ipfs/QmPpXG8DNtEv8L2rdUuPdHEqnApCk2BXLgPwSJ8pgVXj84\"]},\"project:/contracts/comet/contracts/CometMainInterface.sol\":{\"keccak256\":\"0x5709827ba55f108da7a9ca7b1bcfd0edc7637295496df002f94eb788c6c4801a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://40f5ee85e2ae19abe057c5fcd2b861fc295ade156d517a55f4740da1fe3e8149\",\"dweb:/ipfs/QmTJGCkGZaHYZMPMJcvrju8EB4qjDh2Z7T37fhs8kJbrgv\"]},\"project:/contracts/comet/contracts/CometMath.sol\":{\"keccak256\":\"0x9e404ff1451fb5b533058d31e5fe560f91887e251325ec6f8ae49862fd5b462f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://81e335765a490f22e8383c197b5b39679d440a4b54fadc36f1b6f7cb31985f09\",\"dweb:/ipfs/QmPiB7TkukKA6aShFPu5d1T5D6N8xXwrfnNSD8zksVtTtd\"]},\"project:/contracts/comet/contracts/CometStorage.sol\":{\"keccak256\":\"0xedc38ed37acf51c1f1210bc724e78033b4f2874604918014dde288cd5cf3464c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bbba37919596e53718e4d6b2ae3d60f60b4575852dcbc9abad647f3ef8594751\",\"dweb:/ipfs/QmSnSQVm1SAKhhPo3i7JkvZ8G8vQtAdWBmErHvSDMh9MQR\"]},\"project:/contracts/comet/contracts/ERC20.sol\":{\"keccak256\":\"0xbbdb060282d2bc31a60c7a7e93ce014036039e154281172e07a3f24cf6892567\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ac38dfeba0c599b1b51645b6cd01007d1121762a65adad96ef51e2f1d420203f\",\"dweb:/ipfs/QmQjUMd6qSnF5pepvCPhB5YohCmGzEP6mhX5FBGDktUsGc\"]},\"project:/contracts/comet/contracts/IPriceFeed.sol\":{\"keccak256\":\"0x310068353d00e6a4db31a7245ec49e8e48bb78a26616eb93dc92ef38e1b2218b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7c21788138ef0b331c5e0a93c2463436380924133584de858b87304bce4332a3\",\"dweb:/ipfs/QmV9dhQt6UaHcaVXvbpaARMnfdtj2KgLVs2Nf8wFij9cho\"]},\"project:/contracts/comet/contracts/test/CometHarness.sol\":{\"keccak256\":\"0x0bc28cdc7f751585fc1863f6933b413773598a0dda6413171872fbac83b70126\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdee1bdeca88968ece8c19cffdbfc8fee0ac164cbb92df11faa6656555cce30d\",\"dweb:/ipfs/QmdwMJCYYxnQ2GMEYznLHa89kUsME5ZJ8j3uJaKaQch13X\"]}},\"version\":1}",
  "bytecode": "0x6107406040523462000389576200001f6200001962000588565b620007c8565b60405161540f90816200132282396080518181816106ce01528181610f250152818161176e0152611c8c015260a051818181610a8a015261105b015260c051818181610a42015281816116f101528181611a9701528181611cf501528181611da60152818161309301528181613811015281816138e201528181613f4f0152818161441c0152614520015260e051818181611ed5015281816131d401528181614a160152614e1c01526101005181818161109b0152614f540152610120518181816116a70152612bb201526101405181818161113a01528181612bee0152612c580152610160518181816113af0152612c880152610180518181816115260152612c1501526101a0518181816114ae0152612cc201526101c051818181610bf201528181612cfe0152612d6801526101e051818181610b270152612d9801526102005181818161132b0152612d250152610220518181816109dd0152614de0015261024051818181610e9e015281816132020152818161349c01528181614bea0152614e5401526102605181818161173101526136780152610280518181816107820152612a9e01526102a0518181816115620152612a2101526102c0518181816114ea015261298801526102e051818181610c6c015281816141eb01526145c6015261030051818181610ce70152611e8501526103205181610caa01526103405181818161083c0152818161166a015281816121e1015281816127e701528181613231015281816133e00152614a460152610360518161369f0152610380518161223101526103a0518161221001526103c0518161237e01526103e0518161235d015261040051816123ce015261042051816123ad0152610440518161241e015261046051816123fd0152610480518161246e01526104a0518161244d01526104c051816124be01526104e0518161249d0152610500518161250e015261052051816124ed0152610540518161255e0152610560518161253d015261058051816125ae01526105a0518161258d01526105c051816125fe01526105e051816125dd0152610600518161264e0152610620518161262d0152610640518161269e0152610660518161267d015261068051816126ee01526106a051816126cd01526106c0518161273e01526106e0518161271d0152610700518161278c0152610720518161276b0152f35b600080fd5b50634e487b7160e01b600052604160045260246000fd5b60e081019081106001600160401b03821117620003c157604052565b620003cb6200038e565b604052565b601f909101601f19168101906001600160401b03821190821017620003c157604052565b604051906102a082016001600160401b03811183821017620003c157604052565b51906001600160a01b03821682036200038957565b51906001600160401b03821682036200038957565b51906001600160681b03821682036200038957565b519060ff821682036200038957565b81601f8201121562000389578051906001600160401b03821162000578575b60408051936020916200049b838660051b0187620003d0565b848652828601918360e08097028601019481861162000389578401925b858410620004ca575050505050505090565b86848303126200038957825190620004e282620003a5565b620004ed8562000415565b8252620004fc86860162000415565b868301526200050d84860162000454565b848301526060620005208187016200042a565b908301526080620005338187016200042a565b9083015260a0620005468187016200042a565b9083015260c085810151929091906001600160801b0384168403620003895789938893820152815201930192620004b8565b620005826200038e565b62000482565b620067318038038060405192620005a08285620003d0565b8339810190602081830312620003895780516001600160401b03918282116200038957016102a0818403126200038957620005da620003f4565b92620005e68262000415565b8452620005f66020830162000415565b6020850152620006096040830162000415565b60408501526200061c6060830162000415565b60608501526200062f6080830162000415565b60808501526200064260a083016200042a565b60a08501526200065560c083016200042a565b60c08501526200066860e083016200042a565b60e08501526101006200067d8184016200042a565b90850152610120620006918184016200042a565b90850152610140620006a58184016200042a565b90850152610160620006b98184016200042a565b90850152610180620006cd8184016200042a565b908501526101a0620006e18184016200042a565b908501526101c0620006f58184016200042a565b908501526101e0620007098184016200042a565b908501526102006200071d8184016200042a565b90850152610220620007318184016200043f565b90850152610240620007458184016200043f565b90850152610260620007598184016200043f565b908501526102809283830151908111620003895762000779920162000463565b9082015290565b908160209103126200038957620007979062000454565b90565b506040513d6000823e3d90fd5b8115620007b2570490565b634e487b7160e01b600052601260045260246000fd5b6040818101805190929190620007f590620007e9906001600160a01b031681565b6001600160a01b031690565b9181518093819363313ce56760e01b91828452602093849160049889915afa94851562000c79575b60009562000c55575b5060ff8516916012831162000c45576101a08581018051919790946001600160401b0392909190670de0b6b3a76400009084161162000c3557610280968789019b600f8d51511162000c25576102208a810180519097919391906001600160681b03161562000c155790600860ff8f9493838f9160608e930197620008b9620007e9620007e98b5160018060a01b031690565b93518094819382525afa90811562000c05575b60009162000bd1575b50160362000bc1576200092f92916200090f6200091f928e620008fe815160018060a01b031690565b60805201516001600160a01b031690565b60a052516001600160a01b031690565b60c052516001600160a01b031690565b60e05260808901516001600160a01b0316610100908152965162000963906001600160401b03165b6001600160401b031690565b905261032052600a0a1690610240978289526101c093620f42406200099462000957878b015160018060401b031690565b946102609586521062000bb45750508751620f4240900461036052516001600160681b039081166102c0526101e0868101516001600160401b039081169096526102008088015187166102a0529887015182166102e05291860151166103005260a0850151841661012090815260c08601516301e13380908616819004861661014090815260e0880151871682900487166101609081529588015187168290048716610180908152928801518716909852968601518516879004851690925291840151831685900483169091529091015181169190910416905280515160ff1661034052805162000a859062000ce3565b6103a05261038052805162000a9a9062000fca565b6103e0526103c052805162000aaf9062000ff8565b6104205261040052805162000ac49062001026565b6104605261044052805162000ad99062001054565b6104a05261048052805162000aee906200114d565b6104e0526104c052805162000b03906200117b565b6105205261050052805162000b1890620011a9565b6105605261054052805162000b2d90620011d8565b6105a05261058052805162000b429062001207565b6105e0526105c052805162000b579062001236565b6106205261060052805162000b6c9062001265565b6106605261064052805162000b819062001294565b6106a05261068052805162000b9690620012c3565b6106e0526106c0525162000baa90620012f2565b6107205261070052565b51630456c65960e51b8152fd5b8851630456c65960e51b81528e90fd5b62000bf69150843d861162000bfd575b62000bed8183620003d0565b81019062000780565b38620008d5565b503d62000be1565b62000c0f6200079a565b620008cc565b8851636e77247560e01b81528e90fd5b865163df8153c760e01b81528c90fd5b84516324dc918f60e11b81528a90fd5b8151630456c65960e51b81528790fd5b62000c71919550833d851162000bfd5762000bed8183620003d0565b933862000826565b62000c836200079a565b6200081d565b6040519060e082016001600160401b0381118382101762000cd3575b6040528160c06000918281528260208201528260408201528260608201528260808201528260a08201520152565b62000cdd6200038e565b62000ca5565b62000ced62000c89565b5080511562000fc1576020015180519091906001600160a01b03165b6020838101516001600160a01b03169060409462000d2a8682015160ff1690565b936001600160a01b0390811693841562000fb157169286519263313ce56760e01b808552600860ff600496848189818c5afa90811562000fa1575b60009162000f7f575b50160362000f6f579060ff91895190815281818781875afa91821562000f5f575b60009262000f3d575b5050818716918291160362000f2d576060830180519093906001600160401b03165b6080820180519095919062000dd8906001600160401b031662000957565b6001600160401b03918216101562000f1d578551670de0b6b3a764000091166001600160401b03161162000f0d575162000e549062000e3f9062000e299062000e469083906001600160401b031683565b655af3107a40006001600160401b039091160490565b61ffff1690565b96516001600160401b031690565b60a082015190959062000e759062000e3f906001600160401b031662000e29565b9961ffff808816908716101562000f0057505060c0015162000eac916200095791600a9190910a906001600160801b0316620007a7565b60a092831b61ffff60a01b169190911760b09390931b61ffff60b01b169290921760c09690961b61ffff60c01b1695909517949290921b60ff60a01b161760a89190911b600160a81b600160e81b03161790565b5163327d763960e21b8152fd5b89516304d6b32560e41b81528690fd5b8a5163327d763960e21b81528790fd5b8751630456c65960e51b81528490fd5b62000f579250803d1062000bfd5762000bed8183620003d0565b388062000d98565b62000f696200079a565b62000d8f565b8851630456c65960e51b81528590fd5b62000f9a9150853d871162000bfd5762000bed8183620003d0565b3862000d6e565b62000fab6200079a565b62000d65565b5050505050509050600090600090565b50600090600090565b62000fd462000c89565b5080516001101562000fc1576040015180519091906001600160a01b031662000d09565b6200100262000c89565b5080516002101562000fc1576060015180519091906001600160a01b031662000d09565b6200103062000c89565b5080516003101562000fc1576080015180519091906001600160a01b031662000d09565b906200105f62000c89565b50815160049290831015620011445760a0015180519092906001600160a01b0316602084810151919290916001600160a01b031694604095620010a58783015160ff1690565b946001600160a01b03908116918215620011335716938751600860ff63313ce56760e01b92838152848189818c5afa90811562000fa15760009162000f7f5750160362000f6f579060ff91895190815281818781875afa91821562000f5f5760009262000f3d575050818716918291160362000f2d576060830180519093906001600160401b031662000dba565b505050505050509050600090600090565b50600091508190565b6200115762000c89565b5080516005101562000fc15760c0015180519091906001600160a01b031662000d09565b6200118562000c89565b5080516006101562000fc15760e0015180519091906001600160a01b031662000d09565b620011b362000c89565b5080516007101562000fc157610100015180519091906001600160a01b031662000d09565b620011e262000c89565b5080516008101562000fc157610120015180519091906001600160a01b031662000d09565b6200121162000c89565b5080516009101562000fc157610140015180519091906001600160a01b031662000d09565b6200124062000c89565b508051600a101562000fc157610160015180519091906001600160a01b031662000d09565b6200126f62000c89565b508051600b101562000fc157610180015180519091906001600160a01b031662000d09565b6200129e62000c89565b508051600c101562000fc1576101a0015180519091906001600160a01b031662000d09565b620012cd62000c89565b508051600d101562000fc1576101c0015180519091906001600160a01b031662000d09565b620012fc62000c89565b508051600e101562000fc1576101e0015180519091906001600160a01b031662000d0956fe60806040526004361015610018575b610016614f47565b005b60003560e01c8063042e02cf1461061c5780630902f1ac146106135780630bc47ad11461060a5780630c340a241461060157806318160ddd146105f8578063189bb2f1146105ef5780631aad7e2e146105e65780631c9f7fb9146105dd5780631f5954bd146105d457806323b872dd146105cb57806324a3d622146105c257806326441318146105b95780632a48cf12146105b05780632b92a07d146105a75780632d05670b1461059e5780632e04b8e714610595578063300e6beb1461058c578063313ce5671461058357806332176c491461057a578063374c49b41461057157806338aa813f146105685780633b3bec2e1461055f57806341976e09146105565780634232cd631461054d578063439e2e451461054457806344c1e5eb1461053b57806344c35d071461053257806344ff241d1461052957806359e017bd146105205780635a94b8d1146105175780635df654d21461050e57806367800b5f1461050557806370a08231146104fc5780637914acc7146104f35780637ac88ed1146104ea5780637eb71131146104e1578063804de71f146104d85780638285ef40146104cf5780638596da23146104c65780638d5d814c146104bd57806390323177146104b45780639241a561146104ab5780639364e18a146104a257806394920cca146104995780639ea99a5a146104905780639fa83b5a146104875780639ff567f81461047e578063a165437914610475578063a1a1ef431461046c578063a46fe83b14610463578063a5b4ff791461045a578063a9059cbb14610451578063aba7f15e14610448578063ad14777c1461043f578063b3650a9d14610436578063b9775b031461042d578063bbe4fd5014610424578063bfe69c8d1461041b578063c1ee2c1814610412578063c3b35a7e14610409578063c3cecfd214610400578063c55dae63146103f7578063c5fa15cf146103ee578063c8c7fe6b146103e5578063cde68041146103dc578063d8e5f611146103d3578063d955759d146103ca578063dc4abafd146103c1578063e380ae96146103b8578063e478795d146103af578063e4e6e779146103a6578063e7dad6bd1461039d578063e9a6e59714610394578063f2b9fdb81461038b578063f3fef3a314610382578063f8ba4cff146103795763fbad9c710361000e5761037461209c565b61000e565b50610374612082565b50610374612055565b50610374612028565b50610374611f9c565b50610374611ebe565b50610374611d4b565b50610374611c60565b50610374611c46565b50610374611bd2565b50610374611bb3565b50610374611b8c565b50610374611b72565b50610374611b47565b50610374611ac6565b50610374611a80565b50610374611a1b565b50610374611a01565b506103746119e5565b50610374611945565b5061037461191a565b5061037461186c565b5061037461180c565b50610374611754565b50610374611718565b506103746116ca565b5061037461168e565b5061037461164f565b50610374611628565b506103746115dd565b506103746115b5565b50610374611585565b50610374611549565b5061037461150d565b506103746114d1565b50610374611495565b50610374611479565b50610374611452565b50610374611433565b506103746113d2565b50610374611396565b5061037461137a565b5061037461134e565b50610374611312565b506103746112ea565b506103746112c3565b5061037461122d565b50610374611121565b506103746110ca565b50610374611084565b50610374610ecb565b50610374610e85565b50610374610e6b565b50610374610e51565b50610374610e29565b50610374610df4565b50610374610d32565b50610374610d0a565b50610374610cce565b50610374610c8f565b50610374610c53565b50610374610c15565b50610374610bd9565b50610374610b72565b50610374610b0e565b50610374610af2565b50610374610a73565b50610374610a2c565b506103746109c4565b50610374610936565b506103746107e9565b50610374610769565b506103746106fd565b506103746106b7565b50610374610691565b5061037461066d565b5061037461063b565b6001600160a01b0381160361063657565b600080fd5b503461063657602036600319011261063657602061066360043561065e81610625565b613380565b6040519015158152f35b503461063657600036600319011261063657602061068961303e565b604051908152f35b50346106365760003660031901126106365760206001805460f81c161515604051908152f35b5034610636576000366003190112610636576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461063657600036600319011261063657602066038d7ea4c68000610760610724615221565b6001600160681b036001600160401b036107576001549361075164ffffffffff91828760d01c16906128a2565b16612b09565b5016911661219e565b04604051908152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b6020908160408183019282815285518094520193019160005b8281106107cc575050505090565b83516001600160a01b0316855293810193928101926001016107be565b5034610636576020806003193601126106365761083361082860043561080e81610625565b6001600160a01b0316600090815260056020526040902090565b5460e81c61ffff1690565b9060008060ff807f000000000000000000000000000000000000000000000000000000000000000016915b8181168381101561089b57600161ffff911b871616610886575b61088190615323565b61085e565b9261089361088191615323565b939050610878565b50509291836108aa9116615355565b91600091825b8581168281101561092457600161ffff911b8816166108d8575b6108d390615323565b6108b0565b9261091c6108d3916109176108fe866108f0896121d0565b01516001600160a01b031690565b610908838a615387565b6001600160a01b039091169052565b6153a9565b9390506108ca565b6040518061093288826107a5565b0390f35b5034610636576000806003193601126109c15764ffffffffff60015460d01c166109b05761098c610965615221565b6001805464ffffffffff60d01b191660d09290921b64ffffffffff60d01b16919091179055565b80546001600160801b0319166e038d7ea4c6800000038d7ea4c68000178155604051f35b60405162dc149f60e41b8152600490fd5b80fd5b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b606090600319011261063657600435610a1881610625565b90602435610a2581610625565b9060443590565b503461063657610a68610a3e36610a00565b91907f00000000000000000000000000000000000000000000000000000000000000009133613f17565b602060405160018152f35b5034610636576000366003190112610636576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b608090600319011261063657600435610ad181610625565b90602435610ade81610625565b90604435610aeb81610625565b9060643590565b503461063657610016610b0436610ab9565b92919091336143ed565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b604090600319011261063657600435610b6281610625565b90602435610b6f81610625565b90565b503461063657610932610bb4610b8736610b4a565b9060018060a01b0316600052600660205260406000209060018060a01b0316600052602052604060002090565b54604080516001600160801b038316815260809290921c602083015290918291820190565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461063657602036600319011261063657600435610c3381610625565b60018060a01b031660005260046020526020604060002054604051908152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461063657600036600319011261063657602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5034610636576020366003190112610636576020610689600435610d2d81610625565b614eff565b5034610636576020366003190112610636576020610663600435610d5581610625565b61316b565b610df29092919260e08061010083019560ff815116845260018060a01b0380602083015116602086015260408201511660408501526001600160401b036060820151166060850152610dbc608082015160808601906001600160401b03169052565b60a0818101516001600160401b03169085015260c0818101516001600160401b03169085015201516001600160801b0316910152565b565b503461063657602036600319011261063657610932610e1d600435610e1881610625565b6127d4565b60405191829182610d5a565b5034610636576020366003190112610636576020610689600435610e4c81610625565b612e7d565b503461063657610016610e6336610a00565b9133336137df565b503461063657610016610e7d36610a00565b913333613f17565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b8015150361063657565b50346106365760a036600319011261063657600435610ee981610ec1565b602435610ef581610ec1565b60443591610f0283610ec1565b60643592610f0f84610ec1565b608435610f1b81610ec1565b60018060a01b03807f0000000000000000000000000000000000000000000000000000000000000000163314159081611057575b50611046577f3be39979091ae7ca962aa1c44e645f2df3c221b79f324afa5f44aedc8d2f690d946110419261100c610f8f610f8987615213565b60ff1690565b610fa4610f9b89615213565b60011b60fe1690565b17610fba610fb184615213565b60021b60fc1690565b17610fd0610fc785615213565b60031b60f81690565b17610fe6610fdd86615213565b60041b60f01690565b600180546001600160f81b03169290911760f81b6001600160f81b031916919091179055565b6040519586958693909594919260809360a0860197151586521515602086015215156040850152151560608401521515910152565b0390a1005b6040516282b42960e81b8152600490fd5b90507f00000000000000000000000000000000000000000000000000000000000000001633141538610f4f565b5034610636576000366003190112610636576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610636576020366003190112610636576004356110e881610625565b6001600160a01b03166000908152600260209081526040918290205482516001600160801b038216815260809190911c91810191909152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761118f57604052565b61119761115d565b604052565b60a081019081106001600160401b0382111761118f57604052565b61010081019081106001600160401b0382111761118f57604052565b90601f801991011681019081106001600160401b0382111761118f57604052565b60405190610df2826111b7565b602435906001600160801b038216820361063657565b604435906001600160801b038216820361063657565b50346106365760603660031901126106365760043561124b81610625565b60403660231901126106365760405161126381611174565b61126b611201565b8152611275611217565b916020820192835260018060a01b031660005260026020526040600020916112a86001600160801b038093511684613c25565b51825490911660809190911b6001600160801b031916179055005b5034610636576000366003190112610636576020600460015460f81c161515604051908152f35b503461063657602036600319011261063657602061068960043561130d81610625565b614ea1565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461063657604036600319011261063657602061068960043561137181610625565b60243590614d85565b5034610636576000366003190112610636576020610689612ddf565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461063657600036600319011261063657602066038d7ea4c680006107606113f9615221565b6001600160681b036001600160401b036114266001549361075164ffffffffff91828760d01c16906128a2565b9050169160681c1661219e565b5034610636576000366003190112610636576020600854604051908152f35b5034610636576000366003190112610636576020600860015460f81c161515604051908152f35b50346106365761001661148b36610ab9565b92919091336137df565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346106365760203660031901126106365760206115a4600435612cc0565b6001600160401b0360405191168152f35b50346106365760203660031901126106365760206106896004356115d881610625565b612f37565b503461063657602060ff61161c6115f336610b4a565b6001600160a01b0391821660009081526003865260408082209290931681526020919091522090565b54166040519015158152f35b5034610636576000366003190112610636576020600260015460f81c161515604051908152f35b503461063657600036600319011261063657602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461063657604036600319011261063657610a686004356116eb81610625565b602435907f0000000000000000000000000000000000000000000000000000000000000000903333613f17565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346106365761176336610a00565b6001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831633036110465760405163095ea7b360e01b81526001600160a01b03949094166004850152602484019190915260209183916044918391600091165af180156117ff575b6117d857005b6100169060203d81116117f8575b6117f081836111d3565b810190613b21565b503d6117e6565b611807612e70565b6117d2565b50346106365760403660031901126106365760043561182a81610625565b60243580600c0b8103610636576100169160018060a01b031660005260056020526040600020906001600160681b0319825416906001600160681b0316179055565b50346106365760603660031901126106365761001660043561188d81610625565b60243561189981610625565b6118a1611217565b9161191460018060a01b038216928360005260066020526001600160801b036118e08260406000209060018060a01b0316600052602052604060002090565b5416936000526006602052610e188561190f8360406000209060018060a01b0316600052602052604060002090565b613c25565b90613e13565b5034610636576000366003190112610636576020611936615221565b64ffffffffff60405191168152f35b50346106365760203660031901126106365761001660043561196681610625565b61196e6128ec565b60018060a01b038116600052600560205260406000206119da604051916119948361119c565b5480600c0b83526001600160401b03808260681c1660208501528160a81c1660408401526119d061ffff8260e81c16606085019061ffff169052565b60f81c6080830152565b8051600c0b916135f5565b5034610636576100166119f736610ab9565b9291909133613f17565b503461063657610016611a1336610a00565b9133336143ed565b503461063657604036600319011261063657600435611a3981610625565b602435906001600160401b03908183116106365736602384011215610636578260040135918211610636573660248360051b8501011161063657602461001693019061483c565b5034610636576000366003190112610636576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461063657602036600319011261063657600435611ae481610625565b60018060a01b0316600052600760205260806040600020546040519063ffffffff811682526001600160401b038160201c1660208301526001600160801b038160601c16604083015260e01c6060820152f35b60e4359060ff8216820361063657565b50346106365760203660031901126106365760043560ff8116810361063657610e1d610932916121d0565b5034610636576020610663611b8636610b4a565b90614f86565b5034610636576000366003190112610636576020601060015460f81c161515604051908152f35b50346106365760203660031901126106365760206115a4600435612bb0565b503461063657602036600319011261063657600435611bf081610625565b60018060a01b0316600052600560205260a06040600020546040519080600c0b82526001600160401b03808260681c1660208401528160a81c16604083015261ffff8160e81c16606083015260f81c6080820152f35b503461063657602036600319011261063657600435600855005b503461063657604036600319011261063657600435611c7e81610625565b602435906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116330361104657611cbb61303e565b60008112908115611d39575b50611d275781611d19847fec4431f2ba1a9382f6b0c4352b888cba6f7db91667d9f776abe5ad8ddc5401b6947f0000000000000000000000000000000000000000000000000000000000000000614600565b6040519384521691602090a2005b60405163128bd24d60e31b8152600490fd5b611d439150615208565b831138611cc7565b503461063657608036600319011261063657600435611d6981610625565b60443560643591611d7983610625565b601060015460f81c16611eac57611d8e61303e565b60008112159081611e81575b50611e6f57611dca82337f0000000000000000000000000000000000000000000000000000000000000000613b36565b611dd48282614d85565b926024358410611e5d57611de782612f37565b8411611d27577ff891b2a411b0e66a5f0a6ff1368670fefa287a13f541eb633a386a1a9cc7046b91611e35611e5892611e2e611e2288615161565b6001600160801b031690565b9083614600565b6040805194855260208501959095526001600160a01b0316933393918291820190565b0390a3005b60405163fa6ad35560e01b8152600490fd5b604051631d99ddbf60e01b8152600490fd5b90507f0000000000000000000000000000000000000000000000000000000000000000111538611d9a565b6040516313d0ff5960e31b8152600490fd5b5034610636576000366003190112610636576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600435906001600160401b038216820361063657565b602435906001600160401b038216820361063657565b604435906001600160401b038216820361063657565b606435906001600160401b038216820361063657565b608435906001600160681b038216820361063657565b60a435906001600160681b038216820361063657565b60c4359064ffffffffff8216820361063657565b50346106365761010036600319011261063657610016604051611fbe816111b7565b611fc6611f04565b8152611fd0611f1a565b6020820152611fdd611f30565b6040820152611fea611f46565b6060820152611ff7611f5c565b6080820152612004611f72565b60a0820152612011611f88565b60c082015261201e611b37565b60e0820152615260565b50346106365760403660031901126106365761001660043561204981610625565b602435903333336137df565b50346106365760403660031901126106365761001660043561207681610625565b602435903333336143ed565b5034610636576000366003190112610636576100166128ec565b5034610636576080366003190112610636576004356120ba81610625565b602435906120c782610625565b6120cf611217565b606435916001600160801b038316830361063657611914610016946127d4565b604051906120fc826111b7565b8160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b50634e487b7160e01b600052601260045260246000fd5b50634e487b7160e01b600052601160045260246000fd5b66038d7ea4c68000908060001904821181151516612177570290565b61217f612144565b0290565b655af3107a4000908060001904821181151516612177570290565b8060001904821181151516612177570290565b60ff16604d81116121c3575b600a0a90565b6121cb612144565b6121bd565b6121d86120ef565b5060ff811660ff7f0000000000000000000000000000000000000000000000000000000000000000168110156127c2578061235257507f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005b61ffff808260a01c1661226390612183565b6001600160401b0316818360b01c1661227b90612183565b6001600160401b0316918360c01c1661229390612183565b6001600160401b0316928460a01c60ff166122ad906121b1565b6001600160401b0316906122d16001600160401b038084169060a889901c1661219e565b6001600160801b0316956122e36111f4565b60ff90981688526001600160a01b039182166020890152166001600160a01b031660408701526001600160401b031660608601526001600160401b031660808501526001600160401b031660a08401526001600160401b031660c08301526001600160801b031660e082015290565b600181036123a257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600281036123f257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b6003810361244257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b6004810361249257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600581036124e257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b6006810361253257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b6007810361258257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600881036125d257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b6009810361262257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600a810361267257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600b81036126c257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600c810361271257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600d810361276257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600e036127b0577f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b60405163971241a160e01b8152600490fd5b604051633640530560e01b8152600490fd5b906127dd6120ef565b5060009060ff92837f000000000000000000000000000000000000000000000000000000000000000016925b838582161061282457604051633640530560e01b8152600490fd5b61282d816121d0565b60208101516001600160a01b0384811691161461284f57506001018416612809565b93505050915090565b906040516128658161119c565b608081935480600c0b83526001600160401b03808260681c1660208501528160a81c16604084015261ffff8160e81c16606084015260f81c910152565b64ffffffffff91821691168181106128b8570390565b6128c0612144565b0390565b906001600160401b0380809316911680920381116128e0570190565b6128e8612144565b0190565b6128f4615221565b61291e61291461290e60015464ffffffffff9060d01c1690565b836128a2565b64ffffffffff1690565b9081612928575050565b8161298361296761293b610df295612b09565b91909167ffffffffffffffff60401b6000549160401b169067ffffffffffffffff60401b191617600055565b6001600160401b03166001600160401b03196000541617600055565b6001547f000000000000000000000000000000000000000000000000000000000000000091906001600160681b031682811015612a8b575b506001546129dc9060681c6001600160681b03165b6001600160681b031690565b91821015612a0e575b50506001805464ffffffffff60d01b191660d09290921b64ffffffffff60d01b16919091179055565b612a4f612a4a612a8493612a45612a5f947f000000000000000000000000000000000000000000000000000000000000000061219e565b613496565b615115565b60005460c01c6128c4565b6128c4565b600080546001600160c01b031660c09290921b6001600160c01b031916919091179055565b38806129e5565b612ad6612ac2612a4a612b0393612a45867f000000000000000000000000000000000000000000000000000000000000000061219e565b60005460801c6001600160401b03166128c4565b6000805467ffffffffffffffff60801b191660809290921b67ffffffffffffffff60801b16919091179055565b386129bb565b906000546001600160401b0392838083169260401c169381612b2c575b50509190565b81612b7f612b79612b599794612b8b612b9197612b8587612b60612b8599612b52612ddf565b9e8f612bb0565b169d612cc0565b169b612b7f612b79670de0b6b3a7640000998a9361219e565b8461219e565b04615115565b906128c4565b9861219e565b913880612b26565b811981116128e0570190565b8181106128b8570390565b7f0000000000000000000000000000000000000000000000000000000000000000808211612c395750612a4a670de0b6b3a7640000612c12610b6f937f000000000000000000000000000000000000000000000000000000000000000061219e565b047f0000000000000000000000000000000000000000000000000000000000000000612b99565b610b6f91612a4a91612cac670de0b6b3a764000091612c7c83612c12837f000000000000000000000000000000000000000000000000000000000000000061219e565b93818110612cb3575b037f000000000000000000000000000000000000000000000000000000000000000061219e565b0490612b99565b612cbb612144565b612c85565b7f0000000000000000000000000000000000000000000000000000000000000000808211612d495750612a4a670de0b6b3a7640000612d22610b6f937f000000000000000000000000000000000000000000000000000000000000000061219e565b047f0000000000000000000000000000000000000000000000000000000000000000612b99565b610b6f91612a4a91612cac670de0b6b3a764000091612d8c83612d22837f000000000000000000000000000000000000000000000000000000000000000061219e565b93818110612dbc575b037f000000000000000000000000000000000000000000000000000000000000000061219e565b612dc4612144565b612d95565b8115612dd3570490565b612ddb61212d565b0490565b600054600154612e2166038d7ea4c68000916001600160401b036001600160681b039084612e1182881684861661219e565b049560401c169160681c1661219e565b0481612e2e575050600090565b670de0b6b3a7640000908060001904821181151516612e4c57020490565b612e54612144565b020490565b519069ffffffffffffffffffff8216820361063657565b506040513d6000823e3d90fd5b604051633fabe5a360e21b81529060a090829060049082906001600160a01b03165afa908115612f1b575b600091612ecf575b506000811315612ebd5790565b60405163fd1ee34960e01b8152600490fd5b9060a0823d8211612f13575b81612ee860a093836111d3565b810103126109c15750612efa81612e59565b50612f0c608060208301519201612e59565b5038612eb0565b3d9150612edb565b612f23612e70565b612ea8565b90816020910312610636575190565b6040516370a0823160e01b8152306004820152906001600160a01b0316602082602481845afa918215612fc1575b600092612f91575b5060005260026020526001600160801b0360406000205416908181106128b8570390565b612fb391925060203d8111612fba575b612fab81836111d3565b810190612f28565b9038612f6d565b503d612fa1565b612fc9612e70565b612f65565b600082128015600160ff1b8401831216612ff8575b6001600160ff1b0383018213166128b8570390565b613000612144565b612fe3565b6000811280156001600160ff1b03839003841316613031575b600160ff1b8290038312166128e0570190565b613039612144565b61301e565b610b6f613049615221565b61306c6130676129146001549364ffffffffff8560d01c16906128a2565b612b09565b6040516370a0823160e01b8152306004820152929091906020846024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa93841561315e575b600094613126575b509161311a6131146131149361310d6131209666038d7ea4c68000926001600160401b0384613100826001600160681b03941684861661219e565b0497169160681c1661219e565b04956151bc565b916151bc565b90612fce565b90613005565b613120939194506131146131149361310d61315161311a9460203d8111612fba57612fab81836111d3565b97949650509350506130c5565b613166612e70565b6130bd565b9061319261318b8360018060a01b03166000526005602052604060002090565b54600c0b90565b906000928383600c0b1215613377576132286131cf6131c96108288496959660018060a01b03166000526005602052604060002090565b93614fce565b6131f87f0000000000000000000000000000000000000000000000000000000000000000612e7d565b6001600160401b037f000000000000000000000000000000000000000000000000000000000000000016916134e0565b90849360ff95867f000000000000000000000000000000000000000000000000000000000000000016955b87811690878210156133695790889161ffff600180931b891616613279575b0116613253565b959091508281121561335d579061335789926131206133528861334c61334060806133316132f78f6132cc6132b06132ea926121d0565b6001600160a01b03909816600090815260066020526040902090565b6020888101516001600160a01b031660009081529190526040902090565b546001600160801b031690565b604086015161330e906001600160a01b0316612e7d565b6001600160801b0361332a60608901516001600160401b031690565b92166134c1565b9301516001600160401b031690565b6001600160401b031690565b90613483565b6151bc565b95613272565b50955050945050505090565b505094509450509050121590565b50915050600190565b906133a061318b8360018060a01b03166000526005602052604060002090565b906000928383600c0b121561347e576133d76131cf6131c96108288496959660018060a01b03166000526005602052604060002090565b90849360ff95867f000000000000000000000000000000000000000000000000000000000000000016955b87811690878210156134715790889161ffff600180931b891616613428575b0116613402565b9590915082811215613465579061345f89926131206133528861334c61334060a06133316132f78f6132cc6132b06132ea926121d0565b95613421565b50509450945050505090565b5050945094505090501290565b509050565b670de0b6b3a764000091612ddb9161219e565b612dc9907f00000000000000000000000000000000000000000000000000000000000000009061219e565b6001600160401b03916134d39161219e565b9116908115612dd3570490565b91906134f36001600160401b03916151bc565b6000808513949082136001600160ff1b038682168482048411166135a4575b600160ff1b96600085129185918316858a05831216613597575b60008512938416828a0586121661358a575b05831291161661357d575b029116918215613570575b8114600019831416613564570590565b61356c612144565b0590565b61357861212d565b613554565b613585612144565b613549565b613592612144565b61353e565b61359f612144565b61352c565b6135ac612144565b613512565b6001600160401b0391821691168181106128b8570390565b600c0b6c7fffffffffffffffffffffffff1981146135e8575b60000390565b6135f0612144565b6135e2565b61371490610df2936136088451600c0b90565b600c82900b855260009182918683600c83900b811361379f5761369d6136766136ea946001600160681b0361366f6133406136c497613669602061365a612a4a9a546001600160401b039060801c1690565b9201516001600160401b031690565b906135b1565b911661219e565b7f000000000000000000000000000000000000000000000000000000000000000090612dc9565b7f000000000000000000000000000000000000000000000000000000000000000090612dc9565b6136dd6040890191612a5a83516001600160401b031690565b6001600160401b03169052565b600c0b1261378d575461080e9060801c6001600160401b03165b6001600160401b03166020850152565b815160208301516040840151606085015160809095015160e89590951b61ffff60e81b1660a89190911b67ffffffffffffffff60a81b166001600160681b0390931660689290921b67ffffffffffffffff60681b169190911791909117176001600160f81b031960f89390931b92909216919091179055565b5461379a9060c01c613704565b61080e565b61369d6136766137da946137d56129d06129d06137cf6133406136c499613669602061365a612a4a9c5460c01c90565b936135c9565b61219e565b6136ea565b939290936001805460f81c16611eac576137fc6138009186614f86565b1590565b611046576001600160a01b038181167f0000000000000000000000000000000000000000000000000000000000000000909116036138575750610df29260001983036138d657915061385181614eff565b916138d6565b90613865610df29493615161565b92613c74565b906001600160681b0380809316911680920381116128e0570190565b6001600160681b0391821691168181106128b8570390565b600180546cffffffffffffffffffffffffff60681b191660689290921b6cffffffffffffffffffffffffff60681b16919091179055565b6139bd919261390681837f0000000000000000000000000000000000000000000000000000000000000000613b36565b61390e6128ec565b6001600160a01b03841660009081526005602052604090206139c89061393890612858565b612858565b8051600c0b906139c261396861396161395c61395386614fce565b613120896151bc565b615065565b8094613aa7565b97906139a46139888a6139836001546001600160681b031690565b61386b565b6001600160681b03166001600160681b03196001541617600155565b60015460681c6001600160681b0316613887565b613887565b61389f565b866135f5565b6040519081526001600160a01b0393841693849216907fd1cf3d156d5f8f0d50f6c122ed609cec09d35c9b9fb3fff6ea0959134dae424e90602090a36001600160681b038116613a16575050565b6000805160206153ba833981519152613a54613a44600093613a3f85546001600160401b031690565b615040565b6040519081529081906020820190565b0390a3565b600c91820b910b6000821280156c7fffffffffffffffffffffffff198401831216613a9a575b826c7fffffffffffffffffffffffff018213166128b8570390565b613aa2612144565b613a7f565b91909180600c0b83600c0b818112613b1457600012613ada5750613acb9192613a59565b6001600160681b031690600090565b600013613afb57613aeb9192613a59565b6001600160681b03169060009190565b613b04906135c9565b6001600160681b03908116921690565b5050509050600090600090565b908160209103126106365751610b6f81610ec1565b6040516323b872dd60e01b81526001600160a01b039283166004820152306024820152604481019390935260209183916064918391600091165af1908115613bb9575b600091613b9b575b5015613b8957565b60405163073d1efd60e51b8152600490fd5b613bb3915060203d81116117f8576117f081836111d3565b38613b81565b613bc1612e70565b613b79565b90604051604081018181106001600160401b03821117613bfc575b60405291546001600160801b038116835260801c6020830152565b613c0461115d565b613be1565b906001600160801b0380809316911680920381116128e0570190565b906001600160801b03166001600160801b0319825416179055565b9060206001600160801b0391613c598382511685613c25565b0151908254916001600160801b03199060801b169116179055565b919290926001600160801b0390613c8e8284168583613b36565b613c97816127d4565b90613cbc613cb78260018060a01b03166000526002602052604060002090565b613bc6565b92613ce7613cda86613cd587516001600160801b031690565b613c09565b6001600160801b03168552565b83516001600160801b031690613d0a611e2260e08601516001600160801b031690565b911611613e0157613dd1613db185613dfc94613dcb7ffa56f7b24f17183d81894d3ac2ee654e3c26388d17a28dbd9549b8114304e1f49761190f87613d6f8e613d8d613d866132ea85613d6f8560018060a01b03166000526006602052604060002090565b9060018060a01b0316600052602052604060002090565b9889613c09565b988995613dac8560018060a01b03166000526002602052604060002090565b613c40565b6001600160a01b0316600090815260066020526040902090565b89613e13565b6040516001600160801b0390941684526001600160a01b039081169581169416929081906020820190565b0390a4565b604051637ac7b99d60e11b8152600490fd5b909290916001600160801b03908116158080613f0c575b15613e9257505050613e6a613e4e60ff610df2945116600160ff61ffff92161b1690565b6001600160a01b03909216600090815260056020526040902090565b805461ffff60e81b19811660e891821c61ffff16909317901b61ffff60e81b16919091179055565b159182613f01575b5050613ea4575050565b61ffff613edd613ec360ff610df2955116600160ff61ffff92161b1690565b199260018060a01b03166000526005602052604060002090565b91825460e81c161681549061ffff60e81b9060e81b169061ffff60e81b1916179055565b161590503880613e9a565b508183161515613e2a565b93929093600260015460f81c16611eac576137fc613f359186614f86565b611046576001600160a01b0384811683821614613fad57807f00000000000000000000000000000000000000000000000000000000000000001690821614600014613f995750610df2926000198303613fd0579150613f9382614ea1565b91613fd0565b90613fa7610df29493615161565b926142ae565b60405163e397a99b60e01b8152600490fd5b600160ff1b81146135e85760000390565b919091613fdb6128ec565b6001600160a01b0381166000908152600560205260409020613ffc90612858565b6001600160a01b038416600090815260056020526040902061401d90612858565b92815161402a90600c0b90565b93805161403790600c0b90565b9261404186614fce565b61404a846151bc565b61405391612fce565b9261405d85614fce565b90614067906151bc565b61407091613005565b9061407a84615065565b6140848193615065565b97889361409091614249565b9861409b9197613aa7565b98878a6001546140b1906001600160681b031690565b906140bb9161386b565b906140c591613887565b6140e5906001600160681b03166001600160681b03196001541617600155565b60015460681c6001600160681b0316906140fe9161386b565b9061410891613887565b6141119061389f565b61411b91876135f5565b61412591876135f5565b600081126141e0575b506001600160681b0391828216614191575b5050811661414c575050565b6000805160206153ba833981519152613a54614175600093613a3f85546001600160401b031690565b6040519081526001600160a01b03909416939081906020820190565b6000805160206153ba8339815191526141d66141ba600094613a3f86546001600160401b031690565b6040519081526001600160a01b03909316929081906020820190565b0390a33880614140565b6141e990613fbf565b7f0000000000000000000000000000000000000000000000000000000000000000116142375761421b6137fc8361316b565b614225573861412e565b604051630a62fbdb60e11b8152600490fd5b604051637139da2360e11b8152600490fd5b919082600c0b81600c0b818113613b145760001361426c5750613acb9192613a59565b60001261427d57613aeb9192613a59565b614286906135c9565b6001600160681b03928316921690565b6001600160801b0391821691168181106128b8570390565b6001600160a01b0381811660008181526006602081815260408084208987168086529083528185205489881686529383528185209085529091529091205494969591946001600160801b03949293929190851690851661430e8882614296565b916143198982613c09565b9183876143388760018060a01b03166000526006602052604060002090565b6001600160a01b039091166000908152602091909152604090209061435c91613c25565b6001600160a01b038b81166000908152600660209081526040808320938b1683529290522061438c908490613c25565b614395876127d4565b936143a1918587613e13565b6143ab928a613e13565b6143b49061316b565b1561422557806020927f29db89d45e1a802b4d55e202984fce9faf1d30aedf86503ff1ea0ed9ebb64201946040519716875216951693a4565b93929093600460015460f81c16611eac576137fc61440b9186614f86565b611046576001600160a01b038181167f0000000000000000000000000000000000000000000000000000000000000000909116036144625750610df292600019830361447657915061445c82614ea1565b91614476565b90614470610df29493615161565b9261468a565b90916139bd926144846128ec565b6001600160a01b03831660009081526005602052604090206144a590612858565b61450f6144b38251600c0b90565b6144c86144bf82614fce565b61311a876151bc565b926139c26144df6144d886615065565b8094614249565b6144fb613988836139b860019e959e546001600160681b031690565b60015460681c6001600160681b031661386b565b600081126145bb575b5061454482827f0000000000000000000000000000000000000000000000000000000000000000614600565b6040519182526001600160a01b0392831692169082907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb90602090a36001600160681b038216614592575050565b6000805160206153ba833981519152613a54613a44600094613a3f86546001600160401b031690565b6145c490613fbf565b7f000000000000000000000000000000000000000000000000000000000000000011614237576145f66137fc8461316b565b6142255738614518565b60405163a9059cbb60e01b81526001600160a01b039283166004820152602481019390935260209183916044918391600091165af190811561467d575b60009161465f575b501561464d57565b60405163cefaffeb60e01b8152600490fd5b614677915060203d81116117f8576117f081836111d3565b38614645565b614685612e70565b61463d565b909260018060a01b0391828116928360005260066020526147436001600160801b0392610d55846146d18960406000209060018060a01b0316600052602052604060002090565b54166146dd8782614296565b906147106146fd8b60018060a01b03166000526002602052604060002090565b61470a8a8a835416614296565b90613c25565b6147348261190f8c613d6f8860018060a01b03166000526006602052604060002090565b61473d8a6127d4565b84613e13565b1561422557806020927fd6d480d5b3068db003533b170d67561494d72e3bf9fa40a266471351ebba9e1694169561477b878983614600565b60405196875216951693a4565b50634e487b7160e01b600052603260045260246000fd5b91908110156147b0575b60051b0190565b6147b8614788565b6147a9565b35610b6f81610625565b906040516060608082016001600160401b039083811082821117614819575b6040528294549063ffffffff821684528160201c1660208401526001600160801b0381831c16604084015260e01c910152565b61482161115d565b6147e6565b60019063ffffffff8091169081146128e0570190565b9291909260016008815460f81c16611eac575a946148586128ec565b60005b848110614994575050506149349061491a6148f46148ef614881610df297985a90612ba5565b6148e86148cf6148ab6148a68860018060a01b03166000526007602052604060002090565b6147c7565b98612a4a6148c56148c08c5163ffffffff1690565b614826565b63ffffffff168b52565b6136dd60208a0191612a5a83516001600160401b031690565b489061219e565b615161565b61490d6040860191613cd583516001600160801b031690565b6001600160801b03169052565b6001600160a01b0316600090815260076020526040902090565b815160208084015160408501516060958601516001600160e01b031960e09190911b166fffffffffffffffffffffffffffffffff60601b9190961b1663ffffffff9093166bffffffffffffffff000000009190921b161717919091179055565b806149b26149ac6149a78694898761479f565b6147bd565b866149b8565b0161485b565b916149c56137fc83613380565b614d7357906149e96139338260018060a01b03166000526005602052604060002090565b906149f58251600c0b90565b936149ff85614fce565b92606090614a118282015161ffff1690565b614a3a7f0000000000000000000000000000000000000000000000000000000000000000612e7d565b96600092839860ff9a8b7f0000000000000000000000000000000000000000000000000000000000000000169a5b8c8116908c821015614bc557908d91898c8c61ffff600180961b8c1616614a94575b5050500116614a68565b90919a614aa0846121d0565b6020818101516001600160a01b0386811660009081526006845260408082209290931680825291845282812080546001600160801b03198116909155600290945291909120805493946001600160801b039384169492939092614b0591869116614296565b614b0e91613c25565b604084810151909f906001600160a01b0316614b2990612e7d565b908501516001600160401b0316614b49916001600160801b0386166134c1565b60c09490940151614b63906001600160401b031685613483565b614b6c91612b99565b9d516001600160801b0392909216825260208201929092526001600160a01b0391821693821692909116907f9850ab1af75177e4a9201c65a2cf7976d5d28e40ef63494b44366f86b2f9412e90604090a4898c8c614a8a565b5050949796995094509691509750614c1c614c1661335285614c116001600160401b037f000000000000000000000000000000000000000000000000000000000000000016809a61219e565b612dc9565b82613005565b9160008312614d6a575b614c2f83615065565b9687614c3b91876135f5565b6001600160a01b03851660009081526005602052604090208790805461ffff60e81b19169055614c6a91613aa7565b6001546001600160681b031690614c809161386b565b614ca0906001600160681b03166001600160681b03196001541617600155565b60015460681c6001600160681b031690614cb991613887565b614cc29061389f565b614ccb91612fce565b614cd490615208565b92614cdf91846134c1565b6040805193845260208401919091526001600160a01b039182169485939216917f1547a878dc89ad3c367b6338b4be6a65a5dd74fb77ae044da1e8747ef1f4f62f9190a380600c0b600012614d32575050565b6000805160206153ba833981519152613a54613a44600093614d64614d5e86546001600160401b031690565b916151df565b90615040565b60009250614c26565b604051636ef5bcdd60e11b8152600490fd5b90614e4a614d95610b6f936127d4565b614e156060614e40614db260018060a01b03604086015116612e7d565b6001600160401b039384918260c088015116614e04670de0b6b3a7640000948286938410614e94575b8303167f000000000000000000000000000000000000000000000000000000000000000061219e565b04808410614e87575b83039061219e565b04956137d57f0000000000000000000000000000000000000000000000000000000000000000612e7d565b920151169061219e565b908015614e7a575b7f00000000000000000000000000000000000000000000000000000000000000009104612dc9565b614e8261212d565b614e52565b614e8f612144565b614e0d565b614e9c612144565b614ddb565b614ec4614eac615221565b61075164ffffffffff918260015460d01c16906128a2565b506001600160a01b03909116600090815260056020526040812054600c0b919080831315614ef95750614d64610b6f926151df565b91505090565b614f0a614eac615221565b6001600160a01b03909216600090815260056020526040812054600c0b92915080831215614ef95750614d64614f42610b6f936135c9565b6151df565b50600036818037808036817f00000000000000000000000000000000000000000000000000000000000000005af43d82803e15614f82573d90f35b3d90fd5b6001600160a01b03808316911690811491908215614fa357505090565b60009081526003602090815260408083206001600160a01b0390941683529290522060ff9150541690565b6000600c82900b1261500a5766038d7ea4c68000615004610b6f926001600160401b0360005416906001600160681b031661219e565b046151bc565b61503b613352610b6f9261502c6001600160401b0360005460401c16916135c9565b6001600160681b031690615040565b613fbf565b66038d7ea4c68000916001600160681b036001600160401b03612ddb9316911661219e565b600081126150a857615096610b6f916150896001600160401b03600054169161215b565b811561509b575b0461513b565b615187565b6150a361212d565b615090565b6150f66150966150d26150dc610b6f946150d76001600160401b0360005460401c16938492613fbf565b61215b565b612b99565b60018110615108575b81156150fb575b600019010461513b565b6135c9565b61510361212d565b6150ec565b615110612144565b6150e5565b6001600160401b0390818111615129571690565b6040516372a1cb5160e11b8152600490fd5b6001600160681b039081811161514f571690565b604051630dc7925560e11b8152600490fd5b6001600160801b0390818111615175571690565b60405163762ea71160e11b8152600490fd5b6001600160681b03166c7fffffffffffffffffffffffff81116151aa57600c0b90565b604051639369ae3560e01b8152600490fd5b6001600160ff1b0381116151cd5790565b60405163e7e828ad60e01b8152600490fd5b600081600c0b126151f6576001600160681b031690565b60405163363b64b760e11b8152600490fd5b600081126151f65790565b60009015610b6f5750600190565b60085480156152345764ffffffffff1690565b506501000000000042101561524e5764ffffffffff421690565b604051633d32ffdb60e01b8152600490fd5b64ffffffffff60c0610df2926001600160401b0381511660208201519060408301519067ffffffffffffffff60401b6001600160401b03861b6060860151871b169360401b1617906001600160401b0360801b9060801b1617176000556152f96001600160681b036152ee816080850151166001600160681b03166001600160681b03196001541617600155565b60a08301511661389f565b01516001805464ffffffffff60d01b19169290911660d01b64ffffffffff60d01b16919091179055565b60ff6001911660ff81146128e0570190565b6020906001600160401b03811161534d5760051b0190565b6147b861115d565b9061535f82615335565b61536c60405191826111d3565b828152809261537d601f1991615335565b0190602036910137565b602091815181101561539c575b60051b010190565b6153a4614788565b615394565b60019060001981146128e057019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204f9d5495cedbee0563f2dcaf4cf37aafd1b9db75c40722f4329845a9548002ca64736f6c634300080f0033",
  "deployedBytecode": "0x60806040526004361015610018575b610016614f47565b005b60003560e01c8063042e02cf1461061c5780630902f1ac146106135780630bc47ad11461060a5780630c340a241461060157806318160ddd146105f8578063189bb2f1146105ef5780631aad7e2e146105e65780631c9f7fb9146105dd5780631f5954bd146105d457806323b872dd146105cb57806324a3d622146105c257806326441318146105b95780632a48cf12146105b05780632b92a07d146105a75780632d05670b1461059e5780632e04b8e714610595578063300e6beb1461058c578063313ce5671461058357806332176c491461057a578063374c49b41461057157806338aa813f146105685780633b3bec2e1461055f57806341976e09146105565780634232cd631461054d578063439e2e451461054457806344c1e5eb1461053b57806344c35d071461053257806344ff241d1461052957806359e017bd146105205780635a94b8d1146105175780635df654d21461050e57806367800b5f1461050557806370a08231146104fc5780637914acc7146104f35780637ac88ed1146104ea5780637eb71131146104e1578063804de71f146104d85780638285ef40146104cf5780638596da23146104c65780638d5d814c146104bd57806390323177146104b45780639241a561146104ab5780639364e18a146104a257806394920cca146104995780639ea99a5a146104905780639fa83b5a146104875780639ff567f81461047e578063a165437914610475578063a1a1ef431461046c578063a46fe83b14610463578063a5b4ff791461045a578063a9059cbb14610451578063aba7f15e14610448578063ad14777c1461043f578063b3650a9d14610436578063b9775b031461042d578063bbe4fd5014610424578063bfe69c8d1461041b578063c1ee2c1814610412578063c3b35a7e14610409578063c3cecfd214610400578063c55dae63146103f7578063c5fa15cf146103ee578063c8c7fe6b146103e5578063cde68041146103dc578063d8e5f611146103d3578063d955759d146103ca578063dc4abafd146103c1578063e380ae96146103b8578063e478795d146103af578063e4e6e779146103a6578063e7dad6bd1461039d578063e9a6e59714610394578063f2b9fdb81461038b578063f3fef3a314610382578063f8ba4cff146103795763fbad9c710361000e5761037461209c565b61000e565b50610374612082565b50610374612055565b50610374612028565b50610374611f9c565b50610374611ebe565b50610374611d4b565b50610374611c60565b50610374611c46565b50610374611bd2565b50610374611bb3565b50610374611b8c565b50610374611b72565b50610374611b47565b50610374611ac6565b50610374611a80565b50610374611a1b565b50610374611a01565b506103746119e5565b50610374611945565b5061037461191a565b5061037461186c565b5061037461180c565b50610374611754565b50610374611718565b506103746116ca565b5061037461168e565b5061037461164f565b50610374611628565b506103746115dd565b506103746115b5565b50610374611585565b50610374611549565b5061037461150d565b506103746114d1565b50610374611495565b50610374611479565b50610374611452565b50610374611433565b506103746113d2565b50610374611396565b5061037461137a565b5061037461134e565b50610374611312565b506103746112ea565b506103746112c3565b5061037461122d565b50610374611121565b506103746110ca565b50610374611084565b50610374610ecb565b50610374610e85565b50610374610e6b565b50610374610e51565b50610374610e29565b50610374610df4565b50610374610d32565b50610374610d0a565b50610374610cce565b50610374610c8f565b50610374610c53565b50610374610c15565b50610374610bd9565b50610374610b72565b50610374610b0e565b50610374610af2565b50610374610a73565b50610374610a2c565b506103746109c4565b50610374610936565b506103746107e9565b50610374610769565b506103746106fd565b506103746106b7565b50610374610691565b5061037461066d565b5061037461063b565b6001600160a01b0381160361063657565b600080fd5b503461063657602036600319011261063657602061066360043561065e81610625565b613380565b6040519015158152f35b503461063657600036600319011261063657602061068961303e565b604051908152f35b50346106365760003660031901126106365760206001805460f81c161515604051908152f35b5034610636576000366003190112610636576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461063657600036600319011261063657602066038d7ea4c68000610760610724615221565b6001600160681b036001600160401b036107576001549361075164ffffffffff91828760d01c16906128a2565b16612b09565b5016911661219e565b04604051908152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b6020908160408183019282815285518094520193019160005b8281106107cc575050505090565b83516001600160a01b0316855293810193928101926001016107be565b5034610636576020806003193601126106365761083361082860043561080e81610625565b6001600160a01b0316600090815260056020526040902090565b5460e81c61ffff1690565b9060008060ff807f000000000000000000000000000000000000000000000000000000000000000016915b8181168381101561089b57600161ffff911b871616610886575b61088190615323565b61085e565b9261089361088191615323565b939050610878565b50509291836108aa9116615355565b91600091825b8581168281101561092457600161ffff911b8816166108d8575b6108d390615323565b6108b0565b9261091c6108d3916109176108fe866108f0896121d0565b01516001600160a01b031690565b610908838a615387565b6001600160a01b039091169052565b6153a9565b9390506108ca565b6040518061093288826107a5565b0390f35b5034610636576000806003193601126109c15764ffffffffff60015460d01c166109b05761098c610965615221565b6001805464ffffffffff60d01b191660d09290921b64ffffffffff60d01b16919091179055565b80546001600160801b0319166e038d7ea4c6800000038d7ea4c68000178155604051f35b60405162dc149f60e41b8152600490fd5b80fd5b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b606090600319011261063657600435610a1881610625565b90602435610a2581610625565b9060443590565b503461063657610a68610a3e36610a00565b91907f00000000000000000000000000000000000000000000000000000000000000009133613f17565b602060405160018152f35b5034610636576000366003190112610636576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b608090600319011261063657600435610ad181610625565b90602435610ade81610625565b90604435610aeb81610625565b9060643590565b503461063657610016610b0436610ab9565b92919091336143ed565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b604090600319011261063657600435610b6281610625565b90602435610b6f81610625565b90565b503461063657610932610bb4610b8736610b4a565b9060018060a01b0316600052600660205260406000209060018060a01b0316600052602052604060002090565b54604080516001600160801b038316815260809290921c602083015290918291820190565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461063657602036600319011261063657600435610c3381610625565b60018060a01b031660005260046020526020604060002054604051908152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461063657600036600319011261063657602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5034610636576020366003190112610636576020610689600435610d2d81610625565b614eff565b5034610636576020366003190112610636576020610663600435610d5581610625565b61316b565b610df29092919260e08061010083019560ff815116845260018060a01b0380602083015116602086015260408201511660408501526001600160401b036060820151166060850152610dbc608082015160808601906001600160401b03169052565b60a0818101516001600160401b03169085015260c0818101516001600160401b03169085015201516001600160801b0316910152565b565b503461063657602036600319011261063657610932610e1d600435610e1881610625565b6127d4565b60405191829182610d5a565b5034610636576020366003190112610636576020610689600435610e4c81610625565b612e7d565b503461063657610016610e6336610a00565b9133336137df565b503461063657610016610e7d36610a00565b913333613f17565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b8015150361063657565b50346106365760a036600319011261063657600435610ee981610ec1565b602435610ef581610ec1565b60443591610f0283610ec1565b60643592610f0f84610ec1565b608435610f1b81610ec1565b60018060a01b03807f0000000000000000000000000000000000000000000000000000000000000000163314159081611057575b50611046577f3be39979091ae7ca962aa1c44e645f2df3c221b79f324afa5f44aedc8d2f690d946110419261100c610f8f610f8987615213565b60ff1690565b610fa4610f9b89615213565b60011b60fe1690565b17610fba610fb184615213565b60021b60fc1690565b17610fd0610fc785615213565b60031b60f81690565b17610fe6610fdd86615213565b60041b60f01690565b600180546001600160f81b03169290911760f81b6001600160f81b031916919091179055565b6040519586958693909594919260809360a0860197151586521515602086015215156040850152151560608401521515910152565b0390a1005b6040516282b42960e81b8152600490fd5b90507f00000000000000000000000000000000000000000000000000000000000000001633141538610f4f565b5034610636576000366003190112610636576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610636576020366003190112610636576004356110e881610625565b6001600160a01b03166000908152600260209081526040918290205482516001600160801b038216815260809190911c91810191909152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761118f57604052565b61119761115d565b604052565b60a081019081106001600160401b0382111761118f57604052565b61010081019081106001600160401b0382111761118f57604052565b90601f801991011681019081106001600160401b0382111761118f57604052565b60405190610df2826111b7565b602435906001600160801b038216820361063657565b604435906001600160801b038216820361063657565b50346106365760603660031901126106365760043561124b81610625565b60403660231901126106365760405161126381611174565b61126b611201565b8152611275611217565b916020820192835260018060a01b031660005260026020526040600020916112a86001600160801b038093511684613c25565b51825490911660809190911b6001600160801b031916179055005b5034610636576000366003190112610636576020600460015460f81c161515604051908152f35b503461063657602036600319011261063657602061068960043561130d81610625565b614ea1565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461063657604036600319011261063657602061068960043561137181610625565b60243590614d85565b5034610636576000366003190112610636576020610689612ddf565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461063657600036600319011261063657602066038d7ea4c680006107606113f9615221565b6001600160681b036001600160401b036114266001549361075164ffffffffff91828760d01c16906128a2565b9050169160681c1661219e565b5034610636576000366003190112610636576020600854604051908152f35b5034610636576000366003190112610636576020600860015460f81c161515604051908152f35b50346106365761001661148b36610ab9565b92919091336137df565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346106365760203660031901126106365760206115a4600435612cc0565b6001600160401b0360405191168152f35b50346106365760203660031901126106365760206106896004356115d881610625565b612f37565b503461063657602060ff61161c6115f336610b4a565b6001600160a01b0391821660009081526003865260408082209290931681526020919091522090565b54166040519015158152f35b5034610636576000366003190112610636576020600260015460f81c161515604051908152f35b503461063657600036600319011261063657602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461063657604036600319011261063657610a686004356116eb81610625565b602435907f0000000000000000000000000000000000000000000000000000000000000000903333613f17565b50346106365760003660031901126106365760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346106365761176336610a00565b6001600160a01b03917f0000000000000000000000000000000000000000000000000000000000000000831633036110465760405163095ea7b360e01b81526001600160a01b03949094166004850152602484019190915260209183916044918391600091165af180156117ff575b6117d857005b6100169060203d81116117f8575b6117f081836111d3565b810190613b21565b503d6117e6565b611807612e70565b6117d2565b50346106365760403660031901126106365760043561182a81610625565b60243580600c0b8103610636576100169160018060a01b031660005260056020526040600020906001600160681b0319825416906001600160681b0316179055565b50346106365760603660031901126106365761001660043561188d81610625565b60243561189981610625565b6118a1611217565b9161191460018060a01b038216928360005260066020526001600160801b036118e08260406000209060018060a01b0316600052602052604060002090565b5416936000526006602052610e188561190f8360406000209060018060a01b0316600052602052604060002090565b613c25565b90613e13565b5034610636576000366003190112610636576020611936615221565b64ffffffffff60405191168152f35b50346106365760203660031901126106365761001660043561196681610625565b61196e6128ec565b60018060a01b038116600052600560205260406000206119da604051916119948361119c565b5480600c0b83526001600160401b03808260681c1660208501528160a81c1660408401526119d061ffff8260e81c16606085019061ffff169052565b60f81c6080830152565b8051600c0b916135f5565b5034610636576100166119f736610ab9565b9291909133613f17565b503461063657610016611a1336610a00565b9133336143ed565b503461063657604036600319011261063657600435611a3981610625565b602435906001600160401b03908183116106365736602384011215610636578260040135918211610636573660248360051b8501011161063657602461001693019061483c565b5034610636576000366003190112610636576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461063657602036600319011261063657600435611ae481610625565b60018060a01b0316600052600760205260806040600020546040519063ffffffff811682526001600160401b038160201c1660208301526001600160801b038160601c16604083015260e01c6060820152f35b60e4359060ff8216820361063657565b50346106365760203660031901126106365760043560ff8116810361063657610e1d610932916121d0565b5034610636576020610663611b8636610b4a565b90614f86565b5034610636576000366003190112610636576020601060015460f81c161515604051908152f35b50346106365760203660031901126106365760206115a4600435612bb0565b503461063657602036600319011261063657600435611bf081610625565b60018060a01b0316600052600560205260a06040600020546040519080600c0b82526001600160401b03808260681c1660208401528160a81c16604083015261ffff8160e81c16606083015260f81c6080820152f35b503461063657602036600319011261063657600435600855005b503461063657604036600319011261063657600435611c7e81610625565b602435906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116330361104657611cbb61303e565b60008112908115611d39575b50611d275781611d19847fec4431f2ba1a9382f6b0c4352b888cba6f7db91667d9f776abe5ad8ddc5401b6947f0000000000000000000000000000000000000000000000000000000000000000614600565b6040519384521691602090a2005b60405163128bd24d60e31b8152600490fd5b611d439150615208565b831138611cc7565b503461063657608036600319011261063657600435611d6981610625565b60443560643591611d7983610625565b601060015460f81c16611eac57611d8e61303e565b60008112159081611e81575b50611e6f57611dca82337f0000000000000000000000000000000000000000000000000000000000000000613b36565b611dd48282614d85565b926024358410611e5d57611de782612f37565b8411611d27577ff891b2a411b0e66a5f0a6ff1368670fefa287a13f541eb633a386a1a9cc7046b91611e35611e5892611e2e611e2288615161565b6001600160801b031690565b9083614600565b6040805194855260208501959095526001600160a01b0316933393918291820190565b0390a3005b60405163fa6ad35560e01b8152600490fd5b604051631d99ddbf60e01b8152600490fd5b90507f0000000000000000000000000000000000000000000000000000000000000000111538611d9a565b6040516313d0ff5960e31b8152600490fd5b5034610636576000366003190112610636576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600435906001600160401b038216820361063657565b602435906001600160401b038216820361063657565b604435906001600160401b038216820361063657565b606435906001600160401b038216820361063657565b608435906001600160681b038216820361063657565b60a435906001600160681b038216820361063657565b60c4359064ffffffffff8216820361063657565b50346106365761010036600319011261063657610016604051611fbe816111b7565b611fc6611f04565b8152611fd0611f1a565b6020820152611fdd611f30565b6040820152611fea611f46565b6060820152611ff7611f5c565b6080820152612004611f72565b60a0820152612011611f88565b60c082015261201e611b37565b60e0820152615260565b50346106365760403660031901126106365761001660043561204981610625565b602435903333336137df565b50346106365760403660031901126106365761001660043561207681610625565b602435903333336143ed565b5034610636576000366003190112610636576100166128ec565b5034610636576080366003190112610636576004356120ba81610625565b602435906120c782610625565b6120cf611217565b606435916001600160801b038316830361063657611914610016946127d4565b604051906120fc826111b7565b8160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b50634e487b7160e01b600052601260045260246000fd5b50634e487b7160e01b600052601160045260246000fd5b66038d7ea4c68000908060001904821181151516612177570290565b61217f612144565b0290565b655af3107a4000908060001904821181151516612177570290565b8060001904821181151516612177570290565b60ff16604d81116121c3575b600a0a90565b6121cb612144565b6121bd565b6121d86120ef565b5060ff811660ff7f0000000000000000000000000000000000000000000000000000000000000000168110156127c2578061235257507f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005b61ffff808260a01c1661226390612183565b6001600160401b0316818360b01c1661227b90612183565b6001600160401b0316918360c01c1661229390612183565b6001600160401b0316928460a01c60ff166122ad906121b1565b6001600160401b0316906122d16001600160401b038084169060a889901c1661219e565b6001600160801b0316956122e36111f4565b60ff90981688526001600160a01b039182166020890152166001600160a01b031660408701526001600160401b031660608601526001600160401b031660808501526001600160401b031660a08401526001600160401b031660c08301526001600160801b031660e082015290565b600181036123a257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600281036123f257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b6003810361244257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b6004810361249257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600581036124e257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b6006810361253257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b6007810361258257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600881036125d257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b6009810361262257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600a810361267257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600b81036126c257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600c810361271257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600d810361276257507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b600e036127b0577f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612251565b60405163971241a160e01b8152600490fd5b604051633640530560e01b8152600490fd5b906127dd6120ef565b5060009060ff92837f000000000000000000000000000000000000000000000000000000000000000016925b838582161061282457604051633640530560e01b8152600490fd5b61282d816121d0565b60208101516001600160a01b0384811691161461284f57506001018416612809565b93505050915090565b906040516128658161119c565b608081935480600c0b83526001600160401b03808260681c1660208501528160a81c16604084015261ffff8160e81c16606084015260f81c910152565b64ffffffffff91821691168181106128b8570390565b6128c0612144565b0390565b906001600160401b0380809316911680920381116128e0570190565b6128e8612144565b0190565b6128f4615221565b61291e61291461290e60015464ffffffffff9060d01c1690565b836128a2565b64ffffffffff1690565b9081612928575050565b8161298361296761293b610df295612b09565b91909167ffffffffffffffff60401b6000549160401b169067ffffffffffffffff60401b191617600055565b6001600160401b03166001600160401b03196000541617600055565b6001547f000000000000000000000000000000000000000000000000000000000000000091906001600160681b031682811015612a8b575b506001546129dc9060681c6001600160681b03165b6001600160681b031690565b91821015612a0e575b50506001805464ffffffffff60d01b191660d09290921b64ffffffffff60d01b16919091179055565b612a4f612a4a612a8493612a45612a5f947f000000000000000000000000000000000000000000000000000000000000000061219e565b613496565b615115565b60005460c01c6128c4565b6128c4565b600080546001600160c01b031660c09290921b6001600160c01b031916919091179055565b38806129e5565b612ad6612ac2612a4a612b0393612a45867f000000000000000000000000000000000000000000000000000000000000000061219e565b60005460801c6001600160401b03166128c4565b6000805467ffffffffffffffff60801b191660809290921b67ffffffffffffffff60801b16919091179055565b386129bb565b906000546001600160401b0392838083169260401c169381612b2c575b50509190565b81612b7f612b79612b599794612b8b612b9197612b8587612b60612b8599612b52612ddf565b9e8f612bb0565b169d612cc0565b169b612b7f612b79670de0b6b3a7640000998a9361219e565b8461219e565b04615115565b906128c4565b9861219e565b913880612b26565b811981116128e0570190565b8181106128b8570390565b7f0000000000000000000000000000000000000000000000000000000000000000808211612c395750612a4a670de0b6b3a7640000612c12610b6f937f000000000000000000000000000000000000000000000000000000000000000061219e565b047f0000000000000000000000000000000000000000000000000000000000000000612b99565b610b6f91612a4a91612cac670de0b6b3a764000091612c7c83612c12837f000000000000000000000000000000000000000000000000000000000000000061219e565b93818110612cb3575b037f000000000000000000000000000000000000000000000000000000000000000061219e565b0490612b99565b612cbb612144565b612c85565b7f0000000000000000000000000000000000000000000000000000000000000000808211612d495750612a4a670de0b6b3a7640000612d22610b6f937f000000000000000000000000000000000000000000000000000000000000000061219e565b047f0000000000000000000000000000000000000000000000000000000000000000612b99565b610b6f91612a4a91612cac670de0b6b3a764000091612d8c83612d22837f000000000000000000000000000000000000000000000000000000000000000061219e565b93818110612dbc575b037f000000000000000000000000000000000000000000000000000000000000000061219e565b612dc4612144565b612d95565b8115612dd3570490565b612ddb61212d565b0490565b600054600154612e2166038d7ea4c68000916001600160401b036001600160681b039084612e1182881684861661219e565b049560401c169160681c1661219e565b0481612e2e575050600090565b670de0b6b3a7640000908060001904821181151516612e4c57020490565b612e54612144565b020490565b519069ffffffffffffffffffff8216820361063657565b506040513d6000823e3d90fd5b604051633fabe5a360e21b81529060a090829060049082906001600160a01b03165afa908115612f1b575b600091612ecf575b506000811315612ebd5790565b60405163fd1ee34960e01b8152600490fd5b9060a0823d8211612f13575b81612ee860a093836111d3565b810103126109c15750612efa81612e59565b50612f0c608060208301519201612e59565b5038612eb0565b3d9150612edb565b612f23612e70565b612ea8565b90816020910312610636575190565b6040516370a0823160e01b8152306004820152906001600160a01b0316602082602481845afa918215612fc1575b600092612f91575b5060005260026020526001600160801b0360406000205416908181106128b8570390565b612fb391925060203d8111612fba575b612fab81836111d3565b810190612f28565b9038612f6d565b503d612fa1565b612fc9612e70565b612f65565b600082128015600160ff1b8401831216612ff8575b6001600160ff1b0383018213166128b8570390565b613000612144565b612fe3565b6000811280156001600160ff1b03839003841316613031575b600160ff1b8290038312166128e0570190565b613039612144565b61301e565b610b6f613049615221565b61306c6130676129146001549364ffffffffff8560d01c16906128a2565b612b09565b6040516370a0823160e01b8152306004820152929091906020846024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa93841561315e575b600094613126575b509161311a6131146131149361310d6131209666038d7ea4c68000926001600160401b0384613100826001600160681b03941684861661219e565b0497169160681c1661219e565b04956151bc565b916151bc565b90612fce565b90613005565b613120939194506131146131149361310d61315161311a9460203d8111612fba57612fab81836111d3565b97949650509350506130c5565b613166612e70565b6130bd565b9061319261318b8360018060a01b03166000526005602052604060002090565b54600c0b90565b906000928383600c0b1215613377576132286131cf6131c96108288496959660018060a01b03166000526005602052604060002090565b93614fce565b6131f87f0000000000000000000000000000000000000000000000000000000000000000612e7d565b6001600160401b037f000000000000000000000000000000000000000000000000000000000000000016916134e0565b90849360ff95867f000000000000000000000000000000000000000000000000000000000000000016955b87811690878210156133695790889161ffff600180931b891616613279575b0116613253565b959091508281121561335d579061335789926131206133528861334c61334060806133316132f78f6132cc6132b06132ea926121d0565b6001600160a01b03909816600090815260066020526040902090565b6020888101516001600160a01b031660009081529190526040902090565b546001600160801b031690565b604086015161330e906001600160a01b0316612e7d565b6001600160801b0361332a60608901516001600160401b031690565b92166134c1565b9301516001600160401b031690565b6001600160401b031690565b90613483565b6151bc565b95613272565b50955050945050505090565b505094509450509050121590565b50915050600190565b906133a061318b8360018060a01b03166000526005602052604060002090565b906000928383600c0b121561347e576133d76131cf6131c96108288496959660018060a01b03166000526005602052604060002090565b90849360ff95867f000000000000000000000000000000000000000000000000000000000000000016955b87811690878210156134715790889161ffff600180931b891616613428575b0116613402565b9590915082811215613465579061345f89926131206133528861334c61334060a06133316132f78f6132cc6132b06132ea926121d0565b95613421565b50509450945050505090565b5050945094505090501290565b509050565b670de0b6b3a764000091612ddb9161219e565b612dc9907f00000000000000000000000000000000000000000000000000000000000000009061219e565b6001600160401b03916134d39161219e565b9116908115612dd3570490565b91906134f36001600160401b03916151bc565b6000808513949082136001600160ff1b038682168482048411166135a4575b600160ff1b96600085129185918316858a05831216613597575b60008512938416828a0586121661358a575b05831291161661357d575b029116918215613570575b8114600019831416613564570590565b61356c612144565b0590565b61357861212d565b613554565b613585612144565b613549565b613592612144565b61353e565b61359f612144565b61352c565b6135ac612144565b613512565b6001600160401b0391821691168181106128b8570390565b600c0b6c7fffffffffffffffffffffffff1981146135e8575b60000390565b6135f0612144565b6135e2565b61371490610df2936136088451600c0b90565b600c82900b855260009182918683600c83900b811361379f5761369d6136766136ea946001600160681b0361366f6133406136c497613669602061365a612a4a9a546001600160401b039060801c1690565b9201516001600160401b031690565b906135b1565b911661219e565b7f000000000000000000000000000000000000000000000000000000000000000090612dc9565b7f000000000000000000000000000000000000000000000000000000000000000090612dc9565b6136dd6040890191612a5a83516001600160401b031690565b6001600160401b03169052565b600c0b1261378d575461080e9060801c6001600160401b03165b6001600160401b03166020850152565b815160208301516040840151606085015160809095015160e89590951b61ffff60e81b1660a89190911b67ffffffffffffffff60a81b166001600160681b0390931660689290921b67ffffffffffffffff60681b169190911791909117176001600160f81b031960f89390931b92909216919091179055565b5461379a9060c01c613704565b61080e565b61369d6136766137da946137d56129d06129d06137cf6133406136c499613669602061365a612a4a9c5460c01c90565b936135c9565b61219e565b6136ea565b939290936001805460f81c16611eac576137fc6138009186614f86565b1590565b611046576001600160a01b038181167f0000000000000000000000000000000000000000000000000000000000000000909116036138575750610df29260001983036138d657915061385181614eff565b916138d6565b90613865610df29493615161565b92613c74565b906001600160681b0380809316911680920381116128e0570190565b6001600160681b0391821691168181106128b8570390565b600180546cffffffffffffffffffffffffff60681b191660689290921b6cffffffffffffffffffffffffff60681b16919091179055565b6139bd919261390681837f0000000000000000000000000000000000000000000000000000000000000000613b36565b61390e6128ec565b6001600160a01b03841660009081526005602052604090206139c89061393890612858565b612858565b8051600c0b906139c261396861396161395c61395386614fce565b613120896151bc565b615065565b8094613aa7565b97906139a46139888a6139836001546001600160681b031690565b61386b565b6001600160681b03166001600160681b03196001541617600155565b60015460681c6001600160681b0316613887565b613887565b61389f565b866135f5565b6040519081526001600160a01b0393841693849216907fd1cf3d156d5f8f0d50f6c122ed609cec09d35c9b9fb3fff6ea0959134dae424e90602090a36001600160681b038116613a16575050565b6000805160206153ba833981519152613a54613a44600093613a3f85546001600160401b031690565b615040565b6040519081529081906020820190565b0390a3565b600c91820b910b6000821280156c7fffffffffffffffffffffffff198401831216613a9a575b826c7fffffffffffffffffffffffff018213166128b8570390565b613aa2612144565b613a7f565b91909180600c0b83600c0b818112613b1457600012613ada5750613acb9192613a59565b6001600160681b031690600090565b600013613afb57613aeb9192613a59565b6001600160681b03169060009190565b613b04906135c9565b6001600160681b03908116921690565b5050509050600090600090565b908160209103126106365751610b6f81610ec1565b6040516323b872dd60e01b81526001600160a01b039283166004820152306024820152604481019390935260209183916064918391600091165af1908115613bb9575b600091613b9b575b5015613b8957565b60405163073d1efd60e51b8152600490fd5b613bb3915060203d81116117f8576117f081836111d3565b38613b81565b613bc1612e70565b613b79565b90604051604081018181106001600160401b03821117613bfc575b60405291546001600160801b038116835260801c6020830152565b613c0461115d565b613be1565b906001600160801b0380809316911680920381116128e0570190565b906001600160801b03166001600160801b0319825416179055565b9060206001600160801b0391613c598382511685613c25565b0151908254916001600160801b03199060801b169116179055565b919290926001600160801b0390613c8e8284168583613b36565b613c97816127d4565b90613cbc613cb78260018060a01b03166000526002602052604060002090565b613bc6565b92613ce7613cda86613cd587516001600160801b031690565b613c09565b6001600160801b03168552565b83516001600160801b031690613d0a611e2260e08601516001600160801b031690565b911611613e0157613dd1613db185613dfc94613dcb7ffa56f7b24f17183d81894d3ac2ee654e3c26388d17a28dbd9549b8114304e1f49761190f87613d6f8e613d8d613d866132ea85613d6f8560018060a01b03166000526006602052604060002090565b9060018060a01b0316600052602052604060002090565b9889613c09565b988995613dac8560018060a01b03166000526002602052604060002090565b613c40565b6001600160a01b0316600090815260066020526040902090565b89613e13565b6040516001600160801b0390941684526001600160a01b039081169581169416929081906020820190565b0390a4565b604051637ac7b99d60e11b8152600490fd5b909290916001600160801b03908116158080613f0c575b15613e9257505050613e6a613e4e60ff610df2945116600160ff61ffff92161b1690565b6001600160a01b03909216600090815260056020526040902090565b805461ffff60e81b19811660e891821c61ffff16909317901b61ffff60e81b16919091179055565b159182613f01575b5050613ea4575050565b61ffff613edd613ec360ff610df2955116600160ff61ffff92161b1690565b199260018060a01b03166000526005602052604060002090565b91825460e81c161681549061ffff60e81b9060e81b169061ffff60e81b1916179055565b161590503880613e9a565b508183161515613e2a565b93929093600260015460f81c16611eac576137fc613f359186614f86565b611046576001600160a01b0384811683821614613fad57807f00000000000000000000000000000000000000000000000000000000000000001690821614600014613f995750610df2926000198303613fd0579150613f9382614ea1565b91613fd0565b90613fa7610df29493615161565b926142ae565b60405163e397a99b60e01b8152600490fd5b600160ff1b81146135e85760000390565b919091613fdb6128ec565b6001600160a01b0381166000908152600560205260409020613ffc90612858565b6001600160a01b038416600090815260056020526040902061401d90612858565b92815161402a90600c0b90565b93805161403790600c0b90565b9261404186614fce565b61404a846151bc565b61405391612fce565b9261405d85614fce565b90614067906151bc565b61407091613005565b9061407a84615065565b6140848193615065565b97889361409091614249565b9861409b9197613aa7565b98878a6001546140b1906001600160681b031690565b906140bb9161386b565b906140c591613887565b6140e5906001600160681b03166001600160681b03196001541617600155565b60015460681c6001600160681b0316906140fe9161386b565b9061410891613887565b6141119061389f565b61411b91876135f5565b61412591876135f5565b600081126141e0575b506001600160681b0391828216614191575b5050811661414c575050565b6000805160206153ba833981519152613a54614175600093613a3f85546001600160401b031690565b6040519081526001600160a01b03909416939081906020820190565b6000805160206153ba8339815191526141d66141ba600094613a3f86546001600160401b031690565b6040519081526001600160a01b03909316929081906020820190565b0390a33880614140565b6141e990613fbf565b7f0000000000000000000000000000000000000000000000000000000000000000116142375761421b6137fc8361316b565b614225573861412e565b604051630a62fbdb60e11b8152600490fd5b604051637139da2360e11b8152600490fd5b919082600c0b81600c0b818113613b145760001361426c5750613acb9192613a59565b60001261427d57613aeb9192613a59565b614286906135c9565b6001600160681b03928316921690565b6001600160801b0391821691168181106128b8570390565b6001600160a01b0381811660008181526006602081815260408084208987168086529083528185205489881686529383528185209085529091529091205494969591946001600160801b03949293929190851690851661430e8882614296565b916143198982613c09565b9183876143388760018060a01b03166000526006602052604060002090565b6001600160a01b039091166000908152602091909152604090209061435c91613c25565b6001600160a01b038b81166000908152600660209081526040808320938b1683529290522061438c908490613c25565b614395876127d4565b936143a1918587613e13565b6143ab928a613e13565b6143b49061316b565b1561422557806020927f29db89d45e1a802b4d55e202984fce9faf1d30aedf86503ff1ea0ed9ebb64201946040519716875216951693a4565b93929093600460015460f81c16611eac576137fc61440b9186614f86565b611046576001600160a01b038181167f0000000000000000000000000000000000000000000000000000000000000000909116036144625750610df292600019830361447657915061445c82614ea1565b91614476565b90614470610df29493615161565b9261468a565b90916139bd926144846128ec565b6001600160a01b03831660009081526005602052604090206144a590612858565b61450f6144b38251600c0b90565b6144c86144bf82614fce565b61311a876151bc565b926139c26144df6144d886615065565b8094614249565b6144fb613988836139b860019e959e546001600160681b031690565b60015460681c6001600160681b031661386b565b600081126145bb575b5061454482827f0000000000000000000000000000000000000000000000000000000000000000614600565b6040519182526001600160a01b0392831692169082907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb90602090a36001600160681b038216614592575050565b6000805160206153ba833981519152613a54613a44600094613a3f86546001600160401b031690565b6145c490613fbf565b7f000000000000000000000000000000000000000000000000000000000000000011614237576145f66137fc8461316b565b6142255738614518565b60405163a9059cbb60e01b81526001600160a01b039283166004820152602481019390935260209183916044918391600091165af190811561467d575b60009161465f575b501561464d57565b60405163cefaffeb60e01b8152600490fd5b614677915060203d81116117f8576117f081836111d3565b38614645565b614685612e70565b61463d565b909260018060a01b0391828116928360005260066020526147436001600160801b0392610d55846146d18960406000209060018060a01b0316600052602052604060002090565b54166146dd8782614296565b906147106146fd8b60018060a01b03166000526002602052604060002090565b61470a8a8a835416614296565b90613c25565b6147348261190f8c613d6f8860018060a01b03166000526006602052604060002090565b61473d8a6127d4565b84613e13565b1561422557806020927fd6d480d5b3068db003533b170d67561494d72e3bf9fa40a266471351ebba9e1694169561477b878983614600565b60405196875216951693a4565b50634e487b7160e01b600052603260045260246000fd5b91908110156147b0575b60051b0190565b6147b8614788565b6147a9565b35610b6f81610625565b906040516060608082016001600160401b039083811082821117614819575b6040528294549063ffffffff821684528160201c1660208401526001600160801b0381831c16604084015260e01c910152565b61482161115d565b6147e6565b60019063ffffffff8091169081146128e0570190565b9291909260016008815460f81c16611eac575a946148586128ec565b60005b848110614994575050506149349061491a6148f46148ef614881610df297985a90612ba5565b6148e86148cf6148ab6148a68860018060a01b03166000526007602052604060002090565b6147c7565b98612a4a6148c56148c08c5163ffffffff1690565b614826565b63ffffffff168b52565b6136dd60208a0191612a5a83516001600160401b031690565b489061219e565b615161565b61490d6040860191613cd583516001600160801b031690565b6001600160801b03169052565b6001600160a01b0316600090815260076020526040902090565b815160208084015160408501516060958601516001600160e01b031960e09190911b166fffffffffffffffffffffffffffffffff60601b9190961b1663ffffffff9093166bffffffffffffffff000000009190921b161717919091179055565b806149b26149ac6149a78694898761479f565b6147bd565b866149b8565b0161485b565b916149c56137fc83613380565b614d7357906149e96139338260018060a01b03166000526005602052604060002090565b906149f58251600c0b90565b936149ff85614fce565b92606090614a118282015161ffff1690565b614a3a7f0000000000000000000000000000000000000000000000000000000000000000612e7d565b96600092839860ff9a8b7f0000000000000000000000000000000000000000000000000000000000000000169a5b8c8116908c821015614bc557908d91898c8c61ffff600180961b8c1616614a94575b5050500116614a68565b90919a614aa0846121d0565b6020818101516001600160a01b0386811660009081526006845260408082209290931680825291845282812080546001600160801b03198116909155600290945291909120805493946001600160801b039384169492939092614b0591869116614296565b614b0e91613c25565b604084810151909f906001600160a01b0316614b2990612e7d565b908501516001600160401b0316614b49916001600160801b0386166134c1565b60c09490940151614b63906001600160401b031685613483565b614b6c91612b99565b9d516001600160801b0392909216825260208201929092526001600160a01b0391821693821692909116907f9850ab1af75177e4a9201c65a2cf7976d5d28e40ef63494b44366f86b2f9412e90604090a4898c8c614a8a565b5050949796995094509691509750614c1c614c1661335285614c116001600160401b037f000000000000000000000000000000000000000000000000000000000000000016809a61219e565b612dc9565b82613005565b9160008312614d6a575b614c2f83615065565b9687614c3b91876135f5565b6001600160a01b03851660009081526005602052604090208790805461ffff60e81b19169055614c6a91613aa7565b6001546001600160681b031690614c809161386b565b614ca0906001600160681b03166001600160681b03196001541617600155565b60015460681c6001600160681b031690614cb991613887565b614cc29061389f565b614ccb91612fce565b614cd490615208565b92614cdf91846134c1565b6040805193845260208401919091526001600160a01b039182169485939216917f1547a878dc89ad3c367b6338b4be6a65a5dd74fb77ae044da1e8747ef1f4f62f9190a380600c0b600012614d32575050565b6000805160206153ba833981519152613a54613a44600093614d64614d5e86546001600160401b031690565b916151df565b90615040565b60009250614c26565b604051636ef5bcdd60e11b8152600490fd5b90614e4a614d95610b6f936127d4565b614e156060614e40614db260018060a01b03604086015116612e7d565b6001600160401b039384918260c088015116614e04670de0b6b3a7640000948286938410614e94575b8303167f000000000000000000000000000000000000000000000000000000000000000061219e565b04808410614e87575b83039061219e565b04956137d57f0000000000000000000000000000000000000000000000000000000000000000612e7d565b920151169061219e565b908015614e7a575b7f00000000000000000000000000000000000000000000000000000000000000009104612dc9565b614e8261212d565b614e52565b614e8f612144565b614e0d565b614e9c612144565b614ddb565b614ec4614eac615221565b61075164ffffffffff918260015460d01c16906128a2565b506001600160a01b03909116600090815260056020526040812054600c0b919080831315614ef95750614d64610b6f926151df565b91505090565b614f0a614eac615221565b6001600160a01b03909216600090815260056020526040812054600c0b92915080831215614ef95750614d64614f42610b6f936135c9565b6151df565b50600036818037808036817f00000000000000000000000000000000000000000000000000000000000000005af43d82803e15614f82573d90f35b3d90fd5b6001600160a01b03808316911690811491908215614fa357505090565b60009081526003602090815260408083206001600160a01b0390941683529290522060ff9150541690565b6000600c82900b1261500a5766038d7ea4c68000615004610b6f926001600160401b0360005416906001600160681b031661219e565b046151bc565b61503b613352610b6f9261502c6001600160401b0360005460401c16916135c9565b6001600160681b031690615040565b613fbf565b66038d7ea4c68000916001600160681b036001600160401b03612ddb9316911661219e565b600081126150a857615096610b6f916150896001600160401b03600054169161215b565b811561509b575b0461513b565b615187565b6150a361212d565b615090565b6150f66150966150d26150dc610b6f946150d76001600160401b0360005460401c16938492613fbf565b61215b565b612b99565b60018110615108575b81156150fb575b600019010461513b565b6135c9565b61510361212d565b6150ec565b615110612144565b6150e5565b6001600160401b0390818111615129571690565b6040516372a1cb5160e11b8152600490fd5b6001600160681b039081811161514f571690565b604051630dc7925560e11b8152600490fd5b6001600160801b0390818111615175571690565b60405163762ea71160e11b8152600490fd5b6001600160681b03166c7fffffffffffffffffffffffff81116151aa57600c0b90565b604051639369ae3560e01b8152600490fd5b6001600160ff1b0381116151cd5790565b60405163e7e828ad60e01b8152600490fd5b600081600c0b126151f6576001600160681b031690565b60405163363b64b760e11b8152600490fd5b600081126151f65790565b60009015610b6f5750600190565b60085480156152345764ffffffffff1690565b506501000000000042101561524e5764ffffffffff421690565b604051633d32ffdb60e01b8152600490fd5b64ffffffffff60c0610df2926001600160401b0381511660208201519060408301519067ffffffffffffffff60401b6001600160401b03861b6060860151871b169360401b1617906001600160401b0360801b9060801b1617176000556152f96001600160681b036152ee816080850151166001600160681b03166001600160681b03196001541617600155565b60a08301511661389f565b01516001805464ffffffffff60d01b19169290911660d01b64ffffffffff60d01b16919091179055565b60ff6001911660ff81146128e0570190565b6020906001600160401b03811161534d5760051b0190565b6147b861115d565b9061535f82615335565b61536c60405191826111d3565b828152809261537d601f1991615335565b0190602036910137565b602091815181101561539c575b60051b010190565b6153a4614788565b615394565b60019060001981146128e057019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212204f9d5495cedbee0563f2dcaf4cf37aafd1b9db75c40722f4329845a9548002ca64736f6c634300080f0033",
  "immutableReferences": {
    "11": [
      {
        "length": 32,
        "start": 1742
      },
      {
        "length": 32,
        "start": 3877
      },
      {
        "length": 32,
        "start": 5998
      },
      {
        "length": 32,
        "start": 7308
      }
    ],
    "15": [
      {
        "length": 32,
        "start": 2698
      },
      {
        "length": 32,
        "start": 4187
      }
    ],
    "19": [
      {
        "length": 32,
        "start": 2626
      },
      {
        "length": 32,
        "start": 5873
      },
      {
        "length": 32,
        "start": 6807
      },
      {
        "length": 32,
        "start": 7413
      },
      {
        "length": 32,
        "start": 7590
      },
      {
        "length": 32,
        "start": 12435
      },
      {
        "length": 32,
        "start": 14353
      },
      {
        "length": 32,
        "start": 14562
      },
      {
        "length": 32,
        "start": 16207
      },
      {
        "length": 32,
        "start": 17436
      },
      {
        "length": 32,
        "start": 17696
      }
    ],
    "23": [
      {
        "length": 32,
        "start": 7893
      },
      {
        "length": 32,
        "start": 12756
      },
      {
        "length": 32,
        "start": 18966
      },
      {
        "length": 32,
        "start": 19996
      }
    ],
    "27": [
      {
        "length": 32,
        "start": 4251
      },
      {
        "length": 32,
        "start": 20308
      }
    ],
    "31": [
      {
        "length": 32,
        "start": 5799
      },
      {
        "length": 32,
        "start": 11186
      }
    ],
    "35": [
      {
        "length": 32,
        "start": 4410
      },
      {
        "length": 32,
        "start": 11246
      },
      {
        "length": 32,
        "start": 11352
      }
    ],
    "39": [
      {
        "length": 32,
        "start": 5039
      },
      {
        "length": 32,
        "start": 11400
      }
    ],
    "43": [
      {
        "length": 32,
        "start": 5414
      },
      {
        "length": 32,
        "start": 11285
      }
    ],
    "47": [
      {
        "length": 32,
        "start": 5294
      },
      {
        "length": 32,
        "start": 11458
      }
    ],
    "51": [
      {
        "length": 32,
        "start": 3058
      },
      {
        "length": 32,
        "start": 11518
      },
      {
        "length": 32,
        "start": 11624
      }
    ],
    "55": [
      {
        "length": 32,
        "start": 2855
      },
      {
        "length": 32,
        "start": 11672
      }
    ],
    "59": [
      {
        "length": 32,
        "start": 4907
      },
      {
        "length": 32,
        "start": 11557
      }
    ],
    "63": [
      {
        "length": 32,
        "start": 2525
      },
      {
        "length": 32,
        "start": 19936
      }
    ],
    "67": [
      {
        "length": 32,
        "start": 3742
      },
      {
        "length": 32,
        "start": 12802
      },
      {
        "length": 32,
        "start": 13468
      },
      {
        "length": 32,
        "start": 19434
      },
      {
        "length": 32,
        "start": 20052
      }
    ],
    "71": [
      {
        "length": 32,
        "start": 5937
      },
      {
        "length": 32,
        "start": 13944
      }
    ],
    "75": [
      {
        "length": 32,
        "start": 1922
      },
      {
        "length": 32,
        "start": 10910
      }
    ],
    "79": [
      {
        "length": 32,
        "start": 5474
      },
      {
        "length": 32,
        "start": 10785
      }
    ],
    "83": [
      {
        "length": 32,
        "start": 5354
      },
      {
        "length": 32,
        "start": 10632
      }
    ],
    "87": [
      {
        "length": 32,
        "start": 3180
      },
      {
        "length": 32,
        "start": 16875
      },
      {
        "length": 32,
        "start": 17862
      }
    ],
    "91": [
      {
        "length": 32,
        "start": 3303
      },
      {
        "length": 32,
        "start": 7813
      }
    ],
    "95": [
      {
        "length": 32,
        "start": 3242
      }
    ],
    "99": [
      {
        "length": 32,
        "start": 2108
      },
      {
        "length": 32,
        "start": 5738
      },
      {
        "length": 32,
        "start": 8673
      },
      {
        "length": 32,
        "start": 10215
      },
      {
        "length": 32,
        "start": 12849
      },
      {
        "length": 32,
        "start": 13280
      },
      {
        "length": 32,
        "start": 19014
      }
    ],
    "102": [
      {
        "length": 32,
        "start": 13983
      }
    ],
    "105": [
      {
        "length": 32,
        "start": 8753
      }
    ],
    "107": [
      {
        "length": 32,
        "start": 8720
      }
    ],
    "109": [
      {
        "length": 32,
        "start": 9086
      }
    ],
    "111": [
      {
        "length": 32,
        "start": 9053
      }
    ],
    "113": [
      {
        "length": 32,
        "start": 9166
      }
    ],
    "115": [
      {
        "length": 32,
        "start": 9133
      }
    ],
    "117": [
      {
        "length": 32,
        "start": 9246
      }
    ],
    "119": [
      {
        "length": 32,
        "start": 9213
      }
    ],
    "121": [
      {
        "length": 32,
        "start": 9326
      }
    ],
    "123": [
      {
        "length": 32,
        "start": 9293
      }
    ],
    "125": [
      {
        "length": 32,
        "start": 9406
      }
    ],
    "127": [
      {
        "length": 32,
        "start": 9373
      }
    ],
    "129": [
      {
        "length": 32,
        "start": 9486
      }
    ],
    "131": [
      {
        "length": 32,
        "start": 9453
      }
    ],
    "133": [
      {
        "length": 32,
        "start": 9566
      }
    ],
    "135": [
      {
        "length": 32,
        "start": 9533
      }
    ],
    "137": [
      {
        "length": 32,
        "start": 9646
      }
    ],
    "139": [
      {
        "length": 32,
        "start": 9613
      }
    ],
    "141": [
      {
        "length": 32,
        "start": 9726
      }
    ],
    "143": [
      {
        "length": 32,
        "start": 9693
      }
    ],
    "145": [
      {
        "length": 32,
        "start": 9806
      }
    ],
    "147": [
      {
        "length": 32,
        "start": 9773
      }
    ],
    "149": [
      {
        "length": 32,
        "start": 9886
      }
    ],
    "151": [
      {
        "length": 32,
        "start": 9853
      }
    ],
    "153": [
      {
        "length": 32,
        "start": 9966
      }
    ],
    "155": [
      {
        "length": 32,
        "start": 9933
      }
    ],
    "157": [
      {
        "length": 32,
        "start": 10046
      }
    ],
    "159": [
      {
        "length": 32,
        "start": 10013
      }
    ],
    "161": [
      {
        "length": 32,
        "start": 10124
      }
    ],
    "163": [
      {
        "length": 32,
        "start": 10091
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "86:2510:66:-:0;;;;;;153:57;86:2510;;:::i;:::-;153:57;:::io;:::-;;;:::i;:::-;;;:::o;:::-;;;;;-1:-1:-1;;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::o;:::-;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::o;:::-;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;1789:3:2;;;;;;;:::o;:::-;86:2510:66;;;1789:3:2;;;;;;;;5536:3606:0;5636:16;;;;86:2510:66;;5636:16:0;;;;5630:32;;:23;;-1:-1:-1;;;;;86:2510:66;5630:23:0;86:2510:66;;-1:-1:-1;;;;;86:2510:66;;;5630:32:0;86:2510:66;;;;;;;;;;5630:34:0;;;;;;;;;;;;;;;;;;;5536:3606;5630:34;;;;5536:3606;86:2510:66;;;;5678:29:0;999:2:2;5678:29:0;;5674:55;;5743:28;;;;999:2:2;;5743:28:0;;;;-1:-1:-1;;;;;86:2510:66;5743:28:0;;;2135:4:2;86:2510:66;;;5743:43:0;5739:69;;5822:19;;;;;;829:2:2;5822:19:0;;2135:4:2;5822:39:0;5818:67;;5899:24;;;;829:2:2;;5899:24:0;;;;;;-1:-1:-1;;;;;86:2510:66;5899:29:0;5895:54;;5974:25;1566:1:2;86:2510:66;5974:25:0;;;;;;;;;;86:2510:66;5963:46:0;:37;86:2510:66;;;;;;;;;;;5963:46:0;86:2510:66;;5963:48:0;;;;;;;;;;;;;5536:3606;5630:34;5963:48;;;5536:3606;86:2510:66;;5963:71:0;5959:97;;86:2510:66;;;;;;;;;;;;;;;;;;;6121:26:0;;6177:20;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;6161:36:0;;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;6211:28:0;;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;;6253:46:0;6121:26;6333:24;;86:2510:66;-1:-1:-1;;;;;86:2510:66;6313:44:0;;;;999:2:2;;6371:52:0;;-1:-1:-1;;;;;86:2510:66;999:2:2;-1:-1:-1;;;;;86:2510:66;;;6371:52:0;;;6438:20;;6491:2;1566:1:2;86:2510:66;6472:35:0;;;;;;6542:25;;1789:3:2;6521:46:0;999:2:2;6542:25:0;;;999:2:2;86:2510:66;;;;;;;;6521:46:0;;;;;;6585:30;6581:56;;-1:-1:-1;;1566:1:2;;86:2510:66;1789:3:2;;6651:53:0;;829:2:2;-1:-1:-1;;;;;86:2510:66;;;6719:44:0;;6803:30;;;;999:2:2;-1:-1:-1;;;;;86:2510:66;;;6777:56:0;;;6873:30;;;;999:2:2;86:2510:66;;6847:56:0;;6934:20;;;829:2:2;86:2510:66;;6918:36:0;;6985:21;;;829:2:2;86:2510:66;6968:38:0;;-1:-1:-1;7107:17:0;;999:2:2;86:2510:66;;7094:30:0;;;;6211:28;7176:40;;999:2:2;86:2510:66;;;;1677:10:2;;;86:2510:66;;7138:97:0;;;;86:2510:66;7288:41:0;;999:2:2;86:2510:66;;1677:10:2;;;86:2510:66;;-1:-1:-1;7249:99:0;;;7396:36;;;999:2:2;86:2510:66;;1677:10:2;;;86:2510:66;;-1:-1:-1;7362:89:0;;;7478:17;;;999:2:2;86:2510:66;;7465:30:0;;;7547:40;;;999:2:2;86:2510:66;;1677:10:2;;;86:2510:66;;7509:97:0;;;7659:41;;;999:2:2;86:2510:66;;1677:10:2;;;86:2510:66;;7620:99:0;;;7767:36;;;999:2:2;86:2510:66;;1677:10:2;;;;86:2510:66;7733:89:0;;7887:19;;2135:4:2;86:2510:66;;7869:45:0;;7973:19;;7950:46;;;:::i;:::-;7925:71;;;;8054:19;;8031:46;;;:::i;:::-;8006:71;;;;8135:19;;8112:46;;;:::i;:::-;8087:71;;;;8216:19;;8193:46;;;:::i;:::-;8168:71;;;;8297:19;;8274:46;;;:::i;:::-;8249:71;;;;8378:19;;8355:46;;;:::i;:::-;8330:71;;;;8459:19;;8436:46;;;:::i;:::-;8411:71;;;;8540:19;;8517:46;;;:::i;:::-;8492:71;;;;8621:19;;8598:46;;;:::i;:::-;8573:71;;;;8702:19;;8679:46;;;:::i;:::-;8654:71;;;;8783:19;;8760:47;;;:::i;:::-;8735:72;;;;8865:19;;8842:47;;;:::i;:::-;8817:72;;;;8947:19;;8924:47;;;:::i;:::-;8899:72;;;;9029:19;;9006:47;;;:::i;:::-;8981:72;;;;9111:19;9088:47;;;:::i;:::-;9063:72;;;;5536:3606::o;6581:56::-;86:2510:66;-1:-1:-1;;;6624:13:0;;;5959:97;86:2510:66;;-1:-1:-1;;;6043:13:0;;86:2510:66;;6043:13:0;5963:48;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;5895:54;86:2510:66;;-1:-1:-1;;;5937:12:0;;86:2510:66;;5937:12:0;5818:67;86:2510:66;;-1:-1:-1;;;5870:15:0;;86:2510:66;;5870:15:0;5739:69;86:2510:66;;-1:-1:-1;;;5795:13:0;;86:2510:66;;5795:13:0;5674:55;86:2510:66;;-1:-1:-1;;;5716:13:0;;86:2510:66;;5716:13:0;5630:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;86:2510:66;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;-1:-1:-1;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;9777:2323:0;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;9947:23:0;9951:19;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;10217:21:0;;;;86:2510:66;-1:-1:-1;;;;;86:2510:66;10266:20:0;;;86:2510:66;10266:20:0;;;86:2510:66;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;10342:19:0;;10338:63;;86:2510:66;;;;;;;;10469:32:0;;;1566:1:2;86:2510:66;10469:32:0;;;;;;;;;;;;;;9943:202;-1:-1:-1;10469:32:0;;;9943:202;86:2510:66;;10469:55:0;10465:81;;86:2510:66;;;;;10560:23:0;;;;;;;;;;;;;;;9943:202;-1:-1:-1;10560:23:0;;;9943:202;86:2510:66;;;;;;;;;10560:36:0;10556:62;;10687:34;;;999:2:2;;10687:34:0;;;-1:-1:-1;;;;;86:2510:66;999:2:2;10725:37:0;;;999:2:2;;10725:37:0;;;;10687:75;;-1:-1:-1;;;;;86:2510:66;999:2:2;86:2510:66;10687:75:0;-1:-1:-1;;;;;86:2510:66;;;10687:75:0;;10683:106;;999:2:2;;2135:4;86:2510:66;;-1:-1:-1;;;;;86:2510:66;10803:61:0;10799:95;;999:2:2;11158:55:0;;11165:47;;999:2:2;;11057:52:0;;11165:47;;-1:-1:-1;;;;;86:2510:66;999:2:2;86:2510:66;999:2:2;1677:10;-1:-1:-1;;;;;86:2510:66;;;1677:10:2;;;11064:44:0;1112:12:2;;;;11057:52:0;999:2:2;;-1:-1:-1;;;;;86:2510:66;;;11158:55:0;86:2510:66;11261:29:0;;999:2:2;11261:29:0;;;11254:47;;11261:39;;-1:-1:-1;;;;;86:2510:66;999:2:2;86:2510:66;11254:47:0;1112:12:2;;;;;;;;11392:51:0;;11388:82;;-1:-1:-1;;11567:21:0;;1112:12:2;11560:49:0;;11567:41;;11592:2;1566:1:2;;;;;-1:-1:-1;;;;;86:2510:66;11567:41:0;:::i;11560:49::-;1112:12:2;;;;-1:-1:-1;;;1112:12:2;11642:90:0;;;;1112:12:2;;;;;-1:-1:-1;;;1112:12:2;11642:164:0;;;;1112:12:2;;;;;-1:-1:-1;;;1112:12:2;11642:230:0;;;;;1112:12:2;;;;-1:-1:-1;;;1112:12:2;11905:81:0;1112:12:2;;;;;-1:-1:-1;;;;;;;1112:12:2;11905:139:0;;9777:2323::o;11388:82::-;86:2510:66;-1:-1:-1;;;11452:18:0;;;10799:95;86:2510:66;;-1:-1:-1;;;10873:21:0;;86:2510:66;;10873:21:0;10683:106;86:2510:66;;-1:-1:-1;;;10771:18:0;;86:2510:66;;10771:18:0;10556:62;86:2510:66;;-1:-1:-1;;;10605:13:0;;86:2510:66;;10605:13:0;10560:23;;;;;;-1:-1:-1;10560:23:0;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;10465:81;86:2510:66;;-1:-1:-1;;;10533:13:0;;86:2510:66;;10533:13:0;10469:32;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;10338:63;10377:13;;;;;;;;-1:-1:-1;10377:13:0;-1:-1:-1;10377:13:0;:::o;9943:202::-;10121:13;-1:-1:-1;10121:13:0;-1:-1:-1;10121:13:0;:::o;9777:2323::-;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;8075:1:0;9947:23;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;;9777:2323:0;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;8156:1:0;9947:23;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;;9777:2323:0;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;8237:1:0;9947:23;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;;9777:2323:0;;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;5630:34:0;;2135:4:2;9947:23:0;;2135:4:2;;;9986:105:0;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;10217:21:0;;;;86:2510:66;10217:21:0;;;;-1:-1:-1;;;;;86:2510:66;10266:20:0;;;86:2510:66;10266:20:0;;;86:2510:66;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;10342:19:0;;10338:63;;86:2510:66;;;;1566:1:2;86:2510:66;;;;10469:32:0;;;;;;;;;;;;;;;;-1:-1:-1;10469:32:0;;;86:2510:66;;10469:55:0;10465:81;;86:2510:66;;;;;10560:23:0;;;;;;;;;;;;;;;-1:-1:-1;10560:23:0;;;86:2510:66;;;;;;;;;10560:36:0;10556:62;;10687:34;;;999:2:2;;10687:34:0;;;-1:-1:-1;;;;;86:2510:66;999:2:2;86:2510:66;10338:63:0;10377:13;;;;;;;;;-1:-1:-1;10377:13:0;-1:-1:-1;10377:13:0;:::o;9943:202::-;-1:-1:-1;;;;;;10121:13:0:o;9777:2323::-;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;8399:1:0;9947:23;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;;9777:2323:0;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;8480:1:0;9947:23;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;;9777:2323:0;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;8561:1:0;9947:23;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;;9777:2323:0;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;1566:1;9947:23:0;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;;9777:2323:0;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;8723:1:0;9947:23;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;;9777:2323:0;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;6491:2:0;9947:23;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;;9777:2323:0;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;8886:2:0;9947:23;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;;9777:2323:0;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;8968:2:0;9947:23;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;;9777:2323:0;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;9050:2:0;9947:23;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;;9777:2323:0;86:2510:66;;:::i;:::-;-1:-1:-1;2135:4:2;;9132:2:0;9947:23;9951:19;;;9986:105;;;86:2510:66;;9986:105:0;;9943:202;-1:-1:-1;;;;;86:2510:66;;",
  "deployedSourceMap": "86:2510:66:-:0;;;;;;;;;-1:-1:-1;86:2510:66;;:::i;:::-;-1:-1:-1;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;26420:10:0;86:2510:66;;;;26420:46:0;1636:6:8;;86:2510:66;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;398:42:0;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;1927:4:2;3215:43;51761:16:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;51738:58:0;51780:15;86:2510:66;;51761:34:0;86:2510:66;;;;;;;51761:34:0;;:::i;:::-;86:2510:66;51738:58:0;:::i;:::-;86:2510:66;;;;3215:43:2;:::i;:::-;86:2510:66;;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;2938:54:0;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2058:27;:18;86:2510;;;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;2058:9;86:2510;;;;;;;2058:18;86:2510;;;;;;;2058:27;2096:15;-1:-1:-1;2126:11:66;86:2510;2143:9;;86:2510;2121:130;2154:3;86:2510;;;2139:13;;;;;;86:2510;;1247:1:2;;28683:37:0;;;2173:68:66;;2154:3;;;;:::i;:::-;2126:11;;2173:68;2219:7;;2154:3;2219:7;;:::i;:::-;2173:68;;;;;2139:13;;;;;;2270:20;2139:13;86:2510;2270:20;:::i;:::-;2301:10;-1:-1:-1;2326:11:66;;2354:3;86:2510;;;2339:13;;;;;;86:2510;;1247:1:2;;28683:37:0;;;2373:115:66;;2354:3;;;;:::i;:::-;2326:11;;2373:115;2431:15;2470:3;2354;2431:15;2419:33;2431:21;:15;;;;:::i;:::-;:21;86:2510;-1:-1:-1;;;;;86:2510:66;;;2431:21;2419:33;;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;2135:4:2;;;2419:33:66;2470:3;:::i;:::-;2373:115;;;;;2339:13;86:2510;;;;2339:13;86:2510;;:::i;:::-;;;;;;;;;;;;;;;;;;;9326:15:0;86:2510:66;;;;9322:53:0;;9419:34;9437:16;;:::i;:::-;9326:15;86:2510:66;;-1:-1:-1;;;;86:2510:66;;;;;;-1:-1:-1;;;86:2510:66;;;;;;;;9419:34:0;1927:4:2;;-1:-1:-1;;;;;;1927:4:2;;;;;86:2510:66;;;9322:53:0;86:2510:66;;-1:-1:-1;;;9355:20:0;;86:2510:66;;9355:20:0;86:2510:66;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;2511:52:0;86:2510:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;35340:6:0;86:2510:66;;;:::i;:::-;35329:9:0;;;35307:10;;35340:6;:::i;:::-;86:2510:66;;;35364:4:0;86:2510:66;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;500:47:0;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;40818:6:0;86:2510:66;;;:::i;:::-;40790:10:0;;;;;40818:6;:::i;86:2510:66:-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;2152:67:0;86:2510:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;:::o;:::-;;;;;;2117:76:11;86:2510:66;;;:::i;:::-;;;;;;;;-1:-1:-1;86:2510:66;2117:76:11;86:2510:66;;;-1:-1:-1;86:2510:66;;;;;;;;;;;;;;;;;2117:76:11;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;1957:66:0;86:2510:66;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;86:2510:66;;;;;;-1:-1:-1;86:2510:66;;;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;3504:44:0;86:2510:66;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;3764:40:0;86:2510:66;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;3650:45:0;86:2510:66;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;31594:6:0;86:2510:66;;;:::i;:::-;31558:10:0;;;31594:6;:::i;86:2510:66:-;;;;;35727:6:0;86:2510:66;;;:::i;:::-;35691:10:0;;;35727:6;:::i;86:2510:66:-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;2663:40:0;86:2510:66;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;25738:8:0;;86:2510:66;25724:10:0;:22;;:53;;;;86:2510:66;25720:80:0;;;26167:82;25860:21;26167:82;25860:21;25811:340;25860:44;:21;;;:::i;:::-;86:2510:66;;;;25860:44:0;25921:48;:23;;;:::i;:::-;86:2510:66;1247:1:2;86:2510:66;;;1247:1:2;25921:48:0;25836:134;25986:48;:23;;;:::i;:::-;86:2510:66;1247:1:2;86:2510:66;;;1247:1:2;25986:48:0;25836:199;26051:44;:21;;;:::i;:::-;86:2510:66;1247:1:2;86:2510:66;;;1247:1:2;26051:44:0;25836:260;26112:38;:18;;;:::i;:::-;86:2510:66;1247:1:2;86:2510:66;;;1247:1:2;26112:38:0;1302:1:2;1460;;-1:-1:-1;;;;;1460:1:2;25836:315:0;;;;1460:1:2;;-1:-1:-1;;;;;;1460:1:2;;;;;;;;25811:340:0;86:2510:66;;26167:82:0;;;;1460:1:2;;;;;;;;;;;86:2510:66;;;;;;;1460:1:2;;;86:2510:66;;;1460:1:2;;;86:2510:66;;;1460:1:2;;;86:2510:66;;;1460:1:2;;86:2510:66;1460:1:2;26167:82:0;;;;86:2510:66;25720:80:0;86:2510:66;;-1:-1:-1;;;25786:14:0;;86:2510:66;;25786:14:0;25724:53;25764:13;;;86:2510:66;25724:10:0;25750:27;;25724:53;;;86:2510:66;;;;;;;-1:-1:-1;;86:2510:66;;;;;;846:51:0;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;-1:-1:-1;86:2510:66;;;1541:60:11;86:2510:66;;;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;1221:66:0;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;86:2510:66;1078:16;86:2510;;;-1:-1:-1;86:2510:66;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;;86:2510:66;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;1247:1:2;26866:10:0;86:2510:66;;;26866:48:0;1636:6:8;;86:2510:66;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;2308:62:0;86:2510:66;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;1416:67:0;86:2510:66;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;1927:4:2;3215:43;52162:16:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;52139:58:0;52181:15;86:2510:66;;52162:34:0;86:2510:66;;;;;;;52162:34:0;;:::i;52139:58::-;86:2510:66;;;;;;;3215:43:2;:::i;86:2510:66:-;;;;;;;-1:-1:-1;;86:2510:66;;;;;123:23;86:2510;;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;1247:1:2;27086:10:0;86:2510:66;;;27086:46:0;1636:6:8;;86:2510:66;;;;;;;;;;;32039:6:0;86:2510:66;;;:::i;:::-;32009:10:0;;;;;32039:6;:::i;86:2510:66:-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;1787:41:0;86:2510:66;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;3379:48:0;86:2510:66;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;1572:62:0;86:2510:66;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;3105:54:0;86:2510:66;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;1703:61:11;86:2510:66;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;1703:61:11;86:2510:66;;;1703:61:11;86:2510:66;;;;;;;;;;;;-1:-1:-1;86:2510:66;;;;;;;1703:61:11;86:2510:66;;;;;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;1247:1:2;26642:10:0;86:2510:66;;;26642:48:0;1636:6:8;;86:2510:66;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;3880:41:0;86:2510:66;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;1051:41:0;86:2510:66;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;34904:6:0;86:2510:66;;;;;:::i;:::-;;;34893:9:0;;34864:10;;;34904:6;:::i;86:2510:66:-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;2776:49:0;86:2510:66;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;51367:8:0;86:2510:66;;51353:10:0;:22;51349:49;;86:2510:66;;-1:-1:-1;;;51409:37:0;;-1:-1:-1;;;;;86:2510:66;;;;;51409:37:0;;86:2510:66;;;;;;;;51409:37:0;;86:2510:66;;;;;;-1:-1:-1;;86:2510:66;51409:37:0;;;;;;86:2510:66;51409:37:0;;86:2510:66;51409:37:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;86:2510:66;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;;;;;;;;;;1203:40;86:2510;;;;;;;-1:-1:-1;86:2510:66;1203:9;86:2510;;;-1:-1:-1;86:2510:66;;-1:-1:-1;;;;;86:2510:66;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;1595:7;86:2510;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;1510:28;86:2510;;;;;;;;;-1:-1:-1;86:2510:66;1375:14;86:2510;;-1:-1:-1;;;;;1375:30:66;86:2510;;-1:-1:-1;86:2510:66;;;;;;;;;;;;;;;;;1375:30;86:2510;;;-1:-1:-1;86:2510:66;1375:14;86:2510;;1423:48;86:2510;1423:30;86:2510;;-1:-1:-1;86:2510:66;;;;;;;;;;;;;;;;;1423:30;:48;:::i;1510:28::-;1595:7;;:::i;86:2510::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;438:16;;:::i;:::-;86:2510;;;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;17450:15:0;86:2510:66;;;;;:::i;:::-;17266:207:0;;:::i;:::-;86:2510:66;;;;;;;-1:-1:-1;86:2510:66;17386:9:0;86:2510:66;;;-1:-1:-1;86:2510:66;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;2135:4:2;86:2510:66;;;;;;;2135:4:2;86:2510:66;;;;;;;;;;;;;;;;;;;;;2135:4:2;;86:2510:66;;;;;17450:15:0;;:::i;86:2510:66:-;;;;;36161:6:0;86:2510:66;;;:::i;:::-;36132:10:0;;;;;36161:6;:::i;86:2510:66:-;;;;;40391:6:0;86:2510:66;;;:::i;:::-;40356:10:0;;;40391:6;:::i;86:2510:66:-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;609:43:0;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;86:2510:66;2251:60:11;86:2510:66;;;;-1:-1:-1;86:2510:66;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;1247:1:2;27298:10:0;86:2510:66;;;27298:43:0;1636:6:8;;86:2510:66;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;86:2510:66;1991:46:11;86:2510:66;;;;-1:-1:-1;86:2510:66;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;513:18;86:2510;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;50546:8:0;86:2510:66;;50532:10:0;:22;50528:49;;50603:13;;:::i;:::-;-1:-1:-1;50630:12:0;;:46;;;;;86:2510:66;50626:81:0;;;50732:9;50747:6;50732:9;50770:28;50732:9;;50747:6;:::i;:::-;86:2510:66;;;;;;;;;50770:28:0;86:2510:66;50626:81:0;86:2510:66;;-1:-1:-1;;;50685:22:0;;86:2510:66;;50685:22:0;50630:46;50655:21;;;;:::i;:::-;50646:30;;50630:46;;;86:2510:66;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;1247:1:2;27298:10:0;86:2510:66;;;27298:43:0;47897:34;;47957:13;;:::i;:::-;-1:-1:-1;47984:13:0;;;:49;;;;86:2510:66;47980:74:0;;;48196:10;48184;;48173:9;48196:10;:::i;:::-;48242:34;;;;:::i;:::-;86:2510:66;;;48290:28:0;;48286:58;;48377:28;;;:::i;:::-;48358:47;;48354:82;;48856:62;48814:25;48782:58;48856:62;48814:25;48782:58;48814:25;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;48782:58:0;;;;:::i;:::-;86:2510:66;;;;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;48184:10:0;;86:2510:66;;;;;;;48856:62:0;;;;86:2510:66;48286:58:0;86:2510:66;;-1:-1:-1;;;48327:17:0;;86:2510:66;;48327:17:0;47980:74;86:2510:66;;-1:-1:-1;;;48042:12:0;;86:2510:66;;48042:12:0;47984:49;48019:14;;;-1:-1:-1;48001:32:0;47984:49;;;47897:34;86:2510:66;;-1:-1:-1;;;47923:8:0;;86:2510:66;;47923:8:0;86:2510:66;;;;;;;-1:-1:-1;;86:2510:66;;;;;;724:52:0;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;86:2510:66;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;86:2510:66;;;;31223:6:0;86:2510:66;;;;;:::i;:::-;;;31180:10:0;;;;31223:6;:::i;86:2510:66:-;;;;;;;-1:-1:-1;;86:2510:66;;;;40030:6:0;86:2510:66;;;;;:::i;:::-;;;39987:10:0;;;;40030:6;:::i;86:2510:66:-;;;;;;;-1:-1:-1;;86:2510:66;;;;2534:60;;:::i;86:2510::-;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;86:2510:66;;;;;;1820:28;1913:16;1820:28;;:::i;86:2510::-;;;;;;;:::i;:::-;;;-1:-1:-1;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2135:4:2:-;;86:2510:66;;;2135:4:2;;;;;;;;;;86:2510:66;;;2135:4:2;;;;;;;;;86:2510:66;2135:4:2;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;86:2510:66;2135:4:2;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;86:2510:66;;2135:4:2;;;;;;;;;:::o;:::-;;;:::i;:::-;;;12304:2669:0;86:2510:66;;:::i;:::-;;;;;;12402:9:0;86:2510:66;12397:14:0;;;12393:37;;12494:6;;;-1:-1:-1;12557:9:0;12525;12490:1440;86:2510:66;;;;;14095:34:0;14094:46;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;14194:34:0;14193:46;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;14285:34:0;14284:46;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;;14441:33:0;14508:15;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;14562:44:0;-1:-1:-1;;;;;86:2510:66;;;;;;;;14563:34:0;14562:44;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;:::i;:::-;;;;;2135:4:2;;-1:-1:-1;;;;;13972:26:0;;;14625:341;;;2135:4:2;14378:26:0;-1:-1:-1;;;;;86:2510:66;14625:341:0;;;2135:4:2;-1:-1:-1;;;;;86:2510:66;14625:341:0;;;2135:4:2;-1:-1:-1;;;;;86:2510:66;14625:341:0;;;2135:4:2;-1:-1:-1;;;;;86:2510:66;;14625:341:0;;2135:4:2;-1:-1:-1;;;;;86:2510:66;;14625:341:0;;2135:4:2;-1:-1:-1;;;;;86:2510:66;14625:341:0;;;2135:4:2;86:2510:66;:::o;12490:1440:0:-;12592:1;12587:6;;12592:1;;-1:-1:-1;12650:9:0;12618;12490:1440;;12583:1347;12685:1;12680:6;;12685:1;;-1:-1:-1;12743:9:0;12711;12490:1440;;12676:1254;12778:1;12773:6;;12778:1;;-1:-1:-1;12836:9:0;12804;12490:1440;;12769:1161;12871:1;12866:6;;12871:1;;-1:-1:-1;12929:9:0;12897;12490:1440;;12862:1068;12964:1;12959:6;;12964:1;;-1:-1:-1;13022:9:0;12990;12490:1440;;12955:975;13057:1;13052:6;;13057:1;;-1:-1:-1;13115:9:0;13083;12490:1440;;13048:882;13150:1;13145:6;;13150:1;;-1:-1:-1;13208:9:0;13176;12490:1440;;13141:789;13243:1;13238:6;;13243:1;;-1:-1:-1;13301:9:0;13269;12490:1440;;13234:696;13336:1;13331:6;;13336:1;;-1:-1:-1;13394:9:0;13362;12490:1440;;13327:603;13429:2;13424:7;;13429:2;;-1:-1:-1;13488:9:0;13456;12490:1440;;13420:510;13523:2;13518:7;;13523:2;;-1:-1:-1;13582:9:0;13550;12490:1440;;13514:416;13617:2;13612:7;;13617:2;;-1:-1:-1;13676:9:0;13644;12490:1440;;13608:322;13711:2;13706:7;;13711:2;;-1:-1:-1;13770:9:0;13738;12490:1440;;13702:228;13805:2;13800:7;13805:2;;13864:9;13832;12490:1440;;13796:134;86:2510:66;;-1:-1:-1;;;13911:8:0;;12871:1;;13911:8;12393:37;86:2510:66;;-1:-1:-1;;;12420:10:0;;;;;15059:364;;86:2510:66;;:::i;:::-;15168:11:0;15178:1;86:2510:66;;15185:9:0;;;86:2510:66;15163:227:0;15181:13;86:2510:66;;;;15181:13:0;;;86:2510:66;;-1:-1:-1;;;15406:10:0;;;;;15168:11;15241:15;;;:::i;:::-;15274;;;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;;15274:24:0;15270:79;;-1:-1:-1;86:2510:66;;;;15168:11:0;;15270:79;15318:16;;;;;;;:::o;86:2510:66:-;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;2135:4:2;86:2510:66;;;;;;;2135:4:2;86:2510:66;;;;;;;;;;;;;2135:4:2;86:2510:66:o;:::-;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;16510:675:0:-;16569:16;;:::i;:::-;16614:31;16622:22;86:2510:66;16629:15:0;86:2510:66;;;;;;;;;16622:22:0;;:::i;:::-;86:2510:66;;;;16614:31:0;16659:15;;16655:524;;16510:675;;:::o;16655:524::-;16727:35;16690:72;;16727:35;17146:22;16727:35;;:::i;:::-;16690:72;;;-1:-1:-1;;;16673:1:0;1927:4:2;;;;;;-1:-1:-1;;;1927:4:2;;;16673:1:0;1927:4:2;;16690:72:0;-1:-1:-1;;;;;86:2510:66;-1:-1:-1;;;;;1927:4:2;16673:1:0;1927:4:2;;;16673:1:0;1927:4:2;;16690:72:0;16629:15;86:2510:66;16799:17:0;;;-1:-1:-1;;;;;86:2510:66;16780:36:0;;;;16776:172;;16655:524;-1:-1:-1;16629:15:0;86:2510:66;16965:36:0;;86:2510:66;;-1:-1:-1;;;;;86:2510:66;;-1:-1:-1;;;;;86:2510:66;;;16965:36:0;;;;;16961:172;;16655:524;-1:-1:-1;;9326:15:0;86:2510:66;;-1:-1:-1;;;;86:2510:66;;;;;;-1:-1:-1;;;86:2510:66;;;;;;;;16961:172:0;17044:74;17051:66;17021:97;17062:23;:37;17021:97;17062:23;;:37;:::i;:::-;17051:66;:::i;:::-;17044:74;:::i;:::-;16673:1;86:2510:66;;;17021:97:0;:::i;86:2510:66:-;17021:97:0;:::i;:::-;16673:1;86:2510:66;;-1:-1:-1;;;;;86:2510:66;;;;;;-1:-1:-1;;;;;;86:2510:66;;;;;;;;17021:97:0;16961:172;;;;16776;16836:97;16859:74;16866:66;16836:97;16877:23;:37;:23;;:37;:::i;16859:74::-;16673:1;86:2510:66;;;-1:-1:-1;;;;;86:2510:66;17021:97:0;:::i;16836:::-;16673:1;86:2510:66;;-1:-1:-1;;;;86:2510:66;;;;;;-1:-1:-1;;;86:2510:66;;;;;;;;16836:97:0;16776:172;;;15765:647;;15890:15;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;;;;;;15970:15:0;;15966:387;;15765:647;16362:43;;;15765:647;:::o;15966:387::-;16020:16;27499:10;16316:24;16068:26;16020:16;;16166:81;16261;16020:16;16186:61;16020:16;16126:26;16281:61;16020:16;;;:::i;:::-;16068:26;;;:::i;:::-;86:2510:66;16126:26:0;;:::i;:::-;86:2510:66;2135:4:2;27499:10:0;16221:24;2135:4:2;16221:24:0;;;;:::i;:::-;27499:10;;:::i;:::-;86:2510:66;16186:61:0;:::i;:::-;16166:81;;:::i;:::-;16316:24;;:::i;16261:81::-;15966:387;;;;;86:2510:66;;;;;;;;;:::o;:::-;;;;;;;;:::o;17674:653:0:-;17782:10;17767:25;;;;;17935:35;17891:93;2135:4:2;27499:10:0;17884:101;17935:35;;27499:10;:::i;:::-;86:2510:66;17891:31:0;:93;:::i;17763:558::-;18132:178;2135:4:2;18139:170:0;2135:4:2;27499:10:0;2135:4:2;18183:35:0;18139:92;18183:35;27499:10;18183:35;;27499:10;:::i;18139:92::-;86:2510:66;;;;;;17763:558:0;86:2510:66;18244:36:0;27499:10;:::i;:::-;86:2510:66;18139:170:0;;:::i;86:2510:66:-;;;:::i;:::-;;;18528:653:0;18636:10;18621:25;;;;;18789:35;18745:93;2135:4:2;27499:10:0;18738:101;18789:35;;27499:10;:::i;:::-;86:2510:66;18745:31:0;:93;:::i;18617:558::-;18986:178;2135:4:2;18993:170:0;2135:4:2;27499:10:0;2135:4:2;19037:35:0;18993:92;19037:35;27499:10;19037:35;;27499:10;:::i;18993:92::-;86:2510:66;;;;;;18617:558:0;86:2510:66;19098:36:0;27499:10;:::i;86:2510:66:-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;19306:378:0:-;19417:15;86:2510:66;19434:15:0;86:2510:66;3215:43:2;1927:4;86:2510:66;-1:-1:-1;;;;;;;;;;86:2510:66;;3215:43:2;86:2510:66;;;;;;3215:43:2;:::i;:::-;86:2510:66;;;;;;;;;3215:43:2;:::i;:::-;86:2510:66;19546:17:0;;;19579:8;;19417:15;19579:8;:::o;19542:136::-;86:2510:66;2135:4:2;;;;;;;;;;;;;;86:2510:66;19618:49:0;:::o;2135:4:2:-;;;:::i;:::-;;86:2510:66;19618:49:0;:::o;86:2510:66:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;19857:228:0;86:2510:66;;-1:-1:-1;;;19965:39:0;;86:2510:66;19965:39:0;;86:2510:66;;19965:39:0;;86:2510:66;;-1:-1:-1;;;;;86:2510:66;19965:39:0;;;;;;;19857:228;19965:39;;;;19857:228;20018:10;19965:39;20018:10;;;20014:33;;19857:228;:::o;20014:33::-;86:2510:66;;-1:-1:-1;;;20037:10:0;;19965:39;;20037:10;19965:39;;;;;;;;;;;;;;;;:::i;:::-;;;86:2510:66;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;19965:39:0;;;;;;-1:-1:-1;19965:39:0;;;;;:::i;:::-;;;86:2510:66;;;;;;;;;;;:::o;20331:186:0:-;86:2510:66;;-1:-1:-1;;;20430:37:0;;20461:4;20430:37;;;86:2510:66;;-1:-1:-1;;;;;86:2510:66;20430:37:0;86:2510:66;;;;20430:37:0;;;;;;;20331:186;-1:-1:-1;20430:37:0;;;20331:186;86:2510:66;-1:-1:-1;86:2510:66;20470:16:0;20430:37;86:2510:66;-1:-1:-1;;;;;86:2510:66;-1:-1:-1;86:2510:66;;;;;;;;;;20331:186:0;:::o;20430:37::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;86:2510:66;;;;;;-1:-1:-1;;;86:2510:66;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;-1:-1:-1;;;86:2510:66;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;20615:505:0;21043:70;20759:16;;:::i;:::-;20736:58;;20759:34;20778:15;86:2510:66;;;;;;;20759:34:0;;:::i;20736:58::-;;:::i;:::-;86:2510:66;;-1:-1:-1;;;20819:41:0;;20854:4;20819:41;;;86:2510:66;;;;;20819:41:0;86:2510:66;;;-1:-1:-1;;;;;20825:9:0;86:2510:66;20819:41:0;;;;;;;20615:505;-1:-1:-1;20819:41:0;;;20615:505;1927:4:2;;21064:23:0;21043:18;:44;1927:4:2;3215:43;21090:23:0;1927:4:2;;86:2510:66;-1:-1:-1;;;;;86:2510:66;3215:43:2;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;;3215:43:2;:::i;:::-;86:2510:66;;;;;;;3215:43:2;:::i;:::-;86:2510:66;21043:18:0;;:::i;:::-;21064:23;;:::i;:::-;21043:44;;:::i;21090:23::-;21043:70;;:::i;20819:41::-;21090:23;20819:41;;;;21043:18;:44;20819:41;3215:43:2;20819:41:0;21064:23;20819:41;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;21337:1111;;21451:28;:18;;86:2510:66;;;;;;;;2058:9;86:2510;;;;;;;21451:18:0;86:2510:66;;;;;21451:28:0;;;86:2510:66;;;;;21494:14:0;;21490:56;;21627:134;21655:23;21574:27;:18;;;;;86:2510:66;;;;;;;;2058:9;86:2510;;;;;;;21574:27:0;21655:23;;:::i;:::-;21692:28;21701:18;21692:28;:::i;:::-;-1:-1:-1;;;;;21741:9:0;86:2510:66;21627:134:0;;:::i;:::-;21777:11;;86:2510:66;;21794:9:0;;;86:2510:66;21772:638:0;21777:11;86:2510:66;;;21790:13:0;;;;;;;86:2510:66;;;;;1247:1:2;;;28683:37:0;;;21821:548;;21777:11;86:2510:66;;21777:11:0;;21821:548;21871:14;;;;;;;;21867:72;;21982:15;22222:132;21982:15;;22235:119;22245:108;21982:15;22245:108;86:2510:66;22307:28:0;22032:172;22062:44;21982:15;22062:23;21982:15;22062:36;21982:15;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;;;22062:14:0;86:2510:66;;;;;;;22062:23:0;22086:11;;;;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;22062:36:0;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;22062:44:0;22137:15;;;86:2510:66;22128:25:0;;-1:-1:-1;;;;;86:2510:66;;:::i;22128:25:0:-;-1:-1:-1;;;;;86:2510:66;22175:11:0;;;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;;;22032:172:0;:::i;:::-;22307:28;;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;;;22245:108:0;;;:::i;:::-;22235:119;:::i;22222:132::-;21821:548;;;21867:72;21909:11;;;;;;;;;;:::o;21790:13::-;;;;;;;;;;22427:14;;21337:1111;:::o;21490:56::-;21524:11;;;;21531:4;21524:11;:::o;22687:1107::-;;22793:28;:18;;86:2510:66;;;;;;;;2058:9;86:2510;;;;;;;22793:28:0;;;86:2510:66;;;;;22836:14:0;;22832:57;;22970:134;22998:23;22917:27;:18;;;;;86:2510:66;;;;;;;;2058:9;86:2510;;;;;;;22970:134:0;23120:11;;86:2510:66;;23137:9:0;;;86:2510:66;23115:642:0;23120:11;86:2510:66;;;23133:13:0;;;;;;;86:2510:66;;;;;1247:1:2;;;28683:37:0;;;23164:552;;23120:11;86:2510:66;;23120:11:0;;23164:552;23214:14;;;;;;;;23210:73;;23326:15;23566:135;23326:15;;23579:122;23589:111;23326:15;23589:111;86:2510:66;23651:31:0;23376:172;23406:44;23326:15;23406:23;23326:15;23406:36;23326:15;;:::i;23566:135::-;23164:552;;;23210:73;23252:12;;;;;;;;;;:::o;23133:13::-;;;;;;;;;;23774;22687:1107;:::o;22832:57::-;-1:-1:-1;22866:12:0;-1:-1:-1;22866:12:0:o;27413:118::-;2135:4:2;27413:118:0;27499:10;27413:118;27499:10;:::i;27602:118::-;27690:13;27602:118;27694:9;27690:13;;:::i;27832:130::-;-1:-1:-1;;;;;27832:130:0;27934:9;27832:130;27934:9;:::i;:::-;86:2510:66;;;;;;;;27832:130:0;:::o;28081:162::-;;;28191:16;-1:-1:-1;;;;;28081:162:0;28191:16;:::i;:::-;-1:-1:-1;86:2510:66;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;28081:162:0;-1:-1:-1;;;86:2510:66;-1:-1:-1;86:2510:66;;;;;;;;;;;;;;;28081:162:0;-1:-1:-1;86:2510:66;;;;;;;;;;;;;28081:162:0;86:2510:66;;;;;;;;28081:162:0;86:2510:66;;;;;;;;28081:162:0;86:2510:66;;-1:-1:-1;;86:2510:66;;;;;;28081:162:0;:::o;86:2510:66:-;;;:::i;:::-;;28081:162:0;:::o;86:2510:66:-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;86:2510:66;;;;;;;;:::o;:::-;;;:::i;:::-;;;29470:890:0;30327:18;29470:890;86:2510:66;29470:890:0;86:2510:66;;;;;;;;;;;;;;29599:15:0;;;;86:2510:66;29599:15:0;86:2510:66;;;;29669:14:0;-1:-1:-1;29599:15:0;;29821:52;:31;29785:112;86:2510:66;-1:-1:-1;;;;;29717:54:0;29725:45;29814:83;86:2510:66;;29747:23:0;86:2510:66;29821:75:0;86:2510:66;;-1:-1:-1;;;;;86:2510:66;;;;;;;29747:23:0;;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;29725:45:0;;:::i;29717:54::-;86:2510:66;;29821:31:0;:::i;:::-;29855:18;29821:52;;:::i;:::-;29876:20;29821:75;;:::i;29814:83::-;29785:112;:25;;;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;;;29785:112:0;-1:-1:-1;;;;;86:2510:66;2135:4:2;;;29785:112:0;86:2510:66;;30152:17:0;29599:15;;86:2510:66;30185:45:0;;86:2510:66;;-1:-1:-1;;;;;86:2510:66;;-1:-1:-1;;;;;86:2510:66;30185:23:0;;;2135:4:2;;30327:18:0;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;86:2510:66;;;;;;-1:-1:-1;;;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;;;;;-1:-1:-1;;;86:2510:66;1460:1:2;;;;;;;;;-1:-1:-1;;;;;;1460:1:2;;;;;;;;;;;;;;;86:2510:66;30148:169:0;86:2510:66;30261:45:0;;86:2510:66;;;;30261:45:0;30327:18;:::i;29665:473::-;30050:53;:32;30014:113;86:2510:66;30050:32:0;:19;30058:10;29946:54;29954:45;30043:84;86:2510:66;;29976:23:0;86:2510:66;30050:76:0;86:2510:66;;;;;;29946:54:0;30058:10;;:::i;30050:32::-;;:::i;30014:113::-;29665:473;;32284:519;;;;;26420:10;86:2510:66;;;;26420:46:0;32400:37;;32452:29;32451:30;32452:29;;;:::i;:::-;32451:30;;86:2510:66;32451:30:0;32447:57;;-1:-1:-1;;;;;86:2510:66;;;32528:9:0;86:2510:66;;;32519:18:0;86:2510:66;;-1:-1:-1;32690:6:0;;-1:-1:-1;;32557:27:0;;32690:6;32553:95;32613:20;;;;;:::i;:::-;32553:95;32690:6;:::i;32515:282::-;32770:15;;;;;;:::i;:::-;;;:::i;86:2510:66:-;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;:::o;:::-;33390:31:0;86:2510:66;;-1:-1:-1;;;;86:2510:66;;;;;;-1:-1:-1;;;86:2510:66;;;;;;;:::o;32887:821:0:-;33431:30;32887:821;;32999:6;32982:9;;;32999:6;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;;2058:9;86:2510;;;;;33506:15:0;;86:2510:66;;;:::i;33071:14:0:-;86:2510:66;:::i;:::-;;;;;33164:26:0;33431:30;33328:51;33245:26;33164:46;:26;;;:::i;:::-;33193:17;;;:::i;33164:46::-;33245:26;:::i;:::-;33328:51;;;:::i;:::-;86:2510:66;;33390:31:0;;86:2510:66;;33390:31:0;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;33390:31:0;:::i;:::-;-1:-1:-1;;;;;86:2510:66;-1:-1:-1;;;;;86:2510:66;33390:31:0;86:2510:66;;;33390:31:0;86:2510:66;;33390:31:0;;86:2510:66;;;-1:-1:-1;;;;;86:2510:66;33431:30:0;:::i;86:2510:66:-;33431:30:0;:::i;:::-;;:::i;:::-;33506:15;;:::i;:::-;86:2510:66;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;33538:25:0;;86:2510:66;;33538:25:0;-1:-1:-1;;;;;86:2510:66;;33574:128:0;;32887:821;;:::o;33574:128::-;-1:-1:-1;;;;;;;;;;;33615:76:0;33641:49;-1:-1:-1;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;;;;33641:49:0;:::i;:::-;86:2510:66;;;;;;;;;;;;;33615:76:0;;;;32887:821::o;86:2510:66:-;;;;;;;;;;;;-1:-1:-1;;86:2510:66;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;23889:576:0;;;;86:2510:66;;;;;;24123:27:0;;;24119:46;;24196:1;-1:-1:-1;24196:1:0;;24229:27;;;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;24213:48:0;24196:1;24213:48;:::o;24176:283::-;24196:1;-1:-1:-1;24196:1:0;;24334:27;;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;24315:48:0;24196:1;24315:48;;:::o;24278:181::-;24410:13;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;;24394:54:0:o;24119:46::-;24152:13;;;;;24160:1;24152:13;24160:1;24152:13;:::o;86:2510:66:-;;;;;;;;;;;;;:::i;30470:208:0:-;86:2510:66;;-1:-1:-1;;;30568:54:0;;-1:-1:-1;;;;;86:2510:66;;;30568:54:0;;;86:2510:66;30608:4:0;86:2510:66;;;;;;;;;;;30568:54:0;;86:2510:66;;;;;;-1:-1:-1;;86:2510:66;30568:54:0;;;;;;;30470:208;-1:-1:-1;30568:54:0;;;30470:208;30636:8;;30632:39;;30470:208::o;30632:39::-;86:2510:66;;-1:-1:-1;;;30653:18:0;;30568:54;;30653:18;30568:54;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;86:2510:66;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;2135:4:2;;86:2510:66;;;;;2135:4:2;86:2510:66:o;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;86:2510:66;-1:-1:-1;;;;;1927:4:2;86:2510:66;;;;;;:::o;:::-;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;:::i;:::-;;;;;;1927:4:2;-1:-1:-1;;;;;1927:4:2;86:2510:66;;;;;;;;;:::o;33798:773:0:-;;;;;-1:-1:-1;;;;;86:2510:66;33901:33:0;86:2510:66;;;33901:33:0;;;:::i;:::-;33974:28;;;:::i;:::-;34045:23;86:2510:66;34045:23:0;;86:2510:66;;;;;;;;34045:16:0;86:2510:66;;;;;;;34045:23:0;86:2510:66;:::i;:::-;;34078:33:0;;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;;;;34078:33:0;:::i;:::-;-1:-1:-1;;;;;86:2510:66;2135:4:2;;;34078:33:0;86:2510:66;;-1:-1:-1;;;;;86:2510:66;34151:19:0;34125:45;86:2510:66;34151:19:0;;;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;34125:45:0;86:2510:66;;34125:45:0;34121:77;;34489:16;86:2510:66;34233:19:0;34522:42;34233:19;34379:53;34522:42;34233:19;34379:26;34233:19;34379;34233;34304:22;34233:34;:26;:19;;;86:2510:66;;;;;;;;22062:14:0;86:2510:66;;;;;;;34233:19:0;86:2510:66;;;;;;;;;;;;;;;;34233:34:0;34304:22;;;:::i;:::-;34337:23;;;;;86:2510:66;;;;;;;;34045:16:0;86:2510:66;;;;;;;34337:23:0;86:2510:66;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;22062:14:0;86:2510:66;;;;;;;34379:53:0;34489:16;;:::i;:::-;86:2510:66;;-1:-1:-1;;;;;86:2510:66;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;;34522:42:0;;;;33798:773::o;34121:77::-;86:2510:66;;-1:-1:-1;;;34179:19:0;;;;;28833:543;;;;;-1:-1:-1;;;;;86:2510:66;;;29017:23:0;;;:48;;28833:543;29013:357;;;86:2510:66;;;29114:18:0;29146:29;86:2510:66;29114:62:0;86:2510:66;;;;;;;;1247:1:2;86:2510:66;;;29146:29:0;-1:-1:-1;;;;;86:2510:66;;;;;;;2058:9;86:2510;;;;;;;29114:18:0;86:2510:66;;-1:-1:-1;;;;86:2510:66;;;;;;;;29114:62:0;;;86:2510:66;;-1:-1:-1;;;86:2510:66;;;;;;;;29013:357:0;29197:23;:48;;;;29013:357;29193:177;;;;29013:357;;28833:543::o;29193:177::-;86:2510:66;29296:18:0;29329:29;86:2510:66;29296:63:0;86:2510:66;;;;;;;;1247:1:2;86:2510:66;;;29329:29:0;29327:32;29296:18;86:2510:66;;;;;;;;2058:9;86:2510;;;;;;;29296:18:0;86:2510:66;;;;;29296:63:0;;86:2510:66;;;;;;;;;;;;;;;;;;;;29197:48:0;86:2510:66;29224:21:0;;-1:-1:-1;29197:48:0;;;;29017;86:2510:66;;;;29044:21:0;;29017:48;;36404:566;;;;;1247:1:2;26642:10:0;86:2510:66;;;26642:48:0;36521:39;;36575:28;36574:29;36575:28;;;:::i;36574:29::-;36570:56;;-1:-1:-1;;;;;86:2510:66;;;;;;36640:10:0;36636:39;;36699:9;;86:2510:66;;;;36690:18:0;36686:278;86:2510:66;;;-1:-1:-1;36856:6:0;;-1:-1:-1;;36728:27:0;;36856:6;36724:89;36784:14;;;;;:::i;:::-;36724:89;36856:6;:::i;36686:278::-;36937:15;;;;;;:::i;:::-;;;:::i;36636:39::-;86:2510:66;;-1:-1:-1;;;36659:16:0;;;;;86:2510:66;-1:-1:-1;;;86:2510:66;;;;;;;:::o;37086:1634:0:-;;;;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;;2058:9;86:2510;;;;;;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;;2058:9;86:2510;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;37417:26:0;;;;:::i;:::-;37446:17;;;:::i;:::-;37417:46;;;:::i;:::-;37493:26;;;;:::i;:::-;37522:17;;;;:::i;:::-;37493:46;;;:::i;:::-;37574:26;;;;:::i;:::-;37635;;;;:::i;:::-;37721:54;;;;;;:::i;:::-;37831:51;;;;;:::i;:::-;86:2510:66;;;37999:15:0;86:2510:66;;;-1:-1:-1;;;;;86:2510:66;;;;37999:30:0;;;;:::i;:::-;:47;;;;:::i;:::-;37981:65;;-1:-1:-1;;;;;86:2510:66;-1:-1:-1;;;;;86:2510:66;33390:31:0;86:2510:66;;;33390:31:0;86:2510:66;;37981:65:0;37999:15;86:2510:66;;;-1:-1:-1;;;;;86:2510:66;38074:30:0;;;;:::i;:::-;:44;;;;:::i;:::-;38056:62;;;:::i;:::-;38163:15;;;;:::i;:::-;38223;;;;:::i;:::-;-1:-1:-1;38254:14:0;;38250:184;;37086:1634;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;38444:132:0;;37086:1634;86:2510:66;;;;38586:128:0;;37086:1634;;:::o;38586:128::-;-1:-1:-1;;;;;;;;;;;38627:76:0;38653:49;-1:-1:-1;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;;;38653:49:0;86:2510:66;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;38444:132:0;-1:-1:-1;;;;;;;;;;;38487:78:0;38513:51;-1:-1:-1;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;;;38513:51:0;86:2510:66;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;38487:78:0;;;;38444:132;;;;38250:184;38296:11;;;:::i;:::-;38311:13;-1:-1:-1;38284:65:0;;38367:28;38368:27;;;:::i;38367:28::-;38363:60;;38250:184;;;38363:60;86:2510:66;;-1:-1:-1;;;38404:19:0;;;;;38284:65;86:2510:66;;-1:-1:-1;;;38333:16:0;;;;;24563:585;;;86:2510:66;;;;;;24806:27:0;;;24802:46;;24879:1;-1:-1:-1;24879:1:0;;24912:27;;;;;:::i;24859:283::-;24879:1;-1:-1:-1;24879:1:0;;25017:27;;;;:::i;24961:181::-;25116:13;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;25077:54:0;:::o;86:2510:66:-;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;:::o;38809:909:0:-;-1:-1:-1;;;;;86:2510:66;;;-1:-1:-1;86:2510:66;;;38937:14:0;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38809:909:0;86:2510:66;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;39076:22:0;38809:909;86:2510:66;39076:22:0;:::i;:::-;39135;;;;;:::i;:::-;39168:19;;;;;86:2510:66;;;;;;;;22062:14:0;86:2510:66;;;;;;;39168:19:0;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;39168:53:0;;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;;;22062:14:0;86:2510:66;;;;;;;;;;;;;;;;;39231:53:0;;:19;;:53;:::i;:::-;39324:28;;;:::i;:::-;39408:16;;;;;;:::i;:::-;39481;;;;:::i;:::-;39597:27;;;:::i;:::-;39596:28;39592:60;;86:2510:66;;;39668:43:0;86:2510:66;;;;;;;;;;39668:43:0;;38809:909::o;41061:514::-;;;;;1247:1:2;26866:10:0;86:2510:66;;;26866:48:0;41177:39;;41231:28;41230:29;41231:28;;;:::i;41230:29::-;41226:56;;-1:-1:-1;;;;;86:2510:66;;;41306:9:0;86:2510:66;;;41297:18:0;86:2510:66;;-1:-1:-1;41462:6:0;;-1:-1:-1;;41335:27:0;;41462:6;41331:89;41391:14;;;;;:::i;:::-;41331:89;41462:6;:::i;41293:276::-;41542:15;;;;;;:::i;:::-;;;:::i;41692:1027::-;;;42196:31;41692:1027;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;;2058:9;86:2510;;;;;;;;:::i;:::-;42272:15:0;86:2510:66;;;;;;;;41921:46:0;:26;;;:::i;:::-;41950:17;;;:::i;41921:46::-;42002:26;42196:31;42088:54;42002:26;;;:::i;:::-;42088:54;;;:::i;:::-;42153:33;;86:2510:66;;42153:33:0;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;;;42153:33:0;;86:2510:66;;;-1:-1:-1;;;;;86:2510:66;33390:31:0;:::i;42272:15::-;-1:-1:-1;42303:14:0;;42299:184;;41692:1027;42507:9;42522:6;42507:9;;;42522:6;:::i;:::-;86:2510:66;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;42545:25:0;;86:2510:66;;42545:25:0;-1:-1:-1;;;;;86:2510:66;;42581:132:0;;41692:1027;;:::o;42581:132::-;-1:-1:-1;;;;;;;;;;;42624:78:0;42650:51;-1:-1:-1;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;;;42299:184:0;42345:11;;;:::i;:::-;42360:13;-1:-1:-1;42333:65:0;;42416:28;42417:27;;;:::i;42416:28::-;42412:60;;42299:184;;;30736:187;86:2510:66;;-1:-1:-1;;;30833:33:0;;-1:-1:-1;;;;;86:2510:66;;;30833:33:0;;;86:2510:66;;;;;;;;30833:33:0;;86:2510:66;;;;;;-1:-1:-1;;86:2510:66;30833:33:0;;;;;;;30736:187;30833:33;;;;30736:187;30880:8;;30876:40;;30736:187::o;30876:40::-;86:2510:66;;-1:-1:-1;;;30897:19:0;;30833:33;;30897:19;30833:33;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;42809:747;;;86:2510:66;;;;;;;;;;;-1:-1:-1;86:2510:66;42936:14:0;86:2510:66;;43393:27:0;-1:-1:-1;;;;;86:2510:66;43277:16:0;86:2510:66;42936:26:0;86:2510:66;;-1:-1:-1;86:2510:66;;;;;;;;;;;;;;;;;42936:26:0;86:2510:66;;43007:22:0;;;;:::i;:::-;43040:23;:50;:23;;86:2510:66;;;;;;;;34045:16:0;86:2510:66;;;;;;;43040:23:0;:50;86:2510:66;;;;;43040:50:0;:::i;:::-;;;:::i;:::-;43100:53;:19;:26;:19;;;86:2510:66;;;;;;;;22062:14:0;86:2510:66;;;;;;;43100:53:0;43193:28;;;:::i;:::-;43277:16;;:::i;43393:27::-;43392:28;43388:60;;86:2510:66;;;43507:42:0;86:2510:66;;43459:32:0;;;;;;:::i;:::-;86:2510:66;;;;;;;;43507:42:0;;42809:747::o;86:2510:66:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2135:4:2;-1:-1:-1;;;;;86:2510:66;;;;;;;2135:4:2;86:2510:66;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;43810:969:0:-;;;;;27086:10;1247:1:2;86:2510:66;;;;27086:46:0;43901:37;;43965:9;43949:25;;;:::i;:::-;44024:1;44027:19;;;;;;44178:9;;;44737:26;44178:9;44673:54;44695:32;44703:23;44167:20;86:2510:66;44178:9:0;;;44167:20;;:::i;:::-;44618:45;44640:23;86:2510:66;44553:26:0;;86:2510:66;;;;;;;;44553:16:0;86:2510:66;;;;;;;44553:26:0;86:2510:66;:::i;:::-;;44589:19:0;;86:2510:66;;;;;;;;44589:19:0;:::i;:::-;86:2510:66;;;;;44640:23:0;44618:45;:18;;;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;;;44618:45:0;44713:13;44703:23;;:::i;:::-;44695:32;:::i;:::-;44673:54;:18;;;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;;;44673:54:0;-1:-1:-1;;;;;86:2510:66;2135:4:2;;;44673:54:0;-1:-1:-1;;;;;86:2510:66;;;;;44553:16:0;86:2510:66;;;;;;;44737:26:0;86:2510:66;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;86:2510:66;;;;;;-1:-1:-1;;;86:2510:66;;;;;;;;;;;;;;;;;;;;;;;;44015:10:0;44089:11;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;86:2510:66;44015:10:0;;44873:2412;;44955:24;44956:23;;;:::i;44955:24::-;44951:54;;45047:18;86:2510:66;45047:18:0;;86:2510:66;;;;;;;;2058:9;86:2510;;;;;;;;;;;;;;;;;45148:26:0;;;;:::i;:::-;45202:20;;;86:2510:66;45202:20:0;;;86:2510:66;;;;;;45253:28:0;45262:18;45253:28;:::i;:::-;45291:22;-1:-1:-1;45329:11:0;;86:2510:66;;45346:9:0;;;86:2510:66;45324:722:0;45329:11;86:2510:66;;;45342:13:0;;;;;;;86:2510:66;;;;;;;;1247:1:2;;;28683:37:0;;;45373:632;;45329:11;86:2510:66;;;;;45329:11:0;;45373:632;45448:15;;;;;;:::i;:::-;45497;;;;86:2510:66;-1:-1:-1;;;;;86:2510:66;;;;;;;22062:14:0;86:2510:66;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;86:2510:66;;;;;34045:16:0;86:2510:66;;;;;;;;;45497:15:0;;-1:-1:-1;;;;;86:2510:66;;;;;;45497:15:0;;45668:55;;86:2510:66;;;45668:55:0;:::i;:::-;;;;:::i;:::-;45789:19;;;;86:2510:66;45789:19:0;;;-1:-1:-1;;;;;86:2510:66;45780:29:0;;;:::i;:::-;45811:15;;;86:2510:66;-1:-1:-1;;;;;86:2510:66;45758:69:0;;-1:-1:-1;;;;;86:2510:66;;45758:69:0;:::i;:::-;45876:27;;;;;86:2510:66;45859:45:0;;-1:-1:-1;;;;;86:2510:66;45876:27:0;45859:45;:::i;:::-;45845:59;;;:::i;:::-;86:2510:66;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;45928:62:0;;86:2510:66;;45928:62:0;45373:632;;;;;45342:13;;;;;;;;;;;;;;;46159:36;46172:23;28451:19;46118:9;28451:11;-1:-1:-1;;;;;46118:9:0;86:2510:66;28451:11:0;;;:::i;:::-;:19;:::i;46172:23::-;46159:36;;:::i;:::-;46291:14;-1:-1:-1;46291:14:0;;46287:59;;45324:722;46378:26;;;:::i;:::-;46456:12;;;;;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;;;;;;2058:9;86:2510;;;;;46506:18:0;;86:2510:66;;-1:-1:-1;;;;86:2510:66;;;46594:48:0;;;:::i;:::-;86:2510:66;;-1:-1:-1;;;;;86:2510:66;46816:31:0;;;;:::i;:::-;;;-1:-1:-1;;;;;86:2510:66;-1:-1:-1;;;;;86:2510:66;33390:31:0;86:2510:66;;;33390:31:0;86:2510:66;;46816:31:0;86:2510:66;;;;-1:-1:-1;;;;;86:2510:66;46857:30:0;;;;:::i;:::-;;;;:::i;:::-;46932:23;;;:::i;:::-;46920:36;;;:::i;:::-;46995:51;;;;;:::i;:::-;86:2510:66;;;;;;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;47061:62:0;;86:2510:66;47061:62:0;86:2510:66;;;-1:-1:-1;;47134:145:0;;44873:2412;;:::o;47134:145::-;-1:-1:-1;;;;;;;;;;;47175:93:0;47205:62;-1:-1:-1;86:2510:66;47241:25:0;86:2510:66;;;-1:-1:-1;;;;;86:2510:66;;;;47241:25:0;;:::i;:::-;47205:62;;:::i;46287:59::-;-1:-1:-1;;;46287:59:0;;44951:54;86:2510:66;;-1:-1:-1;;;44988:17:0;;;;;49235:977;;50130:40;49367:28;50130:75;49235:977;49367:28;:::i;:::-;27499:10;50155:15;50130:22;49426:29;86:2510:66;;;;;49435:19:0;;;86:2510:66;;49426:29:0;:::i;:::-;-1:-1:-1;;;;;49726:27:0;;;;;;;86:2510:66;;27499:10:0;86:2510:66;;;;;;;;;49235:977:0;86:2510:66;;;49688:21:0;27499:10;:::i;:::-;86:2510:66;;;;;;49235:977:0;86:2510:66;;27499:10:0;;:::i;:::-;86:2510:66;49886:18:0;49877:28;49886:18;49877:28;:::i;50130:22::-;50155:15;;86:2510:66;;50130:40:0;;:::i;:::-;86:2510:66;;;;;49235:977:0;50196:9;86:2510:66;;50130:75:0;:::i;86:2510:66:-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;52573:334:0;52688:58;52711:16;;:::i;:::-;:34;86:2510:66;;;52730:15:0;86:2510:66;;;;52711:34:0;;:::i;52688:58::-;-1:-1:-1;;;;;;86:2510:66;;;-1:-1:-1;86:2510:66;;;52775:9:0;86:2510:66;;;;;;;;;;52820:13:0;;;-1:-1:-1;;;52873:22:0;;52836:60;52873:22;;:::i;52820:80::-;;;;52573:334;:::o;53206:341::-;53327:58;53350:16;;:::i;53327:58::-;-1:-1:-1;;;;;86:2510:66;;;-1:-1:-1;86:2510:66;;;53414:9:0;86:2510:66;;;;;;;;;;-1:-1:-1;53459:13:0;;;-1:-1:-1;;;53524:10:0;53512:23;53524:10;53475:61;53524:10;;:::i;:::-;53512:23;:::i;53647:418::-;;53731:328;;;;;;;;53704:17;;53731:328;;;;;;;;;;;;;;;;2384:151:2;-1:-1:-1;;;;;86:2510:66;;;;;2483:16:2;;;;2384:151;2483:45;;;;2476:52;;2384:151;:::o;2483:45::-;-1:-1:-1;86:2510:66;;;2503:9:2;86:2510:66;;;;;;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;;;;-1:-1:-1;86:2510:66;;2384:151:2;:::o;2660:335::-;2770:1;86:2510:66;;;;2751:20:2;2770:1;;1927:4;3215:43;2794:72;86:2510:66;-1:-1:-1;;;;;2770:1:2;86:2510:66;;;-1:-1:-1;;;;;86:2510:66;3215:43:2;:::i;:::-;86:2510:66;2794:72:2;:::i;2747:242::-;2905:73;2915:62;2904:74;86:2510:66;2959:16:2;-1:-1:-1;;;;;2770:1:2;86:2510:66;;;;2959:16:2;;:::i;:::-;-1:-1:-1;;;;;86:2510:66;2915:62:2;;:::i;2905:73::-;2904:74;:::i;3088:196::-;1927:4;3088:196;-1:-1:-1;;;;;;;;;;3215:43:2;3088:196;86:2510:66;;;3215:43:2;:::i;3680:333::-;3788:1;3771:18;;3788:1;;4354:62;3812:72;86:2510:66;4363:32:2;-1:-1:-1;;;;;3788:1:2;86:2510:66;;4363:32:2;;:::i;:::-;86:2510:66;;;;3767:240:2;86:2510:66;4354:62:2;:::i;:::-;3812:72;:::i;86:2510:66:-;;;:::i;:::-;;;3767:240:2;3923:73;4762:85;3979:14;4771:51;3922:74;86:2510:66;4771:32:2;-1:-1:-1;;;;;3788:1:2;86:2510:66;;;;3979:14:2;;;;:::i;:::-;4771:32;:::i;:::-;:51;:::i;:::-;4825:1;86:2510:66;;;;3767:240:2;86:2510:66;;;;3767:240:2;-1:-1:-1;;86:2510:66;;4762:85:2;:::i;3923:73::-;3922:74;:::i;86:2510:66:-;;;:::i;:::-;;;;;;:::i;:::-;;;377:146:8;-1:-1:-1;;;;;446:20:8;;;;442:48;;86:2510:66;377:146:8;:::o;442:48::-;86:2510:66;;-1:-1:-1;;;475:15:8;;;;;529:151;-1:-1:-1;;;;;600:21:8;;;;596:50;;86:2510:66;529:151:8;:::o;596:50::-;86:2510:66;;-1:-1:-1;;;630:16:8;;;;;686:151;-1:-1:-1;;;;;757:21:8;;;;753:50;;86:2510:66;686:151:8;:::o;753:50::-;86:2510:66;;-1:-1:-1;;;787:16:8;;;;;843:161;-1:-1:-1;;;;;86:2510:66;930:16:8;918:29;;914:57;;86:2510:66;;843:161:8;:::o;914:57::-;86:2510:66;;-1:-1:-1;;;956:15:8;;;;;1010:161;-1:-1:-1;;;;;1085:29:8;;1081:57;;1010:161;:::o;1081:57::-;86:2510:66;;-1:-1:-1;;;1123:15:8;;;;;1177:141;1258:1;86:2510:66;;;1254:5:8;1250:34;;-1:-1:-1;;;;;86:2510:66;1177:141:8;:::o;1250:34::-;86:2510:66;;-1:-1:-1;;;1268:16:8;;;;;1324:141;1405:1;1401:5;;1397:34;;1324:141;:::o;1471:88::-;-1:-1:-1;;1543:9:8;;;;1547:1;1471:88;:::o;216:152:66:-;299:11;86:2510;299:15;;;;86:2510;;216:152;:::o;299:62::-;15562:15:0;15581:5;15562:15;:24;;15558:56;;86:2510:66;15562:15:0;86:2510:66;216:152;:::o;15558:56:0:-;86:2510:66;;-1:-1:-1;;;15595:19:0;;;;;544:433:66;86:2510;;930:40;544:433;-1:-1:-1;;;;;86:2510:66;;;682:22;;;86:2510;736:26;1927:4:2;736:26:66;;86:2510;;-1:-1:-1;;;;;;;;86:2510:66;;794:26;;;86:2510;;;;1927:4:2;;;;86:2510:66;;-1:-1:-1;;;;;86:2510:66;;;;;;;;-1:-1:-1;86:2510:66;880:40;-1:-1:-1;;;;;830:40:66;848:22;86:2510;848:22;;86:2510;;-1:-1:-1;;;;;86:2510:66;-1:-1:-1;;;;;86:2510:66;33390:31:0;86:2510:66;;;33390:31:0;86:2510:66;;830:40;898:22;;;86:2510;;880:40;:::i;:::-;948:22;86:2510;9326:15:0;86:2510:66;;-1:-1:-1;;;;86:2510:66;;;;;;;-1:-1:-1;;;86:2510:66;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;86:2510:66;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;86:2510:66;;;;;;:::o",
  "source": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.15;\n\nimport \"../Comet.sol\";\n\ncontract CometHarness is Comet {\n    uint public nowOverride;\n\n    constructor(Configuration memory config) Comet(config) {}\n\n    function getNowInternal() override internal view returns (uint40) {\n        return nowOverride > 0 ? uint40(nowOverride) : super.getNowInternal();\n    }\n\n    function getNow() public view returns (uint40) {\n        return getNowInternal();\n    }\n\n    function setNow(uint now_) external {\n        nowOverride = now_;\n    }\n\n    function setTotalsBasic(TotalsBasic memory totals) external {\n        baseSupplyIndex = totals.baseSupplyIndex;\n        baseBorrowIndex = totals.baseBorrowIndex;\n        trackingSupplyIndex = totals.trackingSupplyIndex;\n        trackingBorrowIndex = totals.trackingBorrowIndex;\n        totalSupplyBase = totals.totalSupplyBase;\n        totalBorrowBase = totals.totalBorrowBase;\n        lastAccrualTime = totals.lastAccrualTime;\n    }\n\n    function setTotalsCollateral(address asset, TotalsCollateral memory totals) external {\n        totalsCollateral[asset] = totals;\n    }\n\n    function setBasePrincipal(address account, int104 principal) external {\n        userBasic[account].principal = principal;\n    }\n\n    function setCollateralBalance(address account, address asset, uint128 balance) external {\n        uint128 oldBalance = userCollateral[account][asset].balance;\n        userCollateral[account][asset].balance = balance;\n        AssetInfo memory assetInfo = getAssetInfoByAddress(asset);\n        updateAssetsIn(account, assetInfo, oldBalance, balance);\n    }\n\n    function updateAssetsInExternal(\n        address account,\n        address asset,\n        uint128 initialUserBalance,\n        uint128 finalUserBalance\n    ) external {\n        AssetInfo memory assetInfo = getAssetInfoByAddress(asset);\n        updateAssetsIn(account, assetInfo, initialUserBalance, finalUserBalance);\n    }\n\n    function getAssetList(address account) external view returns (address[] memory result) {\n        uint16 assetsIn = userBasic[account].assetsIn;\n\n        uint8 count = 0;\n        for (uint8 i = 0; i < numAssets; i++) {\n            if (isInAsset(assetsIn, i)) {\n                count++;\n            }\n        }\n\n        result = new address[](count);\n\n        uint j = 0;\n        for (uint8 i = 0; i < numAssets; i++) {\n            if (isInAsset(assetsIn, i)) {\n                result[j] = getAssetInfo(i).asset;\n                j++;\n            }\n        }\n\n        return result;\n    }\n\n    function accrue() external {\n        accrueInternal();\n    }\n}",
  "sourcePath": "/home/stephensb/sb-labs/solidity-contracts/contracts/comet/contracts/test/CometHarness.sol",
  "ast": {
    "absolutePath": "project:/contracts/comet/contracts/test/CometHarness.sol",
    "exportedSymbols": {
      "Comet": [
        4239
      ],
      "CometConfiguration": [
        4308
      ],
      "CometCore": [
        4573
      ],
      "CometHarness": [
        15302
      ],
      "CometMainInterface": [
        5859
      ],
      "CometMath": [
        6067
      ],
      "CometStorage": [
        6894
      ],
      "ERC20": [
        8552
      ],
      "IPriceFeed": [
        8815
      ]
    },
    "id": 15303,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15016,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:66"
      },
      {
        "absolutePath": "project:/contracts/comet/contracts/Comet.sol",
        "file": "../Comet.sol",
        "id": 15017,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15303,
        "sourceUnit": 4240,
        "src": "62:22:66",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15018,
              "name": "Comet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4239,
              "src": "111:5:66"
            },
            "id": 15019,
            "nodeType": "InheritanceSpecifier",
            "src": "111:5:66"
          }
        ],
        "canonicalName": "CometHarness",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 15302,
        "linearizedBaseContracts": [
          15302,
          4239,
          5859,
          4573,
          6067,
          6894,
          4308
        ],
        "name": "CometHarness",
        "nameLocation": "95:12:66",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8596da23",
            "id": 15021,
            "mutability": "mutable",
            "name": "nowOverride",
            "nameLocation": "135:11:66",
            "nodeType": "VariableDeclaration",
            "scope": 15302,
            "src": "123:23:66",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15020,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "123:4:66",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 15030,
              "nodeType": "Block",
              "src": "208:2:66",
              "statements": []
            },
            "id": 15031,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15027,
                    "name": "config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15024,
                    "src": "200:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Configuration_$4292_memory_ptr",
                      "typeString": "struct CometConfiguration.Configuration memory"
                    }
                  }
                ],
                "id": 15028,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 15026,
                  "name": "Comet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4239,
                  "src": "194:5:66"
                },
                "nodeType": "ModifierInvocation",
                "src": "194:13:66"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15024,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "186:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15031,
                  "src": "165:27:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Configuration_$4292_memory_ptr",
                    "typeString": "struct CometConfiguration.Configuration"
                  },
                  "typeName": {
                    "id": 15023,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15022,
                      "name": "Configuration",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4292,
                      "src": "165:13:66"
                    },
                    "referencedDeclaration": 4292,
                    "src": "165:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Configuration_$4292_storage_ptr",
                      "typeString": "struct CometConfiguration.Configuration"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "164:29:66"
            },
            "returnParameters": {
              "id": 15029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "208:0:66"
            },
            "scope": 15302,
            "src": "153:57:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1201
            ],
            "body": {
              "id": 15049,
              "nodeType": "Block",
              "src": "282:86:66",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 15039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 15037,
                        "name": "nowOverride",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15021,
                        "src": "299:11:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 15038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "313:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "299:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 15044,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967271,
                          "src": "339:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_CometHarness_$15302_$",
                            "typeString": "type(contract super CometHarness)"
                          }
                        },
                        "id": 15045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getNowInternal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1201,
                        "src": "339:20:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint40_$",
                          "typeString": "function () view returns (uint40)"
                        }
                      },
                      "id": 15046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "339:22:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "id": 15047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "299:62:66",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 15042,
                          "name": "nowOverride",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15021,
                          "src": "324:11:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 15041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "317:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint40_$",
                          "typeString": "type(uint40)"
                        },
                        "typeName": {
                          "id": 15040,
                          "name": "uint40",
                          "nodeType": "ElementaryTypeName",
                          "src": "317:6:66",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 15043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "317:19:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "functionReturnParameters": 15036,
                  "id": 15048,
                  "nodeType": "Return",
                  "src": "292:69:66"
                }
              ]
            },
            "id": 15050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNowInternal",
            "nameLocation": "225:14:66",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15033,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "242:8:66"
            },
            "parameters": {
              "id": 15032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:2:66"
            },
            "returnParameters": {
              "id": 15036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15035,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15050,
                  "src": "274:6:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 15034,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "273:8:66"
            },
            "scope": 15302,
            "src": "216:152:66",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15058,
              "nodeType": "Block",
              "src": "421:40:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 15055,
                      "name": "getNowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        15050
                      ],
                      "referencedDeclaration": 15050,
                      "src": "438:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint40_$",
                        "typeString": "function () view returns (uint40)"
                      }
                    },
                    "id": 15056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "438:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "functionReturnParameters": 15054,
                  "id": 15057,
                  "nodeType": "Return",
                  "src": "431:23:66"
                }
              ]
            },
            "functionSelector": "bbe4fd50",
            "id": 15059,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNow",
            "nameLocation": "383:6:66",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "389:2:66"
            },
            "returnParameters": {
              "id": 15054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15059,
                  "src": "413:6:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint40",
                    "typeString": "uint40"
                  },
                  "typeName": {
                    "id": 15052,
                    "name": "uint40",
                    "nodeType": "ElementaryTypeName",
                    "src": "413:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "412:8:66"
            },
            "scope": 15302,
            "src": "374:87:66",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15068,
              "nodeType": "Block",
              "src": "503:35:66",
              "statements": [
                {
                  "expression": {
                    "id": 15066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15064,
                      "name": "nowOverride",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15021,
                      "src": "513:11:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15065,
                      "name": "now_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15061,
                      "src": "527:4:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "513:18:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15067,
                  "nodeType": "ExpressionStatement",
                  "src": "513:18:66"
                }
              ]
            },
            "functionSelector": "e380ae96",
            "id": 15069,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNow",
            "nameLocation": "476:6:66",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15061,
                  "mutability": "mutable",
                  "name": "now_",
                  "nameLocation": "488:4:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15069,
                  "src": "483:9:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15060,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:4:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "482:11:66"
            },
            "returnParameters": {
              "id": 15063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "503:0:66"
            },
            "scope": 15302,
            "src": "467:71:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15110,
              "nodeType": "Block",
              "src": "604:373:66",
              "statements": [
                {
                  "expression": {
                    "id": 15078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15075,
                      "name": "baseSupplyIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6841,
                      "src": "614:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 15076,
                        "name": "totals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15072,
                        "src": "632:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TotalsBasic_$6808_memory_ptr",
                          "typeString": "struct CometStorage.TotalsBasic memory"
                        }
                      },
                      "id": 15077,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "baseSupplyIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6793,
                      "src": "632:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "614:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 15079,
                  "nodeType": "ExpressionStatement",
                  "src": "614:40:66"
                },
                {
                  "expression": {
                    "id": 15083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15080,
                      "name": "baseBorrowIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6843,
                      "src": "664:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 15081,
                        "name": "totals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15072,
                        "src": "682:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TotalsBasic_$6808_memory_ptr",
                          "typeString": "struct CometStorage.TotalsBasic memory"
                        }
                      },
                      "id": 15082,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "baseBorrowIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6795,
                      "src": "682:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "664:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 15084,
                  "nodeType": "ExpressionStatement",
                  "src": "664:40:66"
                },
                {
                  "expression": {
                    "id": 15088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15085,
                      "name": "trackingSupplyIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6845,
                      "src": "714:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 15086,
                        "name": "totals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15072,
                        "src": "736:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TotalsBasic_$6808_memory_ptr",
                          "typeString": "struct CometStorage.TotalsBasic memory"
                        }
                      },
                      "id": 15087,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "trackingSupplyIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6797,
                      "src": "736:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "714:48:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 15089,
                  "nodeType": "ExpressionStatement",
                  "src": "714:48:66"
                },
                {
                  "expression": {
                    "id": 15093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15090,
                      "name": "trackingBorrowIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6847,
                      "src": "772:19:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 15091,
                        "name": "totals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15072,
                        "src": "794:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TotalsBasic_$6808_memory_ptr",
                          "typeString": "struct CometStorage.TotalsBasic memory"
                        }
                      },
                      "id": 15092,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "trackingBorrowIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6799,
                      "src": "794:26:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "772:48:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 15094,
                  "nodeType": "ExpressionStatement",
                  "src": "772:48:66"
                },
                {
                  "expression": {
                    "id": 15098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15095,
                      "name": "totalSupplyBase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6849,
                      "src": "830:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint104",
                        "typeString": "uint104"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 15096,
                        "name": "totals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15072,
                        "src": "848:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TotalsBasic_$6808_memory_ptr",
                          "typeString": "struct CometStorage.TotalsBasic memory"
                        }
                      },
                      "id": 15097,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupplyBase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6801,
                      "src": "848:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint104",
                        "typeString": "uint104"
                      }
                    },
                    "src": "830:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint104",
                      "typeString": "uint104"
                    }
                  },
                  "id": 15099,
                  "nodeType": "ExpressionStatement",
                  "src": "830:40:66"
                },
                {
                  "expression": {
                    "id": 15103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15100,
                      "name": "totalBorrowBase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6851,
                      "src": "880:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint104",
                        "typeString": "uint104"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 15101,
                        "name": "totals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15072,
                        "src": "898:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TotalsBasic_$6808_memory_ptr",
                          "typeString": "struct CometStorage.TotalsBasic memory"
                        }
                      },
                      "id": 15102,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalBorrowBase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6803,
                      "src": "898:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint104",
                        "typeString": "uint104"
                      }
                    },
                    "src": "880:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint104",
                      "typeString": "uint104"
                    }
                  },
                  "id": 15104,
                  "nodeType": "ExpressionStatement",
                  "src": "880:40:66"
                },
                {
                  "expression": {
                    "id": 15108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15105,
                      "name": "lastAccrualTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6853,
                      "src": "930:15:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 15106,
                        "name": "totals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15072,
                        "src": "948:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TotalsBasic_$6808_memory_ptr",
                          "typeString": "struct CometStorage.TotalsBasic memory"
                        }
                      },
                      "id": 15107,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastAccrualTime",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6805,
                      "src": "948:22:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint40",
                        "typeString": "uint40"
                      }
                    },
                    "src": "930:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint40",
                      "typeString": "uint40"
                    }
                  },
                  "id": 15109,
                  "nodeType": "ExpressionStatement",
                  "src": "930:40:66"
                }
              ]
            },
            "functionSelector": "e9a6e597",
            "id": 15111,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalsBasic",
            "nameLocation": "553:14:66",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15072,
                  "mutability": "mutable",
                  "name": "totals",
                  "nameLocation": "587:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15111,
                  "src": "568:25:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TotalsBasic_$6808_memory_ptr",
                    "typeString": "struct CometStorage.TotalsBasic"
                  },
                  "typeName": {
                    "id": 15071,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15070,
                      "name": "TotalsBasic",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6808,
                      "src": "568:11:66"
                    },
                    "referencedDeclaration": 6808,
                    "src": "568:11:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TotalsBasic_$6808_storage_ptr",
                      "typeString": "struct CometStorage.TotalsBasic"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "567:27:66"
            },
            "returnParameters": {
              "id": 15074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "604:0:66"
            },
            "scope": 15302,
            "src": "544:433:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15125,
              "nodeType": "Block",
              "src": "1068:49:66",
              "statements": [
                {
                  "expression": {
                    "id": 15123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 15119,
                        "name": "totalsCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6861,
                        "src": "1078:16:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_TotalsCollateral_$6813_storage_$",
                          "typeString": "mapping(address => struct CometStorage.TotalsCollateral storage ref)"
                        }
                      },
                      "id": 15121,
                      "indexExpression": {
                        "id": 15120,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15113,
                        "src": "1095:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1078:23:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TotalsCollateral_$6813_storage",
                        "typeString": "struct CometStorage.TotalsCollateral storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15122,
                      "name": "totals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15116,
                      "src": "1104:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TotalsCollateral_$6813_memory_ptr",
                        "typeString": "struct CometStorage.TotalsCollateral memory"
                      }
                    },
                    "src": "1078:32:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TotalsCollateral_$6813_storage",
                      "typeString": "struct CometStorage.TotalsCollateral storage ref"
                    }
                  },
                  "id": 15124,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:32:66"
                }
              ]
            },
            "functionSelector": "5df654d2",
            "id": 15126,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalsCollateral",
            "nameLocation": "992:19:66",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15113,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "1020:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15126,
                  "src": "1012:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15116,
                  "mutability": "mutable",
                  "name": "totals",
                  "nameLocation": "1051:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15126,
                  "src": "1027:30:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TotalsCollateral_$6813_memory_ptr",
                    "typeString": "struct CometStorage.TotalsCollateral"
                  },
                  "typeName": {
                    "id": 15115,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15114,
                      "name": "TotalsCollateral",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6813,
                      "src": "1027:16:66"
                    },
                    "referencedDeclaration": 6813,
                    "src": "1027:16:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TotalsCollateral_$6813_storage_ptr",
                      "typeString": "struct CometStorage.TotalsCollateral"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:47:66"
            },
            "returnParameters": {
              "id": 15118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1068:0:66"
            },
            "scope": 15302,
            "src": "983:134:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15140,
              "nodeType": "Block",
              "src": "1193:57:66",
              "statements": [
                {
                  "expression": {
                    "id": 15138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 15133,
                          "name": "userBasic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6879,
                          "src": "1203:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserBasic_$6824_storage_$",
                            "typeString": "mapping(address => struct CometStorage.UserBasic storage ref)"
                          }
                        },
                        "id": 15135,
                        "indexExpression": {
                          "id": 15134,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15128,
                          "src": "1213:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1203:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserBasic_$6824_storage",
                          "typeString": "struct CometStorage.UserBasic storage ref"
                        }
                      },
                      "id": 15136,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "principal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6815,
                      "src": "1203:28:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int104",
                        "typeString": "int104"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15137,
                      "name": "principal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15130,
                      "src": "1234:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int104",
                        "typeString": "int104"
                      }
                    },
                    "src": "1203:40:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int104",
                      "typeString": "int104"
                    }
                  },
                  "id": 15139,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:40:66"
                }
              ]
            },
            "functionSelector": "b3650a9d",
            "id": 15141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBasePrincipal",
            "nameLocation": "1132:16:66",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15128,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1157:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15141,
                  "src": "1149:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1149:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15130,
                  "mutability": "mutable",
                  "name": "principal",
                  "nameLocation": "1173:9:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15141,
                  "src": "1166:16:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int104",
                    "typeString": "int104"
                  },
                  "typeName": {
                    "id": 15129,
                    "name": "int104",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int104",
                      "typeString": "int104"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1148:35:66"
            },
            "returnParameters": {
              "id": 15132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:0:66"
            },
            "scope": 15302,
            "src": "1123:127:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15182,
              "nodeType": "Block",
              "src": "1344:266:66",
              "statements": [
                {
                  "assignments": [
                    15151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15151,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "1362:10:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 15182,
                      "src": "1354:18:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 15150,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1354:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15158,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 15152,
                          "name": "userCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6887,
                          "src": "1375:14:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UserCollateral_$6829_storage_$_$",
                            "typeString": "mapping(address => mapping(address => struct CometStorage.UserCollateral storage ref))"
                          }
                        },
                        "id": 15154,
                        "indexExpression": {
                          "id": 15153,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15143,
                          "src": "1390:7:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1375:23:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserCollateral_$6829_storage_$",
                          "typeString": "mapping(address => struct CometStorage.UserCollateral storage ref)"
                        }
                      },
                      "id": 15156,
                      "indexExpression": {
                        "id": 15155,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15145,
                        "src": "1399:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1375:30:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserCollateral_$6829_storage",
                        "typeString": "struct CometStorage.UserCollateral storage ref"
                      }
                    },
                    "id": 15157,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6826,
                    "src": "1375:38:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1354:59:66"
                },
                {
                  "expression": {
                    "id": 15166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 15159,
                            "name": "userCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6887,
                            "src": "1423:14:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_struct$_UserCollateral_$6829_storage_$_$",
                              "typeString": "mapping(address => mapping(address => struct CometStorage.UserCollateral storage ref))"
                            }
                          },
                          "id": 15162,
                          "indexExpression": {
                            "id": 15160,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15143,
                            "src": "1438:7:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1423:23:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserCollateral_$6829_storage_$",
                            "typeString": "mapping(address => struct CometStorage.UserCollateral storage ref)"
                          }
                        },
                        "id": 15163,
                        "indexExpression": {
                          "id": 15161,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15145,
                          "src": "1447:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1423:30:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserCollateral_$6829_storage",
                          "typeString": "struct CometStorage.UserCollateral storage ref"
                        }
                      },
                      "id": 15164,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6826,
                      "src": "1423:38:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15165,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15147,
                      "src": "1464:7:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "1423:48:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 15167,
                  "nodeType": "ExpressionStatement",
                  "src": "1423:48:66"
                },
                {
                  "assignments": [
                    15170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15170,
                      "mutability": "mutable",
                      "name": "assetInfo",
                      "nameLocation": "1498:9:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 15182,
                      "src": "1481:26:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssetInfo_$4336_memory_ptr",
                        "typeString": "struct CometCore.AssetInfo"
                      },
                      "typeName": {
                        "id": 15169,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 15168,
                          "name": "AssetInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4336,
                          "src": "1481:9:66"
                        },
                        "referencedDeclaration": 4336,
                        "src": "1481:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssetInfo_$4336_storage_ptr",
                          "typeString": "struct CometCore.AssetInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15174,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15172,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15145,
                        "src": "1532:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15171,
                      "name": "getAssetInfoByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1178
                      ],
                      "referencedDeclaration": 1178,
                      "src": "1510:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_AssetInfo_$4336_memory_ptr_$",
                        "typeString": "function (address) view returns (struct CometCore.AssetInfo memory)"
                      }
                    },
                    "id": 15173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:28:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetInfo_$4336_memory_ptr",
                      "typeString": "struct CometCore.AssetInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1481:57:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15176,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15143,
                        "src": "1563:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15177,
                        "name": "assetInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15170,
                        "src": "1572:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssetInfo_$4336_memory_ptr",
                          "typeString": "struct CometCore.AssetInfo memory"
                        }
                      },
                      {
                        "id": 15178,
                        "name": "oldBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15151,
                        "src": "1583:10:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 15179,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15147,
                        "src": "1595:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_AssetInfo_$4336_memory_ptr",
                          "typeString": "struct CometCore.AssetInfo memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 15175,
                      "name": "updateAssetsIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2300,
                      "src": "1548:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_AssetInfo_$4336_memory_ptr_$_t_uint128_$_t_uint128_$returns$__$",
                        "typeString": "function (address,struct CometCore.AssetInfo memory,uint128,uint128)"
                      }
                    },
                    "id": 15180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:55:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15181,
                  "nodeType": "ExpressionStatement",
                  "src": "1548:55:66"
                }
              ]
            },
            "functionSelector": "b9775b03",
            "id": 15183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCollateralBalance",
            "nameLocation": "1265:20:66",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15143,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1294:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15183,
                  "src": "1286:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15145,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "1311:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15183,
                  "src": "1303:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15147,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1326:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15183,
                  "src": "1318:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 15146,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1318:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:49:66"
            },
            "returnParameters": {
              "id": 15149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1344:0:66"
            },
            "scope": 15302,
            "src": "1256:354:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15208,
              "nodeType": "Block",
              "src": "1781:156:66",
              "statements": [
                {
                  "assignments": [
                    15196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15196,
                      "mutability": "mutable",
                      "name": "assetInfo",
                      "nameLocation": "1808:9:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 15208,
                      "src": "1791:26:66",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AssetInfo_$4336_memory_ptr",
                        "typeString": "struct CometCore.AssetInfo"
                      },
                      "typeName": {
                        "id": 15195,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 15194,
                          "name": "AssetInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4336,
                          "src": "1791:9:66"
                        },
                        "referencedDeclaration": 4336,
                        "src": "1791:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssetInfo_$4336_storage_ptr",
                          "typeString": "struct CometCore.AssetInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15200,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 15198,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15187,
                        "src": "1842:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15197,
                      "name": "getAssetInfoByAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1178
                      ],
                      "referencedDeclaration": 1178,
                      "src": "1820:21:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_AssetInfo_$4336_memory_ptr_$",
                        "typeString": "function (address) view returns (struct CometCore.AssetInfo memory)"
                      }
                    },
                    "id": 15199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1820:28:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AssetInfo_$4336_memory_ptr",
                      "typeString": "struct CometCore.AssetInfo memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1791:57:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15202,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15185,
                        "src": "1873:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15203,
                        "name": "assetInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15196,
                        "src": "1882:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AssetInfo_$4336_memory_ptr",
                          "typeString": "struct CometCore.AssetInfo memory"
                        }
                      },
                      {
                        "id": 15204,
                        "name": "initialUserBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15189,
                        "src": "1893:18:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 15205,
                        "name": "finalUserBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15191,
                        "src": "1913:16:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_AssetInfo_$4336_memory_ptr",
                          "typeString": "struct CometCore.AssetInfo memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 15201,
                      "name": "updateAssetsIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2300,
                      "src": "1858:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_AssetInfo_$4336_memory_ptr_$_t_uint128_$_t_uint128_$returns$__$",
                        "typeString": "function (address,struct CometCore.AssetInfo memory,uint128,uint128)"
                      }
                    },
                    "id": 15206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:72:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15207,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:72:66"
                }
              ]
            },
            "functionSelector": "fbad9c71",
            "id": 15209,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateAssetsInExternal",
            "nameLocation": "1625:22:66",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15185,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1665:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15209,
                  "src": "1657:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15187,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "1690:5:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15209,
                  "src": "1682:13:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1682:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15189,
                  "mutability": "mutable",
                  "name": "initialUserBalance",
                  "nameLocation": "1713:18:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15209,
                  "src": "1705:26:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 15188,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15191,
                  "mutability": "mutable",
                  "name": "finalUserBalance",
                  "nameLocation": "1749:16:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15209,
                  "src": "1741:24:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 15190,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1741:7:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1647:124:66"
            },
            "returnParameters": {
              "id": 15193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:0:66"
            },
            "scope": 15302,
            "src": "1616:321:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15293,
              "nodeType": "Block",
              "src": "2030:498:66",
              "statements": [
                {
                  "assignments": [
                    15218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15218,
                      "mutability": "mutable",
                      "name": "assetsIn",
                      "nameLocation": "2047:8:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 15293,
                      "src": "2040:15:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 15217,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "2040:6:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15223,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 15219,
                        "name": "userBasic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6879,
                        "src": "2058:9:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserBasic_$6824_storage_$",
                          "typeString": "mapping(address => struct CometStorage.UserBasic storage ref)"
                        }
                      },
                      "id": 15221,
                      "indexExpression": {
                        "id": 15220,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15211,
                        "src": "2068:7:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2058:18:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserBasic_$6824_storage",
                        "typeString": "struct CometStorage.UserBasic storage ref"
                      }
                    },
                    "id": 15222,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "assetsIn",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 6821,
                    "src": "2058:27:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2040:45:66"
                },
                {
                  "assignments": [
                    15225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15225,
                      "mutability": "mutable",
                      "name": "count",
                      "nameLocation": "2102:5:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 15293,
                      "src": "2096:11:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 15224,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2096:5:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15227,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 15226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2110:1:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2096:15:66"
                },
                {
                  "body": {
                    "id": 15247,
                    "nodeType": "Block",
                    "src": "2159:92:66",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 15239,
                              "name": "assetsIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15218,
                              "src": "2187:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 15240,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15229,
                              "src": "2197:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 15238,
                            "name": "isInAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2239,
                            "src": "2177:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint8_$returns$_t_bool_$",
                              "typeString": "function (uint16,uint8) pure returns (bool)"
                            }
                          },
                          "id": 15241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2177:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15246,
                        "nodeType": "IfStatement",
                        "src": "2173:68:66",
                        "trueBody": {
                          "id": 15245,
                          "nodeType": "Block",
                          "src": "2201:40:66",
                          "statements": [
                            {
                              "expression": {
                                "id": 15243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "2219:7:66",
                                "subExpression": {
                                  "id": 15242,
                                  "name": "count",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15225,
                                  "src": "2219:5:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 15244,
                              "nodeType": "ExpressionStatement",
                              "src": "2219:7:66"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 15234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15232,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15229,
                      "src": "2139:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 15233,
                      "name": "numAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "2143:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2139:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15248,
                  "initializationExpression": {
                    "assignments": [
                      15229
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 15229,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2132:1:66",
                        "nodeType": "VariableDeclaration",
                        "scope": 15248,
                        "src": "2126:7:66",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 15228,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2126:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 15231,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 15230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2136:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2126:11:66"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 15236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2154:3:66",
                      "subExpression": {
                        "id": 15235,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15229,
                        "src": "2154:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 15237,
                    "nodeType": "ExpressionStatement",
                    "src": "2154:3:66"
                  },
                  "nodeType": "ForStatement",
                  "src": "2121:130:66"
                },
                {
                  "expression": {
                    "id": 15255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15249,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15215,
                      "src": "2261:6:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15253,
                          "name": "count",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15225,
                          "src": "2284:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 15252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2270:13:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 15250,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2274:7:66",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 15251,
                          "nodeType": "ArrayTypeName",
                          "src": "2274:9:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 15254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2270:20:66",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2261:29:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 15256,
                  "nodeType": "ExpressionStatement",
                  "src": "2261:29:66"
                },
                {
                  "assignments": [
                    15258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15258,
                      "mutability": "mutable",
                      "name": "j",
                      "nameLocation": "2306:1:66",
                      "nodeType": "VariableDeclaration",
                      "scope": 15293,
                      "src": "2301:6:66",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 15257,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2301:4:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15260,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 15259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2310:1:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2301:10:66"
                },
                {
                  "body": {
                    "id": 15289,
                    "nodeType": "Block",
                    "src": "2359:139:66",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 15272,
                              "name": "assetsIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15218,
                              "src": "2387:8:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 15273,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15262,
                              "src": "2397:1:66",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 15271,
                            "name": "isInAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2239,
                            "src": "2377:9:66",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint16_$_t_uint8_$returns$_t_bool_$",
                              "typeString": "function (uint16,uint8) pure returns (bool)"
                            }
                          },
                          "id": 15274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2377:22:66",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 15288,
                        "nodeType": "IfStatement",
                        "src": "2373:115:66",
                        "trueBody": {
                          "id": 15287,
                          "nodeType": "Block",
                          "src": "2401:87:66",
                          "statements": [
                            {
                              "expression": {
                                "id": 15282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 15275,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15215,
                                    "src": "2419:6:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 15277,
                                  "indexExpression": {
                                    "id": 15276,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15258,
                                    "src": "2426:1:66",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2419:9:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 15279,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15262,
                                        "src": "2444:1:66",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      ],
                                      "id": 15278,
                                      "name": "getAssetInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        1136
                                      ],
                                      "referencedDeclaration": 1136,
                                      "src": "2431:12:66",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$_t_uint8_$returns$_t_struct$_AssetInfo_$4336_memory_ptr_$",
                                        "typeString": "function (uint8) view returns (struct CometCore.AssetInfo memory)"
                                      }
                                    },
                                    "id": 15280,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2431:15:66",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AssetInfo_$4336_memory_ptr",
                                      "typeString": "struct CometCore.AssetInfo memory"
                                    }
                                  },
                                  "id": 15281,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "asset",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4323,
                                  "src": "2431:21:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "2419:33:66",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 15283,
                              "nodeType": "ExpressionStatement",
                              "src": "2419:33:66"
                            },
                            {
                              "expression": {
                                "id": 15285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "2470:3:66",
                                "subExpression": {
                                  "id": 15284,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15258,
                                  "src": "2470:1:66",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 15286,
                              "nodeType": "ExpressionStatement",
                              "src": "2470:3:66"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 15267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 15265,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15262,
                      "src": "2339:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 15266,
                      "name": "numAssets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "2343:9:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2339:13:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15290,
                  "initializationExpression": {
                    "assignments": [
                      15262
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 15262,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2332:1:66",
                        "nodeType": "VariableDeclaration",
                        "scope": 15290,
                        "src": "2326:7:66",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 15261,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:5:66",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 15264,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 15263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2336:1:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2326:11:66"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 15269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2354:3:66",
                      "subExpression": {
                        "id": 15268,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15262,
                        "src": "2354:1:66",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 15270,
                    "nodeType": "ExpressionStatement",
                    "src": "2354:3:66"
                  },
                  "nodeType": "ForStatement",
                  "src": "2321:177:66"
                },
                {
                  "expression": {
                    "id": 15291,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15215,
                    "src": "2515:6:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 15216,
                  "id": 15292,
                  "nodeType": "Return",
                  "src": "2508:13:66"
                }
              ]
            },
            "functionSelector": "1aad7e2e",
            "id": 15294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetList",
            "nameLocation": "1952:12:66",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15211,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1973:7:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15294,
                  "src": "1965:15:66",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:7:66",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1964:17:66"
            },
            "returnParameters": {
              "id": 15216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15215,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "2022:6:66",
                  "nodeType": "VariableDeclaration",
                  "scope": 15294,
                  "src": "2005:23:66",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15213,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2005:7:66",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 15214,
                    "nodeType": "ArrayTypeName",
                    "src": "2005:9:66",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2004:25:66"
            },
            "scope": 15302,
            "src": "1943:585:66",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15300,
              "nodeType": "Block",
              "src": "2561:33:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 15297,
                      "name": "accrueInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1336,
                      "src": "2571:14:66",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 15298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2571:16:66",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15299,
                  "nodeType": "ExpressionStatement",
                  "src": "2571:16:66"
                }
              ]
            },
            "functionSelector": "f8ba4cff",
            "id": 15301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "accrue",
            "nameLocation": "2543:6:66",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2549:2:66"
            },
            "returnParameters": {
              "id": 15296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2561:0:66"
            },
            "scope": 15302,
            "src": "2534:60:66",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 15303,
        "src": "86:2510:66",
        "usedErrors": [
          5298,
          5300,
          5302,
          5304,
          5306,
          5308,
          5310,
          5312,
          5314,
          5316,
          5318,
          5320,
          5322,
          5324,
          5326,
          5328,
          5330,
          5332,
          5334,
          5336,
          5338,
          5340,
          5342,
          5865,
          5867,
          5869,
          5871,
          5873,
          5875
        ]
      }
    ],
    "src": "37:2559:66"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-11-30T22:41:29.717Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "absorb(address,address[])": {
        "params": {
          "absorber": "The recipient of the incentive paid to the caller of absorb",
          "accounts": "The list of underwater accounts to absorb"
        }
      },
      "approveThis(address,address,uint256)": {
        "details": "Only callable by governorNote: Setting the `asset` as Comet's address will allow the manager to withdraw from Comet's Comet balance",
        "params": {
          "amount": "The amount of an asset to approve",
          "asset": "The asset that the manager will gain approval of",
          "manager": "The account which will be allowed or disallowed"
        }
      },
      "balanceOf(address)": {
        "details": "Note: uses updated interest indices to calculate",
        "params": {
          "account": "The account whose balance to query"
        },
        "returns": {
          "_0": "The present day base balance magnitude of the account, if positive"
        }
      },
      "borrowBalanceOf(address)": {
        "details": "Note: uses updated interest indices to calculate",
        "params": {
          "account": "The account whose balance to query"
        },
        "returns": {
          "_0": "The present day base balance magnitude of the account, if negative"
        }
      },
      "buyCollateral(address,uint256,uint256,address)": {
        "params": {
          "asset": "The asset to buy",
          "baseAmount": "The amount of base tokens used to buy the collateral",
          "minAmount": "The minimum amount of collateral tokens that should be received by the buyer",
          "recipient": "The recipient address"
        }
      },
      "getAssetInfo(uint8)": {
        "params": {
          "i": "The index of the asset info to get"
        },
        "returns": {
          "_0": "The asset info object"
        }
      },
      "getAssetInfoByAddress(address)": {
        "details": "Determine index of asset that matches given address"
      },
      "getBorrowRate(uint256)": {
        "details": "Note: Does not accrue interest first",
        "params": {
          "utilization": "The utilization to check the borrow rate for"
        },
        "returns": {
          "_0": "The per second borrow rate at `utilization`"
        }
      },
      "getCollateralReserves(address)": {
        "details": "Note: Reverts if collateral reserves are somehow negative, which should not be possible",
        "params": {
          "asset": "The collateral asset"
        }
      },
      "getPrice(address)": {
        "params": {
          "priceFeed": "The address of a price feed"
        },
        "returns": {
          "_0": "The price, scaled by `PRICE_SCALE`"
        }
      },
      "getSupplyRate(uint256)": {
        "details": "Note: Does not accrue interest first",
        "params": {
          "utilization": "The utilization to check the supply rate for"
        },
        "returns": {
          "_0": "The per second supply rate at `utilization`"
        }
      },
      "getUtilization()": {
        "details": "Note: Does not accrue interest first",
        "returns": {
          "_0": "The utilization rate of the base asset"
        }
      },
      "hasPermission(address,address)": {
        "params": {
          "manager": "The manager account",
          "owner": "The owner account"
        },
        "returns": {
          "_0": "Whether or not the manager has permission"
        }
      },
      "initializeStorage()": {
        "details": "Can be used from constructor or proxy"
      },
      "isAbsorbPaused()": {
        "returns": {
          "_0": "Whether or not absorb actions are paused"
        }
      },
      "isBorrowCollateralized(address)": {
        "params": {
          "account": "The address to check"
        },
        "returns": {
          "_0": "Whether the account is minimally collateralized enough to borrow"
        }
      },
      "isBuyPaused()": {
        "returns": {
          "_0": "Whether or not buy actions are paused"
        }
      },
      "isLiquidatable(address)": {
        "params": {
          "account": "The address to check"
        },
        "returns": {
          "_0": "Whether the account is minimally collateralized enough to not be liquidated"
        }
      },
      "isSupplyPaused()": {
        "returns": {
          "_0": "Whether or not supply actions are paused"
        }
      },
      "isTransferPaused()": {
        "returns": {
          "_0": "Whether or not transfer actions are paused"
        }
      },
      "isWithdrawPaused()": {
        "returns": {
          "_0": "Whether or not withdraw actions are paused"
        }
      },
      "pause(bool,bool,bool,bool,bool)": {
        "params": {
          "absorbPaused": "Boolean for pausing absorb actions",
          "buyPaused": "Boolean for pausing buy actions",
          "supplyPaused": "Boolean for pausing supply actions",
          "transferPaused": "Boolean for pausing transfer actions",
          "withdrawPaused": "Boolean for pausing withdraw actions"
        }
      },
      "quoteCollateral(address,uint256)": {
        "params": {
          "asset": "The collateral asset to get the quote for",
          "baseAmount": "The amount of the base asset to get the quote for"
        },
        "returns": {
          "_0": "The quote in terms of the collateral asset"
        }
      },
      "supply(address,uint256)": {
        "params": {
          "amount": "The quantity to supply",
          "asset": "The asset to supply"
        }
      },
      "supplyFrom(address,address,address,uint256)": {
        "params": {
          "amount": "The quantity to supply",
          "asset": "The asset to supply",
          "dst": "The address which will hold the balance",
          "from": "The supplier address"
        }
      },
      "supplyTo(address,address,uint256)": {
        "params": {
          "amount": "The quantity to supply",
          "asset": "The asset to supply",
          "dst": "The address which will hold the balance"
        }
      },
      "totalBorrow()": {
        "details": "Note: uses updated interest indices to calculate",
        "returns": {
          "_0": "The amount of debt*"
        }
      },
      "totalSupply()": {
        "details": "Note: uses updated interest indices to calculate",
        "returns": {
          "_0": "The supply of tokens*"
        }
      },
      "transfer(address,uint256)": {
        "params": {
          "amount": "The quantity to transfer",
          "dst": "The recipient address"
        },
        "returns": {
          "_0": "true"
        }
      },
      "transferAsset(address,address,uint256)": {
        "params": {
          "amount": "The quantity to transfer",
          "asset": "The asset to transfer",
          "dst": "The recipient address"
        }
      },
      "transferAssetFrom(address,address,address,uint256)": {
        "params": {
          "amount": "The quantity to transfer",
          "asset": "The asset to transfer",
          "dst": "The recipient address",
          "src": "The sender address"
        }
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "amount": "The quantity to transfer",
          "dst": "The recipient address",
          "src": "The sender address"
        },
        "returns": {
          "_0": "true"
        }
      },
      "withdraw(address,uint256)": {
        "params": {
          "amount": "The quantity to withdraw",
          "asset": "The asset to withdraw"
        }
      },
      "withdrawFrom(address,address,address,uint256)": {
        "params": {
          "amount": "The quantity to withdraw",
          "asset": "The asset to withdraw",
          "src": "The sender address",
          "to": "The recipient address"
        }
      },
      "withdrawReserves(address,uint256)": {
        "params": {
          "amount": "The amount of reserves to be withdrawn from the protocol",
          "to": "An address of the receiver of withdrawn reserves"
        }
      },
      "withdrawTo(address,address,uint256)": {
        "params": {
          "amount": "The quantity to withdraw",
          "asset": "The asset to withdraw",
          "to": "The recipient address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidUInt64()": [
        {
          "notice": "Custom errors *"
        }
      ]
    },
    "events": {
      "AbsorbCollateral(address,address,address,uint256,uint256)": {
        "notice": "Event emitted when a user's collateral is absorbed by the protocol"
      },
      "AbsorbDebt(address,address,uint256,uint256)": {
        "notice": "Event emitted when a borrow position is absorbed by the protocol"
      },
      "BuyCollateral(address,address,uint256,uint256)": {
        "notice": "Event emitted when a collateral asset is purchased from the protocol"
      },
      "PauseAction(bool,bool,bool,bool,bool)": {
        "notice": "Event emitted when an action is paused/unpaused"
      },
      "WithdrawReserves(address,uint256)": {
        "notice": "Event emitted when reserves are withdrawn by the governor"
      }
    },
    "kind": "user",
    "methods": {
      "absorb(address,address[])": {
        "notice": "Absorb a list of underwater accounts onto the protocol balance sheet"
      },
      "accrueAccount(address)": {
        "notice": "Accrue interest and rewards for an account*"
      },
      "approveThis(address,address,uint256)": {
        "notice": "Sets Comet's ERC20 allowance of an asset for a manager"
      },
      "balanceOf(address)": {
        "notice": "Query the current positive base balance of an account or zero"
      },
      "baseBorrowMin()": {
        "notice": "The minimum base amount required to initiate a borrow"
      },
      "baseMinForRewards()": {
        "notice": "The minimum amount of base principal wei for rewards to accrue"
      },
      "baseScale()": {
        "notice": "The scale for base token (must be less than 18 decimals)"
      },
      "baseToken()": {
        "notice": "The address of the base token contract"
      },
      "baseTokenPriceFeed()": {
        "notice": "The address of the price feed for the base token"
      },
      "baseTrackingBorrowSpeed()": {
        "notice": "The speed at which borrow rewards are tracked (in trackingIndexScale)"
      },
      "baseTrackingSupplySpeed()": {
        "notice": "The speed at which supply rewards are tracked (in trackingIndexScale)"
      },
      "borrowBalanceOf(address)": {
        "notice": "Query the current negative base balance of an account or zero"
      },
      "borrowKink()": {
        "notice": "The point in the borrow rate separating the low interest rate slope and the high interest rate slope (factor)"
      },
      "borrowPerSecondInterestRateBase()": {
        "notice": "Per second borrow base interest rate (factor)"
      },
      "borrowPerSecondInterestRateSlopeHigh()": {
        "notice": "Per second borrow interest rate slope applied when utilization is above kink (factor)"
      },
      "borrowPerSecondInterestRateSlopeLow()": {
        "notice": "Per second borrow interest rate slope applied when utilization is below kink (factor)"
      },
      "buyCollateral(address,uint256,uint256,address)": {
        "notice": "Buy collateral from the protocol using base tokens, increasing protocol reserves A minimum collateral amount should be specified to indicate the maximum slippage acceptable for the buyer."
      },
      "decimals()": {
        "notice": "The number of decimals for wrapped base token"
      },
      "extensionDelegate()": {
        "notice": "The address of the extension contract delegate"
      },
      "getAssetInfo(uint8)": {
        "notice": "Get the i-th asset info, according to the order they were passed in originally"
      },
      "getCollateralReserves(address)": {
        "notice": "Gets the total balance of protocol collateral reserves for an asset"
      },
      "getPrice(address)": {
        "notice": "Get the current price from a feed"
      },
      "getReserves()": {
        "notice": "Gets the total amount of protocol reserves of the base asset"
      },
      "governor()": {
        "notice": "The admin of the protocol"
      },
      "hasPermission(address,address)": {
        "notice": "Determine if the manager has permission to act on behalf of the owner"
      },
      "initializeStorage()": {
        "notice": "Initialize storage for the contract"
      },
      "isAllowed(address,address)": {
        "notice": "Mapping of users to accounts which may be permitted to manage the user account"
      },
      "isBorrowCollateralized(address)": {
        "notice": "Check whether an account has enough collateral to borrow"
      },
      "isLiquidatable(address)": {
        "notice": "Check whether an account has enough collateral to not be liquidated"
      },
      "liquidatorPoints(address)": {
        "notice": "Mapping of magic liquidator points"
      },
      "numAssets()": {
        "notice": "The number of assets this contract actually supports"
      },
      "pause(bool,bool,bool,bool,bool)": {
        "notice": "Pauses different actions within Comet"
      },
      "pauseGuardian()": {
        "notice": "The account which may trigger pauses"
      },
      "quoteCollateral(address,uint256)": {
        "notice": "Gets the quote for a collateral asset in exchange for an amount of base asset"
      },
      "storeFrontPriceFactor()": {
        "notice": "The fraction of the liquidation penalty that goes to buyers of collateral instead of the protocol"
      },
      "supply(address,uint256)": {
        "notice": "Supply an amount of asset to the protocol"
      },
      "supplyFrom(address,address,address,uint256)": {
        "notice": "Supply an amount of asset from `from` to dst, if allowed"
      },
      "supplyKink()": {
        "notice": "The point in the supply rates separating the low interest rate slope and the high interest rate slope (factor)"
      },
      "supplyPerSecondInterestRateBase()": {
        "notice": "Per second supply base interest rate (factor)"
      },
      "supplyPerSecondInterestRateSlopeHigh()": {
        "notice": "Per second supply interest rate slope applied when utilization is above kink (factor)"
      },
      "supplyPerSecondInterestRateSlopeLow()": {
        "notice": "Per second supply interest rate slope applied when utilization is below kink (factor)"
      },
      "supplyTo(address,address,uint256)": {
        "notice": "Supply an amount of asset to dst"
      },
      "targetReserves()": {
        "notice": "The minimum base token reserves which must be held before collateral is hodled"
      },
      "totalBorrow()": {
        "notice": "Get the total amount of debt"
      },
      "totalSupply()": {
        "notice": "Get the total number of tokens in circulation"
      },
      "totalsCollateral(address)": {
        "notice": "Aggregate variables tracked for each collateral asset"
      },
      "trackingIndexScale()": {
        "notice": "The scale for reward tracking"
      },
      "transfer(address,uint256)": {
        "notice": "ERC20 transfer an amount of base token to dst"
      },
      "transferAsset(address,address,uint256)": {
        "notice": "Transfer an amount of asset to dst"
      },
      "transferAssetFrom(address,address,address,uint256)": {
        "notice": "Transfer an amount of asset from src to dst, if allowed"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "ERC20 transfer an amount of base token from src to dst, if allowed"
      },
      "userBasic(address)": {
        "notice": "Mapping of users to base principal and other basic data"
      },
      "userCollateral(address,address)": {
        "notice": "Mapping of users to collateral data per collateral asset"
      },
      "userNonce(address)": {
        "notice": "The next expected nonce for an address, for validating authorizations via signature"
      },
      "withdraw(address,uint256)": {
        "notice": "Withdraw an amount of asset from the protocol"
      },
      "withdrawFrom(address,address,address,uint256)": {
        "notice": "Withdraw an amount of asset from src to `to`, if allowed"
      },
      "withdrawReserves(address,uint256)": {
        "notice": "Withdraws base token reserves if called by the governor"
      },
      "withdrawTo(address,address,uint256)": {
        "notice": "Withdraw an amount of asset to `to`"
      }
    },
    "version": 1
  }
}