{
  "contractName": "OptimismBridgeReceiver",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "crossDomainMessenger_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadData",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedToSendNativeToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidCrossDomainMessenger",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProposalId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidTimelockAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProposalNotExecutable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransactionAlreadyQueued",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferOutFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "govTimelock",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "localTimelock",
          "type": "address"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldCrossDomainMessenger",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newCrossDomainMessenger",
          "type": "address"
        }
      ],
      "name": "NewCrossDomainMessenger",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "rootMessageSender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "crossDomainMessenger",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govTimelock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_govTimelock",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_localTimelock",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "localTimelock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum BaseBridgeReceiver.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweepNativeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCrossDomainMessenger",
          "type": "address"
        }
      ],
      "name": "changeCrossDomainMessenger",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"crossDomainMessenger_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedToSendNativeToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCrossDomainMessenger\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProposalId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimelockAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposalNotExecutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransactionAlreadyQueued\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferOutFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"govTimelock\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localTimelock\",\"type\":\"address\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldCrossDomainMessenger\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newCrossDomainMessenger\",\"type\":\"address\"}],\"name\":\"NewCrossDomainMessenger\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rootMessageSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCrossDomainMessenger\",\"type\":\"address\"}],\"name\":\"changeCrossDomainMessenger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"crossDomainMessenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govTimelock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_govTimelock\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_localTimelock\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localTimelock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum BaseBridgeReceiver.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepNativeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeProposal(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to execute\"}},\"initialize(address,address)\":{\"params\":{\"_govTimelock\":\"Address of the governing contract that this contract will receive messages from (likely on another chain)\",\"_localTimelock\":\"Address of the timelock contract that this contract will send messages to\"}},\"state(uint256)\":{\"params\":{\"proposalId\":\"Id of the proposal\"},\"returns\":{\"_0\":\"The state of the given proposal (queued, expired or executed)\"}},\"sweepNativeToken(address)\":{\"params\":{\"recipient\":\"The address that will receive the swept funds\"}},\"sweepToken(address,address)\":{\"details\":\"Note: Make sure to check that the asset being swept out is not malicious\",\"params\":{\"asset\":\"The address of the ERC-20 token to sweep\",\"recipient\":\"The address that will receive the swept funds\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyInitialized()\":[{\"notice\":\"Custom errors *\"}]},\"events\":{\"Initialized(address,address)\":{\"notice\":\"Events *\"}},\"kind\":\"user\",\"methods\":{\"executeProposal(uint256)\":{\"notice\":\"Execute a queued proposal\"},\"govTimelock()\":{\"notice\":\"Address of the governing contract that this bridge receiver expects to  receive messages from; likely an address from another chain (e.g. mainnet)\"},\"initialize(address,address)\":{\"notice\":\"Initialize the contract\"},\"initialized()\":{\"notice\":\"Whether contract has been initialized\"},\"localTimelock()\":{\"notice\":\"Address of the timelock on this chain that the bridge receiver will send messages to\"},\"proposalCount()\":{\"notice\":\"Total count of proposals generated\"},\"proposals(uint256)\":{\"notice\":\"Mapping of proposal ids to their full proposal data\"},\"state(uint256)\":{\"notice\":\"Get the state of a proposal\"},\"sweepNativeToken(address)\":{\"notice\":\"A public function to sweep accidental native token transfers to this contract\"},\"sweepToken(address,address)\":{\"notice\":\"A public function to sweep accidental ERC-20 transfers to this contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/comet/contracts/bridges/optimism/OptimismBridgeReceiver.sol\":\"OptimismBridgeReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/comet/contracts/IERC20NonStandard.sol\":{\"keccak256\":\"0x352ff3474020e1a8c1b2f7a06e47e5435230a7e93580ea811558c02df1d87f95\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://046434bba8e1d82be113a1c14104747a1aa0e1031fa66b7062230c8eb9045fb0\",\"dweb:/ipfs/Qmbktm3m2gnXSz7qhsF6Mywg8JGX6fFpfE5uRm3QftrJoT\"]},\"project:/contracts/comet/contracts/ITimelock.sol\":{\"keccak256\":\"0x42b2e0fc37eed207eebf011cb8aa8006f1f75451540ea681d24e9b9a20594165\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ff9ddcf38543c7a77c142fa49b6ff1ce32fb88d3bea17fea29c64de211a73dce\",\"dweb:/ipfs/QmSef1fHRbgomFzpLG9mpGrDkaYEVsDjJWUXTbsqtPf5h6\"]},\"project:/contracts/comet/contracts/bridges/BaseBridgeReceiver.sol\":{\"keccak256\":\"0x088d8bbe0ee6830ff8fb20ce2989b1299b134775b2b69e72856df9aa0eee3018\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://731134f9ab2a5e7da668eb894b0ffe3061cd5a4350cc7380762686b638883974\",\"dweb:/ipfs/QmWDgSHMrcfwbNxi8FHHBKm1cGyt3ZcP1wYyu33k2wh2tu\"]},\"project:/contracts/comet/contracts/bridges/SweepableBridgeReceiver.sol\":{\"keccak256\":\"0x48b42403e9fcba17dd6cff165444e324d8bed98a8000506cac888d6abe01c9b6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d1a28eab66781fa8a2726fd05ff5a2cbb09f38cf0f0acdaeceed0afc95c88bf4\",\"dweb:/ipfs/QmYTifZNDTQwB1zp6amAVy5GZr2df5P8LzaWigpsDnSyPP\"]},\"project:/contracts/comet/contracts/bridges/optimism/IOvmL2CrossDomainMessengerInterface.sol\":{\"keccak256\":\"0x2aa22567c64b652364dc88b017644fe6c874ae67f06fbf499faafe037eb66a25\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://19932fb2728b88c26a0018f15a9afae9bea80b24c9cb7e434ae28a1a5fb80dd0\",\"dweb:/ipfs/QmasibRW4haHVx4VLDZUvM88YLFArwAHQrSUZgBorcJP8o\"]},\"project:/contracts/comet/contracts/bridges/optimism/OptimismBridgeReceiver.sol\":{\"keccak256\":\"0x5ea7e04e593ee369df281b454bc0bcd28b21ebfad722243010d1094b0987fbea\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e420006e3a537d8585ce615bec2fa551d1c5979163e7587adf9e66e2822be16b\",\"dweb:/ipfs/QmfYwjYHwdCnCey9WwfZWDhCsGGo7s7s8P64TUy7FxrGai\"]}},\"version\":1}",
  "bytecode": "0x60803461007457601f61195138819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600480546001600160a01b0319169190911790556040516118c190816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610018575b610016610d89565b005b60003560e01c8063013cf08b146101085780630d61b519146100ff578063158ef93e146100f657806322086dbe146100ed578063258836fe146100e45780633e4f49e6146100db578063485cc955146100d2578063793332d6146100c9578063824343dd146100c0578063b660c156146100b7578063da35c664146100ae5763f43b36130361000e576100a9610726565b61000e565b506100a9610707565b506100a9610684565b506100a961065a565b506100a96105db565b506100a961049d565b506100a961046d565b506100a9610394565b506100a9610331565b506100a961030a565b506100a9610156565b50346101515760203660031901126101515760043560005260036020526060604060002080549060ff600660058301549201541690604051928352602083015215156040820152f35b600080fd5b5034610151576020366003190112610151576004803561017581610bfa565b61017e8161044d565b6102ef57610196816000526003602052604060002090565b60068101805460ff19166001179055916003830192600191808201918381019160028201916005016000865b6101f4575b600088604051907f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f8383a2f35b84548110156102ea576102b4818760008c8989838a8f9961027f81610278816102728f8261026261024d61029e9961024761023b61023b610268975460018060a01b031690565b6001600160a01b031690565b9e610832565b905460039190911b1c6001600160a01b031690565b9a610832565b90549060031b1c90565b99610832565b5099610832565b508c5490604051998a9889978896630825f38f60e01b885287016109f6565b03925af180156102dd575b6102ba575b506107ff565b906101c2565b6102d6903d806000833e6102ce81836107a4565b8101906108c7565b50386102ae565b6102e56107db565b6102a9565b6101c7565b50604051633c7e994560e11b8152fd5b600091031261015157565b503461015157600036600319011261015157602060ff60015460a01c166040519015158152f35b5034610151576000366003190112610151576000546040516001600160a01b039091168152602090f35b6001600160a01b0381160361015157565b6040906003190112610151576004356103848161035b565b906024356103918161035b565b90565b5034610151576103a33661036c565b6001546103b8906001600160a01b031661023b565b330361043c576040516370a0823160e01b81523060048201526100169290916020836024816001600160a01b0385165afa92831561042f575b6000936103ff575b50610cdd565b61042191935060203d8111610428575b61041981836107a4565b810190610bdf565b91386103f9565b503d61040f565b6104376107db565b6103f1565b6040516282b42960e81b8152600490fd5b6003111561045757565b634e487b7160e01b600052602160045260246000fd5b50346101515760203660031901126101515761048a600435610bfa565b6040516003821015610457576020918152f35b5034610151576104ac3661036c565b906104bd60015460ff9060a01c1690565b6105ca576040516303e1469160e61b81526001600160a01b0383811691602081600481865afa9081156105bd575b60009161058f575b50813091160361057d57600080546001600160a01b0319166001600160a01b0385161781559361053f9060018060a01b03166bffffffffffffffffffffffff60a01b6001541617600155565b6001805460ff60a01b1916600160a01b17905560405192167f3cd5ec01b1ae7cfec6ca1863e2cd6aa25d6d1702825803ff2b7cc95010fffdc28484a3f35b6040516336e038cd60e21b8152600490fd5b6105b0915060203d81116105b6575b6105a881836107a4565b8101906107c6565b386104f3565b503d61059e565b6105c56107db565b6104eb565b60405162dc149f60e41b8152600490fd5b5034610151576020366003190112610151576004356105f98161035b565b6001546001600160a01b0391908216330361043c5781600092600454921690816bffffffffffffffffffffffff60a01b84161760045560405192167fb08c5f7c2da6622db1a15d4c66943d7d24affac11e640a991fb4c3eaa9e431138484a3f35b5034610151576000366003190112610151576001546040516001600160a01b039091168152602090f35b5034610151576020366003190112610151576004356106a28161035b565b6001546001600160a01b0316330361043c57600080809247604051915af13d15610702573d6106d081610867565b906106de60405192836107a4565b8152600060203d92013e5b156106f057005b60405163d1a4579f60e01b8152600490fd5b6106e9565b5034610151576000366003190112610151576020600254604051908152f35b5034610151576000366003190112610151576004546040516001600160a01b039091168152602090f35b50634e487b7160e01b600052604160045260246000fd5b60e0810190811067ffffffffffffffff82111761078357604052565b61078b610750565b604052565b67ffffffffffffffff811161078357604052565b90601f8019910116810190811067ffffffffffffffff82111761078357604052565b9081602091031261015157516103918161035b565b506040513d6000823e3d90fd5b50634e487b7160e01b600052601160045260246000fd5b600190600019811461080f570190565b6108176107e8565b0190565b50634e487b7160e01b600052603260045260246000fd5b805482101561084b575b60005260206000200190600090565b61085361081b565b61083c565b6040519061086582610767565b565b60209067ffffffffffffffff8111610885575b601f01601f19160190565b61088d610750565b61087a565b918091926000905b8282106108b25750116108ab575050565b6000910152565b9150806020918301518186015201829161089a565b6020818303126101515780519067ffffffffffffffff8211610151570181601f820112156101515780516108fa81610867565b9261090860405194856107a4565b81845260208284010111610151576103919160208085019101610892565b90600182811c92168015610956575b602083101461094057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610935565b906000929180549161097183610926565b9182825260019384811690816000146109d35750600114610993575b50505050565b90919394506000526020928360002092846000945b8386106109bf57505050500101903880808061098d565b8054858701830152940193859082016109a8565b9294505050602093945060ff191683830152151560051b0101903880808061098d565b95949390608093610a3393610a259260018060a01b03168952602089015260a0604089015260a0880190610960565b908682036060880152610960565b930152565b9060405191828154918282526020928383019160005283600020936000905b828210610a6d57505050610865925003836107a4565b855484526001958601958895509381019390910190610a57565b60209067ffffffffffffffff8111610aa1575b60051b0190565b610aa9610750565b610a9a565b908154610aba81610a87565b92604093610aca855191826107a4565b828152809460208092019260005281600020906000935b858510610af057505050505050565b60018481928451610b0c81610b05818a610960565b03826107a4565b815201930194019391610ae1565b90604051610b2781610767565b8092805482526001808201604051908192815490818452602080940192600052836000209160005b818110610bc35750505050610865949383610bbc93610b7460c09660069503836107a4565b860152610b8360028201610a38565b6040860152610b9460038201610aae565b6060860152610ba560048201610aae565b6080860152600581015460a0860152015460ff1690565b1515910152565b83546001600160a01b0316855293850193928201928201610b4f565b90816020910312610151575190565b8119811161080f570190565b60025481118015610cd5575b610cc357610c21610c26916000526003602052604060002090565b610b1a565b60c081015115610c365750600290565b60a00151600154610c8591600491602090610c5b9061023b906001600160a01b031681565b6040516360d143f160e11b815293849182905afa918215610cb6575b600092610c96575b50610bee565b421115610c9157600190565b600090565b610caf91925060203d81116104285761041981836107a4565b9038610c7f565b610cbe6107db565b610c77565b604051630992f7ad60e01b8152600490fd5b508015610c06565b6001600160a01b03939290841690813b156101515760405194859363a9059cbb60e01b855216600484015260248301528160446000958680945af18015610d7c575b610d63575b503d8015610d5857602014610d37575080fd5b90602081803e515b15610d4657565b60405163cefaffeb60e01b8152600490fd5b509050600019610d3f565b80610d70610d7692610790565b806102ff565b38610d24565b610d846107db565b610d1f565b600480546001600160a01b03908116330361113e5760408051636e296e4560e01b8152926000926020908186848188335af1958615611131575b8596611112575b508454610ddf906001600160a01b031661023b565b951694850361110457610df136611276565b9390929682518851036110f45783518851036110f45784518851036110f457600195610e578184610e2e61023b61023b8c5460018060a01b031690565b8b51630d48571f60e31b815292839182905afa9081156110e7575b84916110ca575b5042610bee565b9682815b610f00575b5050509187610eef7f216ba108683905cf17ff4c7b04b9711edbdf8ebf5cc06eeecee4b5d5e7c3c6d29998979593610eea610efb9896610ea9610ea46002546107ff565b600255565b60025490610eb5610858565b958694838652850152868c8501528760608501528860808501528960a085015260c08401526000526003602052604060002090565b611695565b51955196879687611805565b0390a2565b8a518110156110c557838582808d8f828f8f8f8f84958d54610f279060018060a01b031690565b6001600160a01b031699610f3a9161134e565b516001600160a01b031694610f4e9161134e565b5196610f599161134e565b5193610f649161134e565b51935193849388850196610f789488611395565b03601f1981018252610f8a90826107a4565b5190208d5163f2b0653760e01b815287810191825293849291839190829060200103925af19081156110b8575b859161108b575b5061107b576110528189878a8f8f8f8a61103d8f93928e936110228b8f9e8f9061101b816110156110088261100261023b61023b61101b995460018060a01b031690565b9f61134e565b516001600160a01b031690565b9b61134e565b519b61134e565b519051633a66f90160e01b8152998a98899788968701611395565b03925af1801561106e575b61105857506107ff565b90610e5b565b6102d690883d8a116104285761041981836107a4565b6110766107db565b611048565b89516333108cbb60e01b81528390fd5b6110ab9150863d88116110b1575b6110a381836107a4565b8101906113d2565b38610fbe565b503d611099565b6110c06107db565b610fb7565b610e60565b6110e19150853d87116104285761041981836107a4565b38610e50565b6110ef6107db565b610e49565b865163a554dcdf60e01b81528690fd5b5090516282b42960e81b8152fd5b61112a919650823d84116105b6576105a881836107a4565b9438610dca565b6111396107db565b610dc3565b5060405163128d7cbd60e21b8152fd5b81601f820112156101515780359161116583610a87565b9261117360405194856107a4565b808452602092838086019260051b820101928311610151578301905b82821061119d575050505090565b8135815290830190830161118f565b9291926111b882610867565b916111c660405193846107a4565b829481845281830111610151578281602093846000960137010152565b81601f82011215610151578035906111fa82610a87565b9260409261120a845195866107a4565b808552602093848087019260051b8501019383851161015157858101925b858410611239575050505050505090565b833567ffffffffffffffff811161015157820185603f8201121561015157879161126b878387868096013591016111ac565b815201930192611228565b6080811261015157600080359267ffffffffffffffff9283851161134a5780601f8601121561134a578435946112ab86610a87565b906112b960405192836107a4565b868252602096878084019160051b83010191848311611346579088809201905b83821061132d5750505050943584811161132957816112f79161114e565b93604035818111611325578261130c916111e3565b93606035918211611322575090610391916111e3565b80fd5b8480fd5b8380fd5b828091833561133b8161035b565b8152019101906112d9565b8680fd5b8280fd5b6020918151811015611363575b60051b010190565b61136b61081b565b61135b565b9060209161138981518092818552858086019101610892565b601f01601f1916010190565b95949390608093610a33936113c49260018060a01b03168952602089015260a0604089015260a0880190611370565b908682036060880152611370565b90816020910312610151575180151581036101515790565b8181106113f5575050565b600081556001016113ea565b9181811061140e57505050565b61086592600052602060002091820191016113ea565b815191600160401b8311611476575b61144283835481855584611401565b602080910191600052806000206000925b848410611461575050505050565b60018382829351855501920193019290611453565b61147e610750565b611433565b9190601f811161149257505050565b610865926000526020600020906020601f840160051c830193106114be575b601f0160051c01906113ea565b90915081906114b1565b919091825167ffffffffffffffff8111611598575b6114f1816114eb8454610926565b84611483565b602080601f831160011461152d575081929394600092611522575b50508160011b916000199060031b1c1916179055565b01519050388061150c565b90601f1983169561154385600052602060002090565b926000905b88821061158057505083600195969710611567575b505050811b019055565b015160001960f88460031b161c1916905538808061155d565b80600185968294968601518155019501930190611548565b6115a0610750565b6114dd565b815191600160401b8311611688575b8154838355808410611604575b506115d6602080920192600052602060002090565b6000925b8484106115e8575050505050565b600183826115f8839451866114c8565b019201930192906115da565b6000838152846020822092830192015b8281106116225750506115c1565b8061162f60019254610926565b8061163c575b5001611614565b601f9081811184146116545750508281555b38611635565b836116769261166885600052602060002090565b920160051c820191016113ea565b6000818152602081208183555561164e565b611690610750565b6115b4565b90805182556001808301602090818401519180835193600160401b851161176f575b6116c685855481875586611401565b0191600052806000206000925b8484106117435750505050505090600661173060c0846116fd604061086597015160028701611424565b61170e6060820151600387016115a5565b61171f6080820151600487016115a5565b60a081015160058601550151151590565b91019060ff801983541691151516179055565b805182546001600160a01b0319166001600160a01b0391909116178255928501929085019082016116d3565b611777610750565b6116b7565b90815180825260208080930193019160005b82811061179c575050505090565b83518552938101939281019260010161178e565b90815180825260208092019182818360051b85019501936000915b8483106117db5750505050505090565b90919293949584806117f583856001950387528a51611370565b98019301930191949392906117cb565b96959493929060c0880190885260209060c0828a015283518091528160e08a0194019160005b82811061186e5750505050610a339261185283611860938a60a098960360408c015261177c565b9088820360608a01526117b0565b9086820360808801526117b0565b83516001600160a01b03168652948101949281019260010161182b56fea26469706673582212205a25c7543a40eb4af8274e0afd6b07bfc3513114446fab7a51df6ffa5f0c8b1a64736f6c634300080f0033",
  "deployedBytecode": "0x60806040526004361015610018575b610016610d89565b005b60003560e01c8063013cf08b146101085780630d61b519146100ff578063158ef93e146100f657806322086dbe146100ed578063258836fe146100e45780633e4f49e6146100db578063485cc955146100d2578063793332d6146100c9578063824343dd146100c0578063b660c156146100b7578063da35c664146100ae5763f43b36130361000e576100a9610726565b61000e565b506100a9610707565b506100a9610684565b506100a961065a565b506100a96105db565b506100a961049d565b506100a961046d565b506100a9610394565b506100a9610331565b506100a961030a565b506100a9610156565b50346101515760203660031901126101515760043560005260036020526060604060002080549060ff600660058301549201541690604051928352602083015215156040820152f35b600080fd5b5034610151576020366003190112610151576004803561017581610bfa565b61017e8161044d565b6102ef57610196816000526003602052604060002090565b60068101805460ff19166001179055916003830192600191808201918381019160028201916005016000865b6101f4575b600088604051907f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f8383a2f35b84548110156102ea576102b4818760008c8989838a8f9961027f81610278816102728f8261026261024d61029e9961024761023b61023b610268975460018060a01b031690565b6001600160a01b031690565b9e610832565b905460039190911b1c6001600160a01b031690565b9a610832565b90549060031b1c90565b99610832565b5099610832565b508c5490604051998a9889978896630825f38f60e01b885287016109f6565b03925af180156102dd575b6102ba575b506107ff565b906101c2565b6102d6903d806000833e6102ce81836107a4565b8101906108c7565b50386102ae565b6102e56107db565b6102a9565b6101c7565b50604051633c7e994560e11b8152fd5b600091031261015157565b503461015157600036600319011261015157602060ff60015460a01c166040519015158152f35b5034610151576000366003190112610151576000546040516001600160a01b039091168152602090f35b6001600160a01b0381160361015157565b6040906003190112610151576004356103848161035b565b906024356103918161035b565b90565b5034610151576103a33661036c565b6001546103b8906001600160a01b031661023b565b330361043c576040516370a0823160e01b81523060048201526100169290916020836024816001600160a01b0385165afa92831561042f575b6000936103ff575b50610cdd565b61042191935060203d8111610428575b61041981836107a4565b810190610bdf565b91386103f9565b503d61040f565b6104376107db565b6103f1565b6040516282b42960e81b8152600490fd5b6003111561045757565b634e487b7160e01b600052602160045260246000fd5b50346101515760203660031901126101515761048a600435610bfa565b6040516003821015610457576020918152f35b5034610151576104ac3661036c565b906104bd60015460ff9060a01c1690565b6105ca576040516303e1469160e61b81526001600160a01b0383811691602081600481865afa9081156105bd575b60009161058f575b50813091160361057d57600080546001600160a01b0319166001600160a01b0385161781559361053f9060018060a01b03166bffffffffffffffffffffffff60a01b6001541617600155565b6001805460ff60a01b1916600160a01b17905560405192167f3cd5ec01b1ae7cfec6ca1863e2cd6aa25d6d1702825803ff2b7cc95010fffdc28484a3f35b6040516336e038cd60e21b8152600490fd5b6105b0915060203d81116105b6575b6105a881836107a4565b8101906107c6565b386104f3565b503d61059e565b6105c56107db565b6104eb565b60405162dc149f60e41b8152600490fd5b5034610151576020366003190112610151576004356105f98161035b565b6001546001600160a01b0391908216330361043c5781600092600454921690816bffffffffffffffffffffffff60a01b84161760045560405192167fb08c5f7c2da6622db1a15d4c66943d7d24affac11e640a991fb4c3eaa9e431138484a3f35b5034610151576000366003190112610151576001546040516001600160a01b039091168152602090f35b5034610151576020366003190112610151576004356106a28161035b565b6001546001600160a01b0316330361043c57600080809247604051915af13d15610702573d6106d081610867565b906106de60405192836107a4565b8152600060203d92013e5b156106f057005b60405163d1a4579f60e01b8152600490fd5b6106e9565b5034610151576000366003190112610151576020600254604051908152f35b5034610151576000366003190112610151576004546040516001600160a01b039091168152602090f35b50634e487b7160e01b600052604160045260246000fd5b60e0810190811067ffffffffffffffff82111761078357604052565b61078b610750565b604052565b67ffffffffffffffff811161078357604052565b90601f8019910116810190811067ffffffffffffffff82111761078357604052565b9081602091031261015157516103918161035b565b506040513d6000823e3d90fd5b50634e487b7160e01b600052601160045260246000fd5b600190600019811461080f570190565b6108176107e8565b0190565b50634e487b7160e01b600052603260045260246000fd5b805482101561084b575b60005260206000200190600090565b61085361081b565b61083c565b6040519061086582610767565b565b60209067ffffffffffffffff8111610885575b601f01601f19160190565b61088d610750565b61087a565b918091926000905b8282106108b25750116108ab575050565b6000910152565b9150806020918301518186015201829161089a565b6020818303126101515780519067ffffffffffffffff8211610151570181601f820112156101515780516108fa81610867565b9261090860405194856107a4565b81845260208284010111610151576103919160208085019101610892565b90600182811c92168015610956575b602083101461094057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610935565b906000929180549161097183610926565b9182825260019384811690816000146109d35750600114610993575b50505050565b90919394506000526020928360002092846000945b8386106109bf57505050500101903880808061098d565b8054858701830152940193859082016109a8565b9294505050602093945060ff191683830152151560051b0101903880808061098d565b95949390608093610a3393610a259260018060a01b03168952602089015260a0604089015260a0880190610960565b908682036060880152610960565b930152565b9060405191828154918282526020928383019160005283600020936000905b828210610a6d57505050610865925003836107a4565b855484526001958601958895509381019390910190610a57565b60209067ffffffffffffffff8111610aa1575b60051b0190565b610aa9610750565b610a9a565b908154610aba81610a87565b92604093610aca855191826107a4565b828152809460208092019260005281600020906000935b858510610af057505050505050565b60018481928451610b0c81610b05818a610960565b03826107a4565b815201930194019391610ae1565b90604051610b2781610767565b8092805482526001808201604051908192815490818452602080940192600052836000209160005b818110610bc35750505050610865949383610bbc93610b7460c09660069503836107a4565b860152610b8360028201610a38565b6040860152610b9460038201610aae565b6060860152610ba560048201610aae565b6080860152600581015460a0860152015460ff1690565b1515910152565b83546001600160a01b0316855293850193928201928201610b4f565b90816020910312610151575190565b8119811161080f570190565b60025481118015610cd5575b610cc357610c21610c26916000526003602052604060002090565b610b1a565b60c081015115610c365750600290565b60a00151600154610c8591600491602090610c5b9061023b906001600160a01b031681565b6040516360d143f160e11b815293849182905afa918215610cb6575b600092610c96575b50610bee565b421115610c9157600190565b600090565b610caf91925060203d81116104285761041981836107a4565b9038610c7f565b610cbe6107db565b610c77565b604051630992f7ad60e01b8152600490fd5b508015610c06565b6001600160a01b03939290841690813b156101515760405194859363a9059cbb60e01b855216600484015260248301528160446000958680945af18015610d7c575b610d63575b503d8015610d5857602014610d37575080fd5b90602081803e515b15610d4657565b60405163cefaffeb60e01b8152600490fd5b509050600019610d3f565b80610d70610d7692610790565b806102ff565b38610d24565b610d846107db565b610d1f565b600480546001600160a01b03908116330361113e5760408051636e296e4560e01b8152926000926020908186848188335af1958615611131575b8596611112575b508454610ddf906001600160a01b031661023b565b951694850361110457610df136611276565b9390929682518851036110f45783518851036110f45784518851036110f457600195610e578184610e2e61023b61023b8c5460018060a01b031690565b8b51630d48571f60e31b815292839182905afa9081156110e7575b84916110ca575b5042610bee565b9682815b610f00575b5050509187610eef7f216ba108683905cf17ff4c7b04b9711edbdf8ebf5cc06eeecee4b5d5e7c3c6d29998979593610eea610efb9896610ea9610ea46002546107ff565b600255565b60025490610eb5610858565b958694838652850152868c8501528760608501528860808501528960a085015260c08401526000526003602052604060002090565b611695565b51955196879687611805565b0390a2565b8a518110156110c557838582808d8f828f8f8f8f84958d54610f279060018060a01b031690565b6001600160a01b031699610f3a9161134e565b516001600160a01b031694610f4e9161134e565b5196610f599161134e565b5193610f649161134e565b51935193849388850196610f789488611395565b03601f1981018252610f8a90826107a4565b5190208d5163f2b0653760e01b815287810191825293849291839190829060200103925af19081156110b8575b859161108b575b5061107b576110528189878a8f8f8f8a61103d8f93928e936110228b8f9e8f9061101b816110156110088261100261023b61023b61101b995460018060a01b031690565b9f61134e565b516001600160a01b031690565b9b61134e565b519b61134e565b519051633a66f90160e01b8152998a98899788968701611395565b03925af1801561106e575b61105857506107ff565b90610e5b565b6102d690883d8a116104285761041981836107a4565b6110766107db565b611048565b89516333108cbb60e01b81528390fd5b6110ab9150863d88116110b1575b6110a381836107a4565b8101906113d2565b38610fbe565b503d611099565b6110c06107db565b610fb7565b610e60565b6110e19150853d87116104285761041981836107a4565b38610e50565b6110ef6107db565b610e49565b865163a554dcdf60e01b81528690fd5b5090516282b42960e81b8152fd5b61112a919650823d84116105b6576105a881836107a4565b9438610dca565b6111396107db565b610dc3565b5060405163128d7cbd60e21b8152fd5b81601f820112156101515780359161116583610a87565b9261117360405194856107a4565b808452602092838086019260051b820101928311610151578301905b82821061119d575050505090565b8135815290830190830161118f565b9291926111b882610867565b916111c660405193846107a4565b829481845281830111610151578281602093846000960137010152565b81601f82011215610151578035906111fa82610a87565b9260409261120a845195866107a4565b808552602093848087019260051b8501019383851161015157858101925b858410611239575050505050505090565b833567ffffffffffffffff811161015157820185603f8201121561015157879161126b878387868096013591016111ac565b815201930192611228565b6080811261015157600080359267ffffffffffffffff9283851161134a5780601f8601121561134a578435946112ab86610a87565b906112b960405192836107a4565b868252602096878084019160051b83010191848311611346579088809201905b83821061132d5750505050943584811161132957816112f79161114e565b93604035818111611325578261130c916111e3565b93606035918211611322575090610391916111e3565b80fd5b8480fd5b8380fd5b828091833561133b8161035b565b8152019101906112d9565b8680fd5b8280fd5b6020918151811015611363575b60051b010190565b61136b61081b565b61135b565b9060209161138981518092818552858086019101610892565b601f01601f1916010190565b95949390608093610a33936113c49260018060a01b03168952602089015260a0604089015260a0880190611370565b908682036060880152611370565b90816020910312610151575180151581036101515790565b8181106113f5575050565b600081556001016113ea565b9181811061140e57505050565b61086592600052602060002091820191016113ea565b815191600160401b8311611476575b61144283835481855584611401565b602080910191600052806000206000925b848410611461575050505050565b60018382829351855501920193019290611453565b61147e610750565b611433565b9190601f811161149257505050565b610865926000526020600020906020601f840160051c830193106114be575b601f0160051c01906113ea565b90915081906114b1565b919091825167ffffffffffffffff8111611598575b6114f1816114eb8454610926565b84611483565b602080601f831160011461152d575081929394600092611522575b50508160011b916000199060031b1c1916179055565b01519050388061150c565b90601f1983169561154385600052602060002090565b926000905b88821061158057505083600195969710611567575b505050811b019055565b015160001960f88460031b161c1916905538808061155d565b80600185968294968601518155019501930190611548565b6115a0610750565b6114dd565b815191600160401b8311611688575b8154838355808410611604575b506115d6602080920192600052602060002090565b6000925b8484106115e8575050505050565b600183826115f8839451866114c8565b019201930192906115da565b6000838152846020822092830192015b8281106116225750506115c1565b8061162f60019254610926565b8061163c575b5001611614565b601f9081811184146116545750508281555b38611635565b836116769261166885600052602060002090565b920160051c820191016113ea565b6000818152602081208183555561164e565b611690610750565b6115b4565b90805182556001808301602090818401519180835193600160401b851161176f575b6116c685855481875586611401565b0191600052806000206000925b8484106117435750505050505090600661173060c0846116fd604061086597015160028701611424565b61170e6060820151600387016115a5565b61171f6080820151600487016115a5565b60a081015160058601550151151590565b91019060ff801983541691151516179055565b805182546001600160a01b0319166001600160a01b0391909116178255928501929085019082016116d3565b611777610750565b6116b7565b90815180825260208080930193019160005b82811061179c575050505090565b83518552938101939281019260010161178e565b90815180825260208092019182818360051b85019501936000915b8483106117db5750505050505090565b90919293949584806117f583856001950387528a51611370565b98019301930191949392906117cb565b96959493929060c0880190885260209060c0828a015283518091528160e08a0194019160005b82811061186e5750505050610a339261185283611860938a60a098960360408c015261177c565b9088820360608a01526117b0565b9086820360808801526117b0565b83516001600160a01b03168652948101949281019260010161182b56fea26469706673582212205a25c7543a40eb4af8274e0afd6b07bfc3513114446fab7a51df6ffa5f0c8b1a64736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "156:1014:31:-:0;;;;;;;;;;;;;-1:-1:-1;;156:1014:31;;;;-1:-1:-1;;;;;156:1014:31;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;156:1014:31;;;;;;;;476:44;156:1014;;-1:-1:-1;;;;;;156:1014:31;;;;;;;;;;;;;;;;;-1:-1:-1;156:1014:31;;;;;;-1:-1:-1;156:1014:31;;;;;-1:-1:-1;156:1014:31",
  "deployedSourceMap": "156:1014:31:-:0;;;;;;;;;-1:-1:-1;156:1014:31;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;-1:-1:-1;;156:1014:31;;;;;;-1:-1:-1;156:1014:31;;;;;;-1:-1:-1;156:1014:31;;;1477:43:24;156:1014:31;1477:43:24;;;;156:1014:31;1477:43:24;;156:1014:31;;;;;;;;;;;;;;;;;;;;-1:-1:-1;156:1014:31;;;;;;;;;-1:-1:-1;;156:1014:31;;;;;;;4340:17:24;;;:::i;:::-;156:1014:31;;;:::i;:::-;4336:77:24;;4451:21;;156:1014:31;;4451:9:24;156:1014:31;;;;;;;4451:21:24;4482:17;;;156:1014:31;;-1:-1:-1;;156:1014:31;4502:4:24;156:1014:31;;;4482:17:24;156:1014:31;4666:19:24;;;4502:4;;4690:18;;;;4537:16;;;;4646:15;;;;4713:12;;-1:-1:-1;4502:4:24;;;;4516:221;-1:-1:-1;156:1014:31;;;4751:28:24;;;;;156:1014:31;4562:3:24;156:1014:31;;4533:27:24;;;;;4562:3;156:1014:31;;-1:-1:-1;156:1014:31;;;;;;;4690:21:24;156:1014:31;4666:22:24;156:1014:31;;;;;4625:19:24;4581:145;156:1014:31;4581:43:24;:24;156:1014:31;4646:18:24;156:1014:31;;;;;;;;;;;-1:-1:-1;;;;;156:1014:31;;;4581:43:24;4625:19;;:::i;:::-;156:1014:31;;;;;;;;-1:-1:-1;;;;;156:1014:31;;;;4646:18:24;;:::i;:::-;156:1014:31;;;;;;;;;4666:22:24;;:::i;:::-;4690:21;;;:::i;:::-;156:1014:31;;;;;;;;;;;;;;;;4581:145:24;;;;;:::i;:::-;;;;;;;;;4562:3;4581:145;;4562:3;;;:::i;:::-;4521:10;;;4581:145;;;;;-1:-1:-1;4581:145:24;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;4533:27;;;4336:77;-1:-1:-1;156:1014:31;;-1:-1:-1;;;4390:23:24;;;156:1014:31;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;156:1014:31;;;;;;1103:23:24;156:1014:31;;;;;;;;;;;;;;;;;;;-1:-1:-1;;156:1014:31;;;;;;;;-1:-1:-1;;;;;156:1014:31;;;;;;;;;-1:-1:-1;;;;;156:1014:31;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;673:13:25;156:1014:31;659:27:25;;-1:-1:-1;;;;;156:1014:31;;;659:27:25;:10;:27;655:54;;156:1014:31;;-1:-1:-1;;;738:49:25;;781:4;156:1014:31;738:49:25;;156:1014:31;829:7:25;;156:1014:31;;738:49:25;156:1014:31;;;-1:-1:-1;;;;;156:1014:31;;738:49:25;;;;;;;156:1014:31;-1:-1:-1;738:49:25;;;156:1014:31;829:7:25;;:::i;738:49::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;655:54;156:1014:31;;-1:-1:-1;;;695:14:25;;156:1014:31;;695:14:25;156:1014:31;;-1:-1:-1;156:1014:31;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;156:1014:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2003:11:24;156:1014:31;;;;;;;;;1999:44:24;;156:1014:31;;-1:-1:-1;;;2057:33:24;;-1:-1:-1;;;;;156:1014:31;;;;2057:33:24;156:1014:31;;;;2057:33:24;;;;;;;156:1014:31;2057:33:24;;;;156:1014:31;2102:4:24;;;156:1014:31;;2057:50:24;2053:85;;2057:33;156:1014:31;;-1:-1:-1;;;;;;156:1014:31;-1:-1:-1;;;;;156:1014:31;;;;;2057:33:24;2184:30;;156:1014:31;;;;;;;;;;;;;;;;2184:30:24;156:1014:31;;;-1:-1:-1;;;;156:1014:31;-1:-1:-1;;;156:1014:31;;;;;;;2257:41:24;;;;156:1014:31;2053:85:24;156:1014:31;;-1:-1:-1;;;2116:22:24;;156:1014:31;;2116:22:24;2057:33;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;1999:44;156:1014:31;;-1:-1:-1;;;2023:20:24;;156:1014:31;;2023:20:24;156:1014:31;;;;;;;-1:-1:-1;;156:1014:31;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;156:1014:31;;;;623:10;:27;619:54;;156:1014;-1:-1:-1;156:1014:31;;;;;;;;;;;;;;;;;;;808:73;;;;156:1014;;;;;;;;-1:-1:-1;;156:1014:31;;;;;;;;-1:-1:-1;;;;;156:1014:31;;;;;;;;;;;;;;;-1:-1:-1;;156:1014:31;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;156:1014:31;1097:10:25;:27;1093:54;;-1:-1:-1;1176:21:25;;;;156:1014:31;;1226:36:25;;;156:1014:31;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;-1:-1:-1;156:1014:31;;;;;;1276:8:25;1272:46;;156:1014:31;1272:46:25;156:1014:31;;-1:-1:-1;;;1293:25:25;;156:1014:31;;1293:25:25;156:1014:31;;;;;;;;;;-1:-1:-1;;156:1014:31;;;;;1184:25:24;156:1014:31;;;;;;;;;;;;;;-1:-1:-1;;156:1014:31;;;;;;;;-1:-1:-1;;;;;156:1014:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;156:1014:31;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;156:1014:31;;-1:-1:-1;156:1014:31;;;-1:-1:-1;156:1014:31;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;-1:-1:-1;;156:1014:31;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;156:1014:31;;;;-1:-1:-1;156:1014:31;;;-1:-1:-1;156:1014:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;156:1014:31;;-1:-1:-1;156:1014:31;;-1:-1:-1;156:1014:31;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;156:1014:31;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;156:1014:31;;-1:-1:-1;156:1014:31;;-1:-1:-1;156:1014:31;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;156:1014:31;;-1:-1:-1;156:1014:31;;-1:-1:-1;156:1014:31;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;156:1014:31;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;4972:503:24:-;5067:13;156:1014:31;5054:26:24;;:45;;;;4972:503;5050:77;;5164:21;156:1014:31;5164:21:24;156:1014:31;;4451:9:24;156:1014:31;;;;;;;5164:21:24;156:1014:31;:::i;:::-;5199:17:24;;;156:1014:31;;5199:17:24;;5232:29;5067:13;5232:29;:::o;5195:274::-;5301:12;;156:1014:31;5326:13:24;156:1014:31;5301:54:24;;5316:39;;;;:37;;:24;;-1:-1:-1;;;;;156:1014:31;5316:24:24;156:1014:31;5316:37:24;156:1014:31;;-1:-1:-1;;;5316:39:24;;156:1014:31;;;;;5316:39:24;;;;;;;5195:274;-1:-1:-1;5316:39:24;;;5195:274;5301:54;;:::i;:::-;5282:15;:74;5301:54;;;5326:13;5372:28;:::o;5278:191::-;-1:-1:-1;5431:27:24;:::o;5316:39::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;5050:77;156:1014:31;;-1:-1:-1;;;5108:19:24;;;;;5054:45;5084:15;;;5054:45;;1830:832:25;-1:-1:-1;;;;;156:1014:31;1830:832:25;156:1014:31;;;;1912:45:25;;;;;156:1014:31;;;;;;;;1912:45:25;;156:1014:31;1912:45:25;;;156:1014:31;;;;;1912:45:25;156:1014:31;1912:45:25;;;;;;;;;;;1830:832;1912:45;;1830:832;-1:-1:-1;1990:616:25;;;;;;156:1014:31;;;1990:616:25;;;;;156:1014:31;1990:616:25;;;;;2619:8;2615:40;;1830:832::o;2615:40::-;156:1014:31;;-1:-1:-1;;;2636:19:25;;1912:45;;2636:19;1990:616;-1:-1:-1;156:1014:31;-1:-1:-1;;;1990:616:25;;1912:45;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;894:274:31;950:20;156:1014;;-1:-1:-1;;;;;156:1014:31;;;936:10;:34;932:76;;156:1014;;;-1:-1:-1;;;1042:70:31;;156:1014;-1:-1:-1;;1042:70:31;;;156:1014;;;-1:-1:-1;936:10:31;1042:70;;;;;;;894:274;1042:70;;;;894:274;-1:-1:-1;156:1014:31;;2714:32:24;;-1:-1:-1;;;;;156:1014:31;;;2714:32:24;156:1014:31;;2714:32:24;;;2710:59;;2961:93;1152:8:31;2961:93:24;:::i;:::-;156:1014:31;;;;;;;;3069:31:24;3065:53;;156:1014:31;;;;3132:35:24;3128:57;;156:1014:31;;;;3199:34:24;3195:56;;156:1014:31;;3328:23:24;156:1014:31;;3275:30:24;:24;156:1014:31;;;;;;;;;;;3275:30:24;156:1014:31;;-1:-1:-1;;;3275:32:24;;156:1014:31;;;;;3275:32:24;;;;;;;894:274:31;3275:32:24;;;;894:274:31;3328:15:24;;:23;:::i;:::-;3367:10;;;156:1014:31;;;3362:341:24;156:1014:31;;;;;;4054:92:24;156:1014:31;;;;;4006:22:24;4054:92;156:1014:31;;3713:15:24;;;156:1014:31;3713:15:24;:::i;:::-;;156:1014:31;;3713:15:24;;156:1014:31;;;;:::i;:::-;;;;;;;3765:230:24;;156:1014:31;3765:230:24;;;;156:1014:31;3765:230:24;;;;156:1014:31;3765:230:24;;;;156:1014:31;3765:230:24;156:1014:31;3765:230:24;;156:1014:31;3765:230:24;;;156:1014:31;;;4451:9:24;156:1014:31;;;;;;;4006:22:24;156:1014:31;:::i;:::-;;;;4054:92:24;;;;;:::i;:::-;;;;894:274:31:o;3399:3:24:-;156:1014:31;;3379:18:24;;;;;156:1014:31;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;156:1014:31;;3487:10:24;;;:::i;:::-;156:1014:31;-1:-1:-1;;;;;156:1014:31;3499:9:24;;;;:::i;:::-;156:1014:31;3510:13:24;;;;:::i;:::-;;3525:12;;;;:::i;:::-;;156:1014:31;;3476:67:24;;;;;;;;;;;:::i;:::-;;156:1014:31;;3476:67:24;;;;;;;;:::i;:::-;156:1014:31;3466:78:24;;156:1014:31;;-1:-1:-1;;;3422:123:24;;;;;156:1014:31;;;;;;;;;;;;;;3422:123:24;;;;;;;;;3399:3;3422:123;;;;3399:3;3418:162;;;3399:3;156:1014:31;;;;;;;;3594:98:24;156:1014:31;;;;;3674:12:24;156:1014:31;;;;;3648:9:24;156:1014:31;3636:10:24;;156:1014:31;3594:41:24;:24;156:1014:31;3659:13:24;156:1014:31;;;;;;;;;;3594:41:24;3636:10;;:::i;:::-;156:1014:31;-1:-1:-1;;;;;156:1014:31;;;3636:10:24;3648:9;;:::i;:::-;156:1014:31;3659:13:24;;:::i;3674:12::-;;156:1014:31;;-1:-1:-1;;;3594:98:24;;156:1014:31;;;;;;;3594:98:24;;;:::i;:::-;;;;;;;;;3399:3;3594:98;;3399:3;;:::i;:::-;3367:10;;;3594:98;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;3418:162;156:1014:31;;-1:-1:-1;;;3554:26:24;;156:1014:31;;3554:26:24;3422:123;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;3379:18;;;3275:32;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;3195:56;156:1014:31;;-1:-1:-1;;;3242:9:24;;156:1014:31;;3242:9:24;2710:59;-1:-1:-1;156:1014:31;;-1:-1:-1;;;2755:14:24;;;1042:70:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;932:76;-1:-1:-1;156:1014:31;;-1:-1:-1;;;979:29:31;;;156:1014;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;156:1014:31;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1042:70;156:1014;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;156:1014:31;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;156:1014:31;;-1:-1:-1;156:1014:31;;;;;;;:::i;:::-;;;;-1:-1:-1;;;156:1014:31;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;156:1014:31;;-1:-1:-1;156:1014:31;-1:-1:-1;156:1014:31;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;156:1014:31;;-1:-1:-1;156:1014:31;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;156:1014:31;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;156:1014:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;156:1014:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;156:1014:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;156:1014:31;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;156:1014:31;;-1:-1:-1;156:1014:31;-1:-1:-1;156:1014:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;156:1014:31;-1:-1:-1;;;;;156:1014:31;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;156:1014:31;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;156:1014:31;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;156:1014:31;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.15;\n\nimport \"../SweepableBridgeReceiver.sol\";\nimport \"./IOvmL2CrossDomainMessengerInterface.sol\";\n\ncontract OptimismBridgeReceiver is SweepableBridgeReceiver {\n    error InvalidCrossDomainMessenger();\n\n    event NewCrossDomainMessenger(address indexed oldCrossDomainMessenger, address indexed newCrossDomainMessenger);\n\n    address public crossDomainMessenger;\n\n    constructor(address crossDomainMessenger_) {\n        crossDomainMessenger = crossDomainMessenger_;\n    }\n\n    function changeCrossDomainMessenger(address newCrossDomainMessenger) public {\n        if (msg.sender != localTimelock) revert Unauthorized();\n        address oldCrossDomainMessenger = crossDomainMessenger;\n        crossDomainMessenger = newCrossDomainMessenger;\n        emit NewCrossDomainMessenger(oldCrossDomainMessenger, newCrossDomainMessenger);\n    }\n\n    fallback() external payable {\n        if (msg.sender != crossDomainMessenger) revert InvalidCrossDomainMessenger();\n        address messageSender = IOvmL2CrossDomainMessengerInterface(msg.sender).xDomainMessageSender();\n        processMessage(messageSender, msg.data);\n    }\n}",
  "sourcePath": "/home/stephensb/sb-labs/solidity-contracts/contracts/comet/contracts/bridges/optimism/OptimismBridgeReceiver.sol",
  "ast": {
    "absolutePath": "project:/contracts/comet/contracts/bridges/optimism/OptimismBridgeReceiver.sol",
    "exportedSymbols": {
      "BaseBridgeReceiver": [
        9589
      ],
      "IERC20NonStandard": [
        8605
      ],
      "IOvmL2CrossDomainMessengerInterface": [
        9836
      ],
      "ITimelock": [
        8994
      ],
      "OptimismBridgeReceiver": [
        9917
      ],
      "SweepableBridgeReceiver": [
        9702
      ]
    },
    "id": 9918,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9838,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:31"
      },
      {
        "absolutePath": "project:/contracts/comet/contracts/bridges/SweepableBridgeReceiver.sol",
        "file": "../SweepableBridgeReceiver.sol",
        "id": 9839,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9918,
        "sourceUnit": 9703,
        "src": "62:40:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/comet/contracts/bridges/optimism/IOvmL2CrossDomainMessengerInterface.sol",
        "file": "./IOvmL2CrossDomainMessengerInterface.sol",
        "id": 9840,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9918,
        "sourceUnit": 9837,
        "src": "103:51:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9841,
              "name": "SweepableBridgeReceiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9702,
              "src": "191:23:31"
            },
            "id": 9842,
            "nodeType": "InheritanceSpecifier",
            "src": "191:23:31"
          }
        ],
        "canonicalName": "OptimismBridgeReceiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9917,
        "linearizedBaseContracts": [
          9917,
          9702,
          9589
        ],
        "name": "OptimismBridgeReceiver",
        "nameLocation": "165:22:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "4a35f2f4",
            "id": 9844,
            "name": "InvalidCrossDomainMessenger",
            "nameLocation": "227:27:31",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 9843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "254:2:31"
            },
            "src": "221:36:31"
          },
          {
            "anonymous": false,
            "eventSelector": "b08c5f7c2da6622db1a15d4c66943d7d24affac11e640a991fb4c3eaa9e43113",
            "id": 9850,
            "name": "NewCrossDomainMessenger",
            "nameLocation": "269:23:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9846,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "oldCrossDomainMessenger",
                  "nameLocation": "309:23:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 9850,
                  "src": "293:39:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9845,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9848,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newCrossDomainMessenger",
                  "nameLocation": "350:23:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 9850,
                  "src": "334:39:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "334:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "292:82:31"
            },
            "src": "263:112:31"
          },
          {
            "constant": false,
            "functionSelector": "f43b3613",
            "id": 9852,
            "mutability": "mutable",
            "name": "crossDomainMessenger",
            "nameLocation": "396:20:31",
            "nodeType": "VariableDeclaration",
            "scope": 9917,
            "src": "381:35:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9851,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "381:7:31",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9861,
              "nodeType": "Block",
              "src": "466:61:31",
              "statements": [
                {
                  "expression": {
                    "id": 9859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9857,
                      "name": "crossDomainMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9852,
                      "src": "476:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9858,
                      "name": "crossDomainMessenger_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9854,
                      "src": "499:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "476:44:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9860,
                  "nodeType": "ExpressionStatement",
                  "src": "476:44:31"
                }
              ]
            },
            "id": 9862,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9854,
                  "mutability": "mutable",
                  "name": "crossDomainMessenger_",
                  "nameLocation": "443:21:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 9862,
                  "src": "435:29:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "434:31:31"
            },
            "returnParameters": {
              "id": 9856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:31"
            },
            "scope": 9917,
            "src": "423:104:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9888,
              "nodeType": "Block",
              "src": "609:279:31",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9867,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "623:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "623:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 9869,
                      "name": "localTimelock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "637:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "623:27:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9874,
                  "nodeType": "IfStatement",
                  "src": "619:54:31",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9871,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9144,
                        "src": "659:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 9872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "659:14:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 9873,
                    "nodeType": "RevertStatement",
                    "src": "652:21:31"
                  }
                },
                {
                  "assignments": [
                    9876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9876,
                      "mutability": "mutable",
                      "name": "oldCrossDomainMessenger",
                      "nameLocation": "691:23:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 9888,
                      "src": "683:31:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9875,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "683:7:31",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9878,
                  "initialValue": {
                    "id": 9877,
                    "name": "crossDomainMessenger",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9852,
                    "src": "717:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "683:54:31"
                },
                {
                  "expression": {
                    "id": 9881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9879,
                      "name": "crossDomainMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9852,
                      "src": "747:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9880,
                      "name": "newCrossDomainMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9864,
                      "src": "770:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "747:46:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9882,
                  "nodeType": "ExpressionStatement",
                  "src": "747:46:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 9884,
                        "name": "oldCrossDomainMessenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9876,
                        "src": "832:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9885,
                        "name": "newCrossDomainMessenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9864,
                        "src": "857:23:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9883,
                      "name": "NewCrossDomainMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9850,
                      "src": "808:23:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 9886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "808:73:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9887,
                  "nodeType": "EmitStatement",
                  "src": "803:78:31"
                }
              ]
            },
            "functionSelector": "793332d6",
            "id": 9889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeCrossDomainMessenger",
            "nameLocation": "542:26:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9864,
                  "mutability": "mutable",
                  "name": "newCrossDomainMessenger",
                  "nameLocation": "577:23:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 9889,
                  "src": "569:31:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "568:33:31"
            },
            "returnParameters": {
              "id": 9866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "609:0:31"
            },
            "scope": 9917,
            "src": "533:355:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9915,
              "nodeType": "Block",
              "src": "922:246:31",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9892,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "936:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "936:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 9894,
                      "name": "crossDomainMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9852,
                      "src": "950:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "936:34:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9899,
                  "nodeType": "IfStatement",
                  "src": "932:76:31",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9896,
                        "name": "InvalidCrossDomainMessenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9844,
                        "src": "979:27:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 9897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "979:29:31",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 9898,
                    "nodeType": "RevertStatement",
                    "src": "972:36:31"
                  }
                },
                {
                  "assignments": [
                    9901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9901,
                      "mutability": "mutable",
                      "name": "messageSender",
                      "nameLocation": "1026:13:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 9915,
                      "src": "1018:21:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 9900,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1018:7:31",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9908,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 9903,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1078:3:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1078:10:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9902,
                          "name": "IOvmL2CrossDomainMessengerInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9836,
                          "src": "1042:35:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IOvmL2CrossDomainMessengerInterface_$9836_$",
                            "typeString": "type(contract IOvmL2CrossDomainMessengerInterface)"
                          }
                        },
                        "id": 9905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1042:47:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IOvmL2CrossDomainMessengerInterface_$9836",
                          "typeString": "contract IOvmL2CrossDomainMessengerInterface"
                        }
                      },
                      "id": 9906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "xDomainMessageSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9835,
                      "src": "1042:68:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                        "typeString": "function () external returns (address)"
                      }
                    },
                    "id": 9907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1042:70:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1018:94:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9910,
                        "name": "messageSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9901,
                        "src": "1137:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 9911,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1152:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "1152:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 9909,
                      "name": "processMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9460,
                      "src": "1122:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (address,bytes calldata)"
                      }
                    },
                    "id": 9913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1122:39:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9914,
                  "nodeType": "ExpressionStatement",
                  "src": "1122:39:31"
                }
              ]
            },
            "id": 9916,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "902:2:31"
            },
            "returnParameters": {
              "id": 9891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "922:0:31"
            },
            "scope": 9917,
            "src": "894:274:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9918,
        "src": "156:1014:31",
        "usedErrors": [
          9132,
          9134,
          9136,
          9138,
          9140,
          9142,
          9144,
          9597,
          9599,
          9844
        ]
      }
    ],
    "src": "37:1133:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-11-30T22:41:29.684Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "executeProposal(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to execute"
        }
      },
      "initialize(address,address)": {
        "params": {
          "_govTimelock": "Address of the governing contract that this contract will receive messages from (likely on another chain)",
          "_localTimelock": "Address of the timelock contract that this contract will send messages to"
        }
      },
      "state(uint256)": {
        "params": {
          "proposalId": "Id of the proposal"
        },
        "returns": {
          "_0": "The state of the given proposal (queued, expired or executed)"
        }
      },
      "sweepNativeToken(address)": {
        "params": {
          "recipient": "The address that will receive the swept funds"
        }
      },
      "sweepToken(address,address)": {
        "details": "Note: Make sure to check that the asset being swept out is not malicious",
        "params": {
          "asset": "The address of the ERC-20 token to sweep",
          "recipient": "The address that will receive the swept funds"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "AlreadyInitialized()": [
        {
          "notice": "Custom errors *"
        }
      ]
    },
    "events": {
      "Initialized(address,address)": {
        "notice": "Events *"
      }
    },
    "kind": "user",
    "methods": {
      "executeProposal(uint256)": {
        "notice": "Execute a queued proposal"
      },
      "govTimelock()": {
        "notice": "Address of the governing contract that this bridge receiver expects to  receive messages from; likely an address from another chain (e.g. mainnet)"
      },
      "initialize(address,address)": {
        "notice": "Initialize the contract"
      },
      "initialized()": {
        "notice": "Whether contract has been initialized"
      },
      "localTimelock()": {
        "notice": "Address of the timelock on this chain that the bridge receiver will send messages to"
      },
      "proposalCount()": {
        "notice": "Total count of proposals generated"
      },
      "proposals(uint256)": {
        "notice": "Mapping of proposal ids to their full proposal data"
      },
      "state(uint256)": {
        "notice": "Get the state of a proposal"
      },
      "sweepNativeToken(address)": {
        "notice": "A public function to sweep accidental native token transfers to this contract"
      },
      "sweepToken(address,address)": {
        "notice": "A public function to sweep accidental ERC-20 transfers to this contract"
      }
    },
    "version": 1
  }
}