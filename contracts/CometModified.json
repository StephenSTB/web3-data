{
  "contractName": "CometModified",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "governor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pauseGuardian",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseTokenPriceFeed",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "extensionDelegate",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "supplyKink",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "supplyPerYearInterestRateSlopeLow",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "supplyPerYearInterestRateSlopeHigh",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "supplyPerYearInterestRateBase",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "borrowKink",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "borrowPerYearInterestRateSlopeLow",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "borrowPerYearInterestRateSlopeHigh",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "borrowPerYearInterestRateBase",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "storeFrontPriceFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "trackingIndexScale",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "baseTrackingSupplySpeed",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "baseTrackingBorrowSpeed",
              "type": "uint64"
            },
            {
              "internalType": "uint104",
              "name": "baseMinForRewards",
              "type": "uint104"
            },
            {
              "internalType": "uint104",
              "name": "baseBorrowMin",
              "type": "uint104"
            },
            {
              "internalType": "uint104",
              "name": "targetReserves",
              "type": "uint104"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "asset",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "priceFeed",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "decimals",
                  "type": "uint8"
                },
                {
                  "internalType": "uint64",
                  "name": "borrowCollateralFactor",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "liquidateCollateralFactor",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "liquidationFactor",
                  "type": "uint64"
                },
                {
                  "internalType": "uint128",
                  "name": "supplyCap",
                  "type": "uint128"
                }
              ],
              "internalType": "struct CometConfiguration.AssetConfig[]",
              "name": "assetConfigs",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct CometConfiguration.Configuration",
          "name": "config",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Absurd",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadAsset",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadDecimals",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadDiscount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadMinimum",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BorrowCFTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BorrowTooSmall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientReserves",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidInt104",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidInt256",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidUInt104",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidUInt128",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidUInt64",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LiquidateCFTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NegativeNumber",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSelfTransfer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotCollateralized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotForSale",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotLiquidatable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Paused",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SupplyCapExceeded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TimestampTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooManyAssets",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TooMuchSlippage",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferInFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferOutFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "absorber",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAbsorbed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdValue",
          "type": "uint256"
        }
      ],
      "name": "AbsorbCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "absorber",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "basePaidOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "usdValue",
          "type": "uint256"
        }
      ],
      "name": "AbsorbDebt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "BuyCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "supplyPaused",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "transferPaused",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "withdrawPaused",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "absorbPaused",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "buyPaused",
          "type": "bool"
        }
      ],
      "name": "PauseAction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Supply",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SupplyCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawReserves",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "absorber",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "absorb",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "accrueAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approveThis",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseBorrowMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseMinForRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseTokenPriceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseTrackingBorrowSpeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseTrackingSupplySpeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowKink",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowPerSecondInterestRateBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowPerSecondInterestRateSlopeHigh",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowPerSecondInterestRateSlopeLow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "buyCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "extensionDelegate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "i",
          "type": "uint8"
        }
      ],
      "name": "getAssetInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "offset",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "priceFeed",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "scale",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "borrowCollateralFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "liquidateCollateralFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "liquidationFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "supplyCap",
              "type": "uint128"
            }
          ],
          "internalType": "struct CometCore.AssetInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getAssetInfoByAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "offset",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "priceFeed",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "scale",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "borrowCollateralFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "liquidateCollateralFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "liquidationFactor",
              "type": "uint64"
            },
            {
              "internalType": "uint128",
              "name": "supplyCap",
              "type": "uint128"
            }
          ],
          "internalType": "struct CometCore.AssetInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "utilization",
          "type": "uint256"
        }
      ],
      "name": "getBorrowRate",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "getCollateralReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserves",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "utilization",
          "type": "uint256"
        }
      ],
      "name": "getSupplyRate",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUtilization",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "hasPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeStorage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isAbsorbPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBorrowCollateralized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isBuyPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isLiquidatable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isSupplyPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTransferPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isWithdrawPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "liquidatorPoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "numAbsorbs",
          "type": "uint32"
        },
        {
          "internalType": "uint64",
          "name": "numAbsorbed",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "approxSpend",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "_reserved",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAssets",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "supplyPaused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "transferPaused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "withdrawPaused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "absorbPaused",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "buyPaused",
          "type": "bool"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseGuardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        }
      ],
      "name": "quoteCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "storeFrontPriceFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "supply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "supplyFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyKink",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyPerSecondInterestRateBase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyPerSecondInterestRateSlopeHigh",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyPerSecondInterestRateSlopeLow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "supplyTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalBorrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalsCollateral",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "totalSupplyAsset",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_reserved",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trackingIndexScale",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferAssetFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBasic",
      "outputs": [
        {
          "internalType": "int104",
          "name": "principal",
          "type": "int104"
        },
        {
          "internalType": "uint64",
          "name": "baseTrackingIndex",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "baseTrackingAccrued",
          "type": "uint64"
        },
        {
          "internalType": "uint16",
          "name": "assetsIn",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "_reserved",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userCollateral",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "balance",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "_reserved",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawReserves",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newFunction",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauseGuardian\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseTokenPriceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"extensionDelegate\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"supplyKink\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"supplyPerYearInterestRateSlopeLow\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"supplyPerYearInterestRateSlopeHigh\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"supplyPerYearInterestRateBase\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"borrowKink\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"borrowPerYearInterestRateSlopeLow\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"borrowPerYearInterestRateSlopeHigh\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"borrowPerYearInterestRateBase\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"storeFrontPriceFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"trackingIndexScale\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"baseTrackingSupplySpeed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"baseTrackingBorrowSpeed\",\"type\":\"uint64\"},{\"internalType\":\"uint104\",\"name\":\"baseMinForRewards\",\"type\":\"uint104\"},{\"internalType\":\"uint104\",\"name\":\"baseBorrowMin\",\"type\":\"uint104\"},{\"internalType\":\"uint104\",\"name\":\"targetReserves\",\"type\":\"uint104\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"borrowCollateralFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidateCollateralFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidationFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"supplyCap\",\"type\":\"uint128\"}],\"internalType\":\"struct CometConfiguration.AssetConfig[]\",\"name\":\"assetConfigs\",\"type\":\"tuple[]\"}],\"internalType\":\"struct CometConfiguration.Configuration\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Absurd\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadAsset\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadDiscount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowCFTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientReserves\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInt104\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInt256\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUInt104\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUInt128\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUInt64\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateCFTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NegativeNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSelfTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCollateralized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotForSale\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotLiquidatable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Paused\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SupplyCapExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TimestampTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyAssets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooMuchSlippage\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferInFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferOutFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"absorber\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAbsorbed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"}],\"name\":\"AbsorbCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"absorber\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"basePaidOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"}],\"name\":\"AbsorbDebt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"BuyCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"supplyPaused\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"transferPaused\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"withdrawPaused\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"absorbPaused\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"buyPaused\",\"type\":\"bool\"}],\"name\":\"PauseAction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SupplyCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawReserves\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"absorber\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"absorb\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"accrueAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approveThis\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseBorrowMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseMinForRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenPriceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTrackingBorrowSpeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTrackingSupplySpeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowKink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowPerSecondInterestRateBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowPerSecondInterestRateSlopeHigh\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowPerSecondInterestRateSlopeLow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"buyCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extensionDelegate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"i\",\"type\":\"uint8\"}],\"name\":\"getAssetInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"offset\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"scale\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"borrowCollateralFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidateCollateralFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidationFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"supplyCap\",\"type\":\"uint128\"}],\"internalType\":\"struct CometCore.AssetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetInfoByAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"offset\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"scale\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"borrowCollateralFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidateCollateralFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"liquidationFactor\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"supplyCap\",\"type\":\"uint128\"}],\"internalType\":\"struct CometCore.AssetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"utilization\",\"type\":\"uint256\"}],\"name\":\"getBorrowRate\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getCollateralReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"utilization\",\"type\":\"uint256\"}],\"name\":\"getSupplyRate\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUtilization\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initializeStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAbsorbPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBorrowCollateralized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isBuyPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isLiquidatable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSupplyPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTransferPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWithdrawPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidatorPoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"numAbsorbs\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"numAbsorbed\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"approxSpend\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"_reserved\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newFunction\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAssets\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"supplyPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"withdrawPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"absorbPaused\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"buyPaused\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGuardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"}],\"name\":\"quoteCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storeFrontPriceFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"supplyFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyKink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyPerSecondInterestRateBase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyPerSecondInterestRateSlopeHigh\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyPerSecondInterestRateSlopeLow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"supplyTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalsCollateral\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"totalSupplyAsset\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_reserved\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trackingIndexScale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferAssetFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBasic\",\"outputs\":[{\"internalType\":\"int104\",\"name\":\"principal\",\"type\":\"int104\"},{\"internalType\":\"uint64\",\"name\":\"baseTrackingIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"baseTrackingAccrued\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"assetsIn\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"_reserved\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userCollateral\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"balance\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_reserved\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Compound\",\"kind\":\"dev\",\"methods\":{\"absorb(address,address[])\":{\"params\":{\"absorber\":\"The recipient of the incentive paid to the caller of absorb\",\"accounts\":\"The list of underwater accounts to absorb\"}},\"approveThis(address,address,uint256)\":{\"details\":\"Only callable by governorNote: Setting the `asset` as Comet's address will allow the manager to withdraw from Comet's Comet balance\",\"params\":{\"amount\":\"The amount of an asset to approve\",\"asset\":\"The asset that the manager will gain approval of\",\"manager\":\"The account which will be allowed or disallowed\"}},\"balanceOf(address)\":{\"details\":\"Note: uses updated interest indices to calculate\",\"params\":{\"account\":\"The account whose balance to query\"},\"returns\":{\"_0\":\"The present day base balance magnitude of the account, if positive\"}},\"borrowBalanceOf(address)\":{\"details\":\"Note: uses updated interest indices to calculate\",\"params\":{\"account\":\"The account whose balance to query\"},\"returns\":{\"_0\":\"The present day base balance magnitude of the account, if negative\"}},\"buyCollateral(address,uint256,uint256,address)\":{\"params\":{\"asset\":\"The asset to buy\",\"baseAmount\":\"The amount of base tokens used to buy the collateral\",\"minAmount\":\"The minimum amount of collateral tokens that should be received by the buyer\",\"recipient\":\"The recipient address\"}},\"getAssetInfo(uint8)\":{\"params\":{\"i\":\"The index of the asset info to get\"},\"returns\":{\"_0\":\"The asset info object\"}},\"getAssetInfoByAddress(address)\":{\"details\":\"Determine index of asset that matches given address\"},\"getBorrowRate(uint256)\":{\"details\":\"Note: Does not accrue interest first\",\"params\":{\"utilization\":\"The utilization to check the borrow rate for\"},\"returns\":{\"_0\":\"The per second borrow rate at `utilization`\"}},\"getCollateralReserves(address)\":{\"details\":\"Note: Reverts if collateral reserves are somehow negative, which should not be possible\",\"params\":{\"asset\":\"The collateral asset\"}},\"getPrice(address)\":{\"params\":{\"priceFeed\":\"The address of a price feed\"},\"returns\":{\"_0\":\"The price, scaled by `PRICE_SCALE`\"}},\"getSupplyRate(uint256)\":{\"details\":\"Note: Does not accrue interest first\",\"params\":{\"utilization\":\"The utilization to check the supply rate for\"},\"returns\":{\"_0\":\"The per second supply rate at `utilization`\"}},\"getUtilization()\":{\"details\":\"Note: Does not accrue interest first\",\"returns\":{\"_0\":\"The utilization rate of the base asset\"}},\"hasPermission(address,address)\":{\"params\":{\"manager\":\"The manager account\",\"owner\":\"The owner account\"},\"returns\":{\"_0\":\"Whether or not the manager has permission\"}},\"initialize(address)\":{\"details\":\"Solely used for testing upgrades\"},\"initializeStorage()\":{\"details\":\"Can be used from constructor or proxy\"},\"isAbsorbPaused()\":{\"returns\":{\"_0\":\"Whether or not absorb actions are paused\"}},\"isBorrowCollateralized(address)\":{\"params\":{\"account\":\"The address to check\"},\"returns\":{\"_0\":\"Whether the account is minimally collateralized enough to borrow\"}},\"isBuyPaused()\":{\"returns\":{\"_0\":\"Whether or not buy actions are paused\"}},\"isLiquidatable(address)\":{\"params\":{\"account\":\"The address to check\"},\"returns\":{\"_0\":\"Whether the account is minimally collateralized enough to not be liquidated\"}},\"isSupplyPaused()\":{\"returns\":{\"_0\":\"Whether or not supply actions are paused\"}},\"isTransferPaused()\":{\"returns\":{\"_0\":\"Whether or not transfer actions are paused\"}},\"isWithdrawPaused()\":{\"returns\":{\"_0\":\"Whether or not withdraw actions are paused\"}},\"pause(bool,bool,bool,bool,bool)\":{\"params\":{\"absorbPaused\":\"Boolean for pausing absorb actions\",\"buyPaused\":\"Boolean for pausing buy actions\",\"supplyPaused\":\"Boolean for pausing supply actions\",\"transferPaused\":\"Boolean for pausing transfer actions\",\"withdrawPaused\":\"Boolean for pausing withdraw actions\"}},\"quoteCollateral(address,uint256)\":{\"params\":{\"asset\":\"The collateral asset to get the quote for\",\"baseAmount\":\"The amount of the base asset to get the quote for\"},\"returns\":{\"_0\":\"The quote in terms of the collateral asset\"}},\"supply(address,uint256)\":{\"params\":{\"amount\":\"The quantity to supply\",\"asset\":\"The asset to supply\"}},\"supplyFrom(address,address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to supply\",\"asset\":\"The asset to supply\",\"dst\":\"The address which will hold the balance\",\"from\":\"The supplier address\"}},\"supplyTo(address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to supply\",\"asset\":\"The asset to supply\",\"dst\":\"The address which will hold the balance\"}},\"totalBorrow()\":{\"details\":\"Note: uses updated interest indices to calculate\",\"returns\":{\"_0\":\"The amount of debt*\"}},\"totalSupply()\":{\"details\":\"Note: uses updated interest indices to calculate\",\"returns\":{\"_0\":\"The supply of tokens*\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The quantity to transfer\",\"dst\":\"The recipient address\"},\"returns\":{\"_0\":\"true\"}},\"transferAsset(address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to transfer\",\"asset\":\"The asset to transfer\",\"dst\":\"The recipient address\"}},\"transferAssetFrom(address,address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to transfer\",\"asset\":\"The asset to transfer\",\"dst\":\"The recipient address\",\"src\":\"The sender address\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to transfer\",\"dst\":\"The recipient address\",\"src\":\"The sender address\"},\"returns\":{\"_0\":\"true\"}},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"The quantity to withdraw\",\"asset\":\"The asset to withdraw\"}},\"withdrawFrom(address,address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to withdraw\",\"asset\":\"The asset to withdraw\",\"src\":\"The sender address\",\"to\":\"The recipient address\"}},\"withdrawReserves(address,uint256)\":{\"params\":{\"amount\":\"The amount of reserves to be withdrawn from the protocol\",\"to\":\"An address of the receiver of withdrawn reserves\"}},\"withdrawTo(address,address,uint256)\":{\"params\":{\"amount\":\"The quantity to withdraw\",\"asset\":\"The asset to withdraw\",\"to\":\"The recipient address\"}}},\"title\":\"A modified version of Compound Comet\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidUInt64()\":[{\"notice\":\"Custom errors *\"}]},\"events\":{\"AbsorbCollateral(address,address,address,uint256,uint256)\":{\"notice\":\"Event emitted when a user's collateral is absorbed by the protocol\"},\"AbsorbDebt(address,address,uint256,uint256)\":{\"notice\":\"Event emitted when a borrow position is absorbed by the protocol\"},\"BuyCollateral(address,address,uint256,uint256)\":{\"notice\":\"Event emitted when a collateral asset is purchased from the protocol\"},\"PauseAction(bool,bool,bool,bool,bool)\":{\"notice\":\"Event emitted when an action is paused/unpaused\"},\"WithdrawReserves(address,uint256)\":{\"notice\":\"Event emitted when reserves are withdrawn by the governor\"}},\"kind\":\"user\",\"methods\":{\"absorb(address,address[])\":{\"notice\":\"Absorb a list of underwater accounts onto the protocol balance sheet\"},\"accrueAccount(address)\":{\"notice\":\"Accrue interest and rewards for an account*\"},\"approveThis(address,address,uint256)\":{\"notice\":\"Sets Comet's ERC20 allowance of an asset for a manager\"},\"balanceOf(address)\":{\"notice\":\"Query the current positive base balance of an account or zero\"},\"baseBorrowMin()\":{\"notice\":\"The minimum base amount required to initiate a borrow\"},\"baseMinForRewards()\":{\"notice\":\"The minimum amount of base principal wei for rewards to accrue\"},\"baseScale()\":{\"notice\":\"The scale for base token (must be less than 18 decimals)\"},\"baseToken()\":{\"notice\":\"The address of the base token contract\"},\"baseTokenPriceFeed()\":{\"notice\":\"The address of the price feed for the base token\"},\"baseTrackingBorrowSpeed()\":{\"notice\":\"The speed at which borrow rewards are tracked (in trackingIndexScale)\"},\"baseTrackingSupplySpeed()\":{\"notice\":\"The speed at which supply rewards are tracked (in trackingIndexScale)\"},\"borrowBalanceOf(address)\":{\"notice\":\"Query the current negative base balance of an account or zero\"},\"borrowKink()\":{\"notice\":\"The point in the borrow rate separating the low interest rate slope and the high interest rate slope (factor)\"},\"borrowPerSecondInterestRateBase()\":{\"notice\":\"Per second borrow base interest rate (factor)\"},\"borrowPerSecondInterestRateSlopeHigh()\":{\"notice\":\"Per second borrow interest rate slope applied when utilization is above kink (factor)\"},\"borrowPerSecondInterestRateSlopeLow()\":{\"notice\":\"Per second borrow interest rate slope applied when utilization is below kink (factor)\"},\"buyCollateral(address,uint256,uint256,address)\":{\"notice\":\"Buy collateral from the protocol using base tokens, increasing protocol reserves A minimum collateral amount should be specified to indicate the maximum slippage acceptable for the buyer.\"},\"decimals()\":{\"notice\":\"The number of decimals for wrapped base token\"},\"extensionDelegate()\":{\"notice\":\"The address of the extension contract delegate\"},\"getAssetInfo(uint8)\":{\"notice\":\"Get the i-th asset info, according to the order they were passed in originally\"},\"getCollateralReserves(address)\":{\"notice\":\"Gets the total balance of protocol collateral reserves for an asset\"},\"getPrice(address)\":{\"notice\":\"Get the current price from a feed\"},\"getReserves()\":{\"notice\":\"Gets the total amount of protocol reserves of the base asset\"},\"governor()\":{\"notice\":\"The admin of the protocol\"},\"hasPermission(address,address)\":{\"notice\":\"Determine if the manager has permission to act on behalf of the owner\"},\"initialize(address)\":{\"notice\":\"Initialize storage for a liquidator\"},\"initializeStorage()\":{\"notice\":\"Initialize storage for the contract\"},\"isAllowed(address,address)\":{\"notice\":\"Mapping of users to accounts which may be permitted to manage the user account\"},\"isBorrowCollateralized(address)\":{\"notice\":\"Check whether an account has enough collateral to borrow\"},\"isLiquidatable(address)\":{\"notice\":\"Check whether an account has enough collateral to not be liquidated\"},\"liquidatorPoints(address)\":{\"notice\":\"Mapping of magic liquidator points\"},\"numAssets()\":{\"notice\":\"The number of assets this contract actually supports\"},\"pause(bool,bool,bool,bool,bool)\":{\"notice\":\"Pauses different actions within Comet\"},\"pauseGuardian()\":{\"notice\":\"The account which may trigger pauses\"},\"quoteCollateral(address,uint256)\":{\"notice\":\"Gets the quote for a collateral asset in exchange for an amount of base asset\"},\"storeFrontPriceFactor()\":{\"notice\":\"The fraction of the liquidation penalty that goes to buyers of collateral instead of the protocol\"},\"supply(address,uint256)\":{\"notice\":\"Supply an amount of asset to the protocol\"},\"supplyFrom(address,address,address,uint256)\":{\"notice\":\"Supply an amount of asset from `from` to dst, if allowed\"},\"supplyKink()\":{\"notice\":\"The point in the supply rates separating the low interest rate slope and the high interest rate slope (factor)\"},\"supplyPerSecondInterestRateBase()\":{\"notice\":\"Per second supply base interest rate (factor)\"},\"supplyPerSecondInterestRateSlopeHigh()\":{\"notice\":\"Per second supply interest rate slope applied when utilization is above kink (factor)\"},\"supplyPerSecondInterestRateSlopeLow()\":{\"notice\":\"Per second supply interest rate slope applied when utilization is below kink (factor)\"},\"supplyTo(address,address,uint256)\":{\"notice\":\"Supply an amount of asset to dst\"},\"targetReserves()\":{\"notice\":\"The minimum base token reserves which must be held before collateral is hodled\"},\"totalBorrow()\":{\"notice\":\"Get the total amount of debt\"},\"totalSupply()\":{\"notice\":\"Get the total number of tokens in circulation\"},\"totalsCollateral(address)\":{\"notice\":\"Aggregate variables tracked for each collateral asset\"},\"trackingIndexScale()\":{\"notice\":\"The scale for reward tracking\"},\"transfer(address,uint256)\":{\"notice\":\"ERC20 transfer an amount of base token to dst\"},\"transferAsset(address,address,uint256)\":{\"notice\":\"Transfer an amount of asset to dst\"},\"transferAssetFrom(address,address,address,uint256)\":{\"notice\":\"Transfer an amount of asset from src to dst, if allowed\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"ERC20 transfer an amount of base token from src to dst, if allowed\"},\"userBasic(address)\":{\"notice\":\"Mapping of users to base principal and other basic data\"},\"userCollateral(address,address)\":{\"notice\":\"Mapping of users to collateral data per collateral asset\"},\"userNonce(address)\":{\"notice\":\"The next expected nonce for an address, for validating authorizations via signature\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraw an amount of asset from the protocol\"},\"withdrawFrom(address,address,address,uint256)\":{\"notice\":\"Withdraw an amount of asset from src to `to`, if allowed\"},\"withdrawReserves(address,uint256)\":{\"notice\":\"Withdraws base token reserves if called by the governor\"},\"withdrawTo(address,address,uint256)\":{\"notice\":\"Withdraw an amount of asset to `to`\"}},\"notice\":\"This is solely used for testing upgrades\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/comet/contracts/test/CometModified.sol\":\"CometModified\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/comet/contracts/Comet.sol\":{\"keccak256\":\"0xab4571bb7ed9430e36563114799dfbdb2525b77d081ebe0d5e59d7e67621451e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9c76ef2801c7547be1c04205e4a6fbd955263a6d523658a9887edf10e0034220\",\"dweb:/ipfs/QmVWdyF5Ee1213ehsAXB1i88DJLXSkGT8o1S5PWFPNPUBA\"]},\"project:/contracts/comet/contracts/CometConfiguration.sol\":{\"keccak256\":\"0x58cdf3e481d05a5fb47f25304d104115af196c97d38725d33a2d27a9f01f7b4a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a3f44637440f16fab29a16528b88cbe234ad300f87f3b5e25f8b85ead47bdd35\",\"dweb:/ipfs/QmQGFFE6YKnm1KtTsoMm5fRFKjnhECd6Fr1ZwAsRfJ4bio\"]},\"project:/contracts/comet/contracts/CometCore.sol\":{\"keccak256\":\"0x843ecc64cab2c0cae5a1d7f4111c6d02834f798f3834fe9405f259b476bd875a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0c2d0a9cb559321b9b651b486d8d8d2a4afc8dd4688bfb211af1ecaf95b02700\",\"dweb:/ipfs/QmPpXG8DNtEv8L2rdUuPdHEqnApCk2BXLgPwSJ8pgVXj84\"]},\"project:/contracts/comet/contracts/CometMainInterface.sol\":{\"keccak256\":\"0x5709827ba55f108da7a9ca7b1bcfd0edc7637295496df002f94eb788c6c4801a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://40f5ee85e2ae19abe057c5fcd2b861fc295ade156d517a55f4740da1fe3e8149\",\"dweb:/ipfs/QmTJGCkGZaHYZMPMJcvrju8EB4qjDh2Z7T37fhs8kJbrgv\"]},\"project:/contracts/comet/contracts/CometMath.sol\":{\"keccak256\":\"0x9e404ff1451fb5b533058d31e5fe560f91887e251325ec6f8ae49862fd5b462f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://81e335765a490f22e8383c197b5b39679d440a4b54fadc36f1b6f7cb31985f09\",\"dweb:/ipfs/QmPiB7TkukKA6aShFPu5d1T5D6N8xXwrfnNSD8zksVtTtd\"]},\"project:/contracts/comet/contracts/CometStorage.sol\":{\"keccak256\":\"0xedc38ed37acf51c1f1210bc724e78033b4f2874604918014dde288cd5cf3464c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bbba37919596e53718e4d6b2ae3d60f60b4575852dcbc9abad647f3ef8594751\",\"dweb:/ipfs/QmSnSQVm1SAKhhPo3i7JkvZ8G8vQtAdWBmErHvSDMh9MQR\"]},\"project:/contracts/comet/contracts/ERC20.sol\":{\"keccak256\":\"0xbbdb060282d2bc31a60c7a7e93ce014036039e154281172e07a3f24cf6892567\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ac38dfeba0c599b1b51645b6cd01007d1121762a65adad96ef51e2f1d420203f\",\"dweb:/ipfs/QmQjUMd6qSnF5pepvCPhB5YohCmGzEP6mhX5FBGDktUsGc\"]},\"project:/contracts/comet/contracts/IPriceFeed.sol\":{\"keccak256\":\"0x310068353d00e6a4db31a7245ec49e8e48bb78a26616eb93dc92ef38e1b2218b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7c21788138ef0b331c5e0a93c2463436380924133584de858b87304bce4332a3\",\"dweb:/ipfs/QmV9dhQt6UaHcaVXvbpaARMnfdtj2KgLVs2Nf8wFij9cho\"]},\"project:/contracts/comet/contracts/test/CometModified.sol\":{\"keccak256\":\"0xeb394f94f18ebca7318339f1a4c3669f3442de97b832c36aba3a99acb1cdc7f9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f71ad82f0b66c3397ce31f2467cef1cad940956e8995248a0da6e65779b663c7\",\"dweb:/ipfs/QmNqQsyKwHs4F9DRPqm4VHFQRBM9bLM93FSJsA9ygVZeSe\"]}},\"version\":1}",
  "bytecode": "0x6107406040523462000382576200001f6200001962000581565b620007c1565b604051614cde90816200131b823960805181818161062e01528181610d2f015281816113f301526117f6015260a0518181816108760152610e65015260c05181818161082e015281816113760152818161162b0152818161185f0152818161191001528181612b1a0152818161329e0152818161336f015281816139d301528181613ea00152613fa4015260e051818181611a3f01528181612c660152818161447d0152614883015261010051818181610ea501526149bb01526101205181818161132c0152612639015261014051818181610f440152818161267501526126df015261016051818181611053015261270f0152610180518181816111ab015261269c01526101a051818181611133015261274901526101c0518181816109fc0152818161278501526127ef01526101e051818181610913015261281f015261020051818181610fcf01526127ac0152610220518181816107c90152614847015261024051818181610ca801528181612c9401528181612f2e0152818161465101526148bb0152610260518181816113b6015261310a0152610280518181816106e2015261252501526102a0518181816111e701526124a801526102c05181818161116f015261240f01526102e051818181610a7601528181613c6f015261404a015261030051818181610af101526119ef01526103205181610ab40152610340518181816112ef01528181611c3d0152818161224301528181612cc301528181612e7201526144ad0152610360518161313101526103805181611c8d01526103a05181611c6c01526103c05181611dda01526103e05181611db901526104005181611e2a01526104205181611e0901526104405181611e7a01526104605181611e5901526104805181611eca01526104a05181611ea901526104c05181611f1a01526104e05181611ef901526105005181611f6a01526105205181611f4901526105405181611fba01526105605181611f990152610580518161200a01526105a05181611fe901526105c0518161205a01526105e05181612039015261060051816120aa01526106205181612089015261064051816120fa015261066051816120d90152610680518161214a01526106a0518161212901526106c0518161219a01526106e05181612179015261070051816121e8015261072051816121c70152f35b600080fd5b50634e487b7160e01b600052604160045260246000fd5b60e081019081106001600160401b03821117620003ba57604052565b620003c462000387565b604052565b601f909101601f19168101906001600160401b03821190821017620003ba57604052565b604051906102a082016001600160401b03811183821017620003ba57604052565b51906001600160a01b03821682036200038257565b51906001600160401b03821682036200038257565b51906001600160681b03821682036200038257565b519060ff821682036200038257565b81601f8201121562000382578051906001600160401b03821162000571575b604080519360209162000494838660051b0187620003c9565b848652828601918360e08097028601019481861162000382578401925b858410620004c3575050505050505090565b86848303126200038257825190620004db826200039e565b620004e6856200040e565b8252620004f58686016200040e565b86830152620005068486016200044d565b8483015260606200051981870162000423565b9083015260806200052c81870162000423565b9083015260a06200053f81870162000423565b9083015260c085810151929091906001600160801b0384168403620003825789938893820152815201930192620004b1565b6200057b62000387565b6200047b565b62005ff98038038060405192620005998285620003c9565b8339810190602081830312620003825780516001600160401b03918282116200038257016102a0818403126200038257620005d3620003ed565b92620005df826200040e565b8452620005ef602083016200040e565b602085015262000602604083016200040e565b604085015262000615606083016200040e565b606085015262000628608083016200040e565b60808501526200063b60a0830162000423565b60a08501526200064e60c0830162000423565b60c08501526200066160e0830162000423565b60e08501526101006200067681840162000423565b908501526101206200068a81840162000423565b908501526101406200069e81840162000423565b90850152610160620006b281840162000423565b90850152610180620006c681840162000423565b908501526101a0620006da81840162000423565b908501526101c0620006ee81840162000423565b908501526101e06200070281840162000423565b908501526102006200071681840162000423565b908501526102206200072a81840162000438565b908501526102406200073e81840162000438565b908501526102606200075281840162000438565b90850152610280928383015190811162000382576200077292016200045c565b9082015290565b90816020910312620003825762000790906200044d565b90565b506040513d6000823e3d90fd5b8115620007ab570490565b634e487b7160e01b600052601260045260246000fd5b6040818101805190929190620007ee90620007e2906001600160a01b031681565b6001600160a01b031690565b9181518093819363313ce56760e01b91828452602093849160049889915afa94851562000c72575b60009562000c4e575b5060ff8516916012831162000c3e576101a08581018051919790946001600160401b0392909190670de0b6b3a76400009084161162000c2e57610280968789019b600f8d51511162000c1e576102208a810180519097919391906001600160681b03161562000c0e5790600860ff8f9493838f9160608e930197620008b2620007e2620007e28b5160018060a01b031690565b93518094819382525afa90811562000bfe575b60009162000bca575b50160362000bba576200092892916200090862000918928e620008f7815160018060a01b031690565b60805201516001600160a01b031690565b60a052516001600160a01b031690565b60c052516001600160a01b031690565b60e05260808901516001600160a01b031661010090815296516200095c906001600160401b03165b6001600160401b031690565b905261032052600a0a1690610240978289526101c093620f42406200098d62000950878b015160018060401b031690565b946102609586521062000bad5750508751620f4240900461036052516001600160681b039081166102c0526101e0868101516001600160401b039081169096526102008088015187166102a0529887015182166102e05291860151166103005260a0850151841661012090815260c08601516301e13380908616819004861661014090815260e0880151871682900487166101609081529588015187168290048716610180908152928801518716909852968601518516879004851690925291840151831685900483169091529091015181169190910416905280515160ff1661034052805162000a7e9062000cdc565b6103a05261038052805162000a939062000fc3565b6103e0526103c052805162000aa89062000ff1565b6104205261040052805162000abd906200101f565b6104605261044052805162000ad2906200104d565b6104a05261048052805162000ae79062001146565b6104e0526104c052805162000afc9062001174565b6105205261050052805162000b1190620011a2565b6105605261054052805162000b2690620011d1565b6105a05261058052805162000b3b9062001200565b6105e0526105c052805162000b50906200122f565b6106205261060052805162000b65906200125e565b6106605261064052805162000b7a906200128d565b6106a05261068052805162000b8f90620012bc565b6106e0526106c0525162000ba390620012eb565b6107205261070052565b51630456c65960e51b8152fd5b8851630456c65960e51b81528e90fd5b62000bef9150843d861162000bf6575b62000be68183620003c9565b81019062000779565b38620008ce565b503d62000bda565b62000c0862000793565b620008c5565b8851636e77247560e01b81528e90fd5b865163df8153c760e01b81528c90fd5b84516324dc918f60e11b81528a90fd5b8151630456c65960e51b81528790fd5b62000c6a919550833d851162000bf65762000be68183620003c9565b93386200081f565b62000c7c62000793565b62000816565b6040519060e082016001600160401b0381118382101762000ccc575b6040528160c06000918281528260208201528260408201528260608201528260808201528260a08201520152565b62000cd662000387565b62000c9e565b62000ce662000c82565b5080511562000fba576020015180519091906001600160a01b03165b6020838101516001600160a01b03169060409462000d238682015160ff1690565b936001600160a01b0390811693841562000faa57169286519263313ce56760e01b808552600860ff600496848189818c5afa90811562000f9a575b60009162000f78575b50160362000f68579060ff91895190815281818781875afa91821562000f58575b60009262000f36575b5050818716918291160362000f26576060830180519093906001600160401b03165b6080820180519095919062000dd1906001600160401b031662000950565b6001600160401b03918216101562000f16578551670de0b6b3a764000091166001600160401b03161162000f06575162000e4d9062000e389062000e229062000e3f9083906001600160401b031683565b655af3107a40006001600160401b039091160490565b61ffff1690565b96516001600160401b031690565b60a082015190959062000e6e9062000e38906001600160401b031662000e22565b9961ffff808816908716101562000ef957505060c0015162000ea5916200095091600a9190910a906001600160801b0316620007a0565b60a092831b61ffff60a01b169190911760b09390931b61ffff60b01b169290921760c09690961b61ffff60c01b1695909517949290921b60ff60a01b161760a89190911b600160a81b600160e81b03161790565b5163327d763960e21b8152fd5b89516304d6b32560e41b81528690fd5b8a5163327d763960e21b81528790fd5b8751630456c65960e51b81528490fd5b62000f509250803d1062000bf65762000be68183620003c9565b388062000d91565b62000f6262000793565b62000d88565b8851630456c65960e51b81528590fd5b62000f939150853d871162000bf65762000be68183620003c9565b3862000d67565b62000fa462000793565b62000d5e565b5050505050509050600090600090565b50600090600090565b62000fcd62000c82565b5080516001101562000fba576040015180519091906001600160a01b031662000d02565b62000ffb62000c82565b5080516002101562000fba576060015180519091906001600160a01b031662000d02565b6200102962000c82565b5080516003101562000fba576080015180519091906001600160a01b031662000d02565b906200105862000c82565b508151600492908310156200113d5760a0015180519092906001600160a01b0316602084810151919290916001600160a01b0316946040956200109e8783015160ff1690565b946001600160a01b039081169182156200112c5716938751600860ff63313ce56760e01b92838152848189818c5afa90811562000f9a5760009162000f785750160362000f68579060ff91895190815281818781875afa91821562000f585760009262000f36575050818716918291160362000f26576060830180519093906001600160401b031662000db3565b505050505050509050600090600090565b50600091508190565b6200115062000c82565b5080516005101562000fba5760c0015180519091906001600160a01b031662000d02565b6200117e62000c82565b5080516006101562000fba5760e0015180519091906001600160a01b031662000d02565b620011ac62000c82565b5080516007101562000fba57610100015180519091906001600160a01b031662000d02565b620011db62000c82565b5080516008101562000fba57610120015180519091906001600160a01b031662000d02565b6200120a62000c82565b5080516009101562000fba57610140015180519091906001600160a01b031662000d02565b6200123962000c82565b508051600a101562000fba57610160015180519091906001600160a01b031662000d02565b6200126862000c82565b508051600b101562000fba57610180015180519091906001600160a01b031662000d02565b6200129762000c82565b508051600c101562000fba576101a0015180519091906001600160a01b031662000d02565b620012c662000c82565b508051600d101562000fba576101c0015180519091906001600160a01b031662000d02565b620012f562000c82565b508051600e101562000fba576101e0015180519091906001600160a01b031662000d0256fe60806040526004361015610018575b6100166149ae565b005b60003560e01c8063042e02cf1461057c5780630902f1ac146105735780630bc47ad11461056a5780630c340a241461056157806318160ddd14610558578063189bb2f11461054f5780631b28d63e146105465780631c9f7fb91461053d5780631f5954bd1461053457806323b872dd1461052b57806324a3d6221461052257806326441318146105195780632a48cf12146105105780632b92a07d146105075780632d05670b146104fe5780632e04b8e7146104f5578063300e6beb146104ec578063313ce567146104e357806332176c49146104da578063374c49b4146104d157806338aa813f146104c85780633b3bec2e146104bf57806341976e09146104b65780634232cd63146104ad578063439e2e45146104a457806344c1e5eb1461049b57806344c35d071461049257806344ff241d1461048957806359e017bd146104805780635a94b8d11461047757806367800b5f1461046e57806370a08231146104655780637914acc71461045c5780637ac88ed1146104535780637eb711311461044a578063804de71f146104415780638285ef40146104385780638d5d814c1461042f57806390323177146104265780639241a5611461041d5780639364e18a1461041457806394920cca1461040b5780639ea99a5a146104025780639fa83b5a146103f95780639ff567f8146103f0578063a1654379146103e7578063a1a1ef43146103de578063a46fe83b146103d5578063a5b4ff79146103cc578063a9059cbb146103c3578063aba7f15e146103ba578063ad14777c146103b1578063bfe69c8d146103a8578063c1ee2c181461039f578063c3b35a7e14610396578063c3cecfd21461038d578063c4d66de814610384578063c55dae631461037b578063c5fa15cf14610372578063c8c7fe6b14610369578063cde6804114610360578063d8e5f61114610357578063d955759d1461034e578063dc4abafd14610345578063e478795d1461033c578063e4e6e77914610333578063e7dad6bd1461032a578063f2b9fdb8146103215763f3fef3a30361000e5761031c611a9b565b61000e565b5061031c611a6e565b5061031c611a28565b5061031c6118b5565b5061031c6117ca565b5061031c611756565b5061031c611737565b5061031c611710565b5061031c6116f6565b5061031c6116cb565b5061031c61165a565b5061031c611614565b5061031c6115cc565b5061031c611567565b5061031c61154d565b5061031c611531565b5061031c611491565b5061031c6113d9565b5061031c61139d565b5061031c61134f565b5061031c611313565b5061031c6112d4565b5061031c6112ad565b5061031c611262565b5061031c61123a565b5061031c61120a565b5061031c6111ce565b5061031c611192565b5061031c611156565b5061031c61111a565b5061031c6110fe565b5061031c6110d7565b5061031c611076565b5061031c61103a565b5061031c61101e565b5061031c610ff2565b5061031c610fb6565b5061031c610f8e565b5061031c610f67565b5061031c610f2b565b5061031c610ed4565b5061031c610e8e565b5061031c610cd5565b5061031c610c8f565b5061031c610c75565b5061031c610c5b565b5061031c610c33565b5061031c610bfe565b5061031c610b3c565b5061031c610b14565b5061031c610ad8565b5061031c610a99565b5061031c610a5d565b5061031c610a1f565b5061031c6109e3565b5061031c610978565b5061031c6108fa565b5061031c6108de565b5061031c61085f565b5061031c610818565b5061031c6107b0565b5061031c610722565b5061031c610705565b5061031c6106c9565b5061031c61065d565b5061031c610617565b5061031c6105f1565b5061031c6105cd565b5061031c61059b565b6001600160a01b0381160361059657565b600080fd5b50346105965760203660031901126105965760206105c36004356105be81610585565b612e12565b6040519015158152f35b50346105965760003660031901126105965760206105e9612ac5565b604051908152f35b50346105965760003660031901126105965760206001805460f81c161515604051908152f35b5034610596576000366003190112610596576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461059657600036600319011261059657602066038d7ea4c680006106c06106846122b4565b6001600160681b036001600160401b036106b7600154936106b164ffffffffff91828760d01c1690612329565b16612590565b50169116611bfa565b04604051908152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461059657600036600319011261059657602060405160658152f35b5034610596576000806003193601126107ad5764ffffffffff60015460d01c1661079c576107786107516122b4565b6001805464ffffffffff60d01b191660d09290921b64ffffffffff60d01b16919091179055565b80546001600160801b0319166e038d7ea4c6800000038d7ea4c68000178155604051f35b60405162dc149f60e41b8152600490fd5b80fd5b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b60609060031901126105965760043561080481610585565b9060243561081181610585565b9060443590565b50346105965761085461082a366107ec565b91907f0000000000000000000000000000000000000000000000000000000000000000913361399b565b602060405160018152f35b5034610596576000366003190112610596576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b6080906003190112610596576004356108bd81610585565b906024356108ca81610585565b906044356108d781610585565b9060643590565b5034610596576100166108f0366108a5565b9291909133613e71565b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b60409060031901126105965760043561094e81610585565b9060243561095b81610585565b90565b6001600160a01b0316600090815260056020526040902090565b5034610596576109df6109ba61098d36610936565b9060018060a01b0316600052600660205260406000209060018060a01b0316600052602052604060002090565b54604080516001600160801b038316815260809290921c602083015290918291820190565b0390f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461059657602036600319011261059657600435610a3d81610585565b60018060a01b031660005260046020526020604060002054604051908152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461059657600036600319011261059657602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346105965760203660031901126105965760206105e9600435610b3781610585565b614966565b50346105965760203660031901126105965760206105c3600435610b5f81610585565b612bf2565b610bfc9092919260e08061010083019560ff815116845260018060a01b0380602083015116602086015260408201511660408501526001600160401b036060820151166060850152610bc6608082015160808601906001600160401b03169052565b60a0818101516001600160401b03169085015260c0818101516001600160401b03169085015201516001600160801b0316910152565b565b5034610596576020366003190112610596576109df610c27600435610c2281610585565b612230565b60405191829182610b64565b50346105965760203660031901126105965760206105e9600435610c5681610585565b612904565b503461059657610016610c6d366107ec565b91333361326c565b503461059657610016610c87366107ec565b91333361399b565b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b8015150361059657565b50346105965760a036600319011261059657600435610cf381610ccb565b602435610cff81610ccb565b60443591610d0c83610ccb565b60643592610d1984610ccb565b608435610d2581610ccb565b60018060a01b03807f0000000000000000000000000000000000000000000000000000000000000000163314159081610e61575b50610e50577f3be39979091ae7ca962aa1c44e645f2df3c221b79f324afa5f44aedc8d2f690d94610e4b92610e16610d99610d9387614c7a565b60ff1690565b610dae610da589614c7a565b60011b60fe1690565b17610dc4610dbb84614c7a565b60021b60fc1690565b17610dda610dd185614c7a565b60031b60f81690565b17610df0610de786614c7a565b60041b60f01690565b600180546001600160f81b03169290911760f81b6001600160f81b031916919091179055565b6040519586958693909594919260809360a0860197151586521515602086015215156040850152151560608401521515910152565b0390a1005b6040516282b42960e81b8152600490fd5b90507f00000000000000000000000000000000000000000000000000000000000000001633141538610d59565b5034610596576000366003190112610596576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461059657602036600319011261059657600435610ef281610585565b6001600160a01b03166000908152600260209081526040918290205482516001600160801b038216815260809190911c91810191909152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5034610596576000366003190112610596576020600460015460f81c161515604051908152f35b50346105965760203660031901126105965760206105e9600435610fb181610585565b614908565b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346105965760403660031901126105965760206105e960043561101581610585565b602435906147ec565b50346105965760003660031901126105965760206105e9612866565b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461059657600036600319011261059657602066038d7ea4c680006106c061109d6122b4565b6001600160681b036001600160401b036110ca600154936106b164ffffffffff91828760d01c1690612329565b9050169160681c16611bfa565b5034610596576000366003190112610596576020600860015460f81c161515604051908152f35b503461059657610016611110366108a5565b929190913361326c565b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5034610596576020366003190112610596576020611229600435612747565b6001600160401b0360405191168152f35b50346105965760203660031901126105965760206105e960043561125d81610585565b6129be565b503461059657602060ff6112a161127836610936565b6001600160a01b0391821660009081526003865260408082209290931681526020919091522090565b54166040519015158152f35b5034610596576000366003190112610596576020600260015460f81c161515604051908152f35b503461059657600036600319011261059657602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346105965760403660031901126105965761085460043561137081610585565b602435907f000000000000000000000000000000000000000000000000000000000000000090333361399b565b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5034610596576113e8366107ec565b6001600160a01b03917f000000000000000000000000000000000000000000000000000000000000000083163303610e505760405163095ea7b360e01b81526001600160a01b03949094166004850152602484019190915260209183916044918391600091165af18015611484575b61145d57005b6100169060203d811161147d575b6114758183611af9565b8101906135ae565b503d61146b565b61148c6128f7565b611457565b5034610596576020366003190112610596576100166004356114b281610585565b6114ba612373565b60018060a01b03811660005260056020526040600020611526604051916114e083611ac8565b5480600c0b83526001600160401b03808260681c1660208501528160a81c16604084015261151c61ffff8260e81c16606085019061ffff169052565b60f81c6080830152565b8051600c0b91613087565b503461059657610016611543366108a5565b929190913361399b565b50346105965761001661155f366107ec565b913333613e71565b50346105965760403660031901126105965760043561158581610585565b602435906001600160401b03908183116105965736602384011215610596578260040135918211610596573660248360051b850101116105965760246100169301906142a3565b5034610596576020366003190112610596576004356115ea81610585565b6001600160a01b03166000908152600760205260409020805463ffffffff191663ffffffff179055005b5034610596576000366003190112610596576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346105965760203660031901126105965760043561167881610585565b60018060a01b0316600052600760205260806040600020546040519063ffffffff811682526001600160401b038160201c1660208301526001600160801b038160601c16604083015260e01c6060820152f35b50346105965760203660031901126105965760043560ff8116810361059657610c276109df91611c2c565b50346105965760206105c361170a36610936565b906149ed565b5034610596576000366003190112610596576020601060015460f81c161515604051908152f35b5034610596576020366003190112610596576020611229600435612637565b50346105965760203660031901126105965760043561177481610585565b60018060a01b0316600052600560205260a06040600020546040519080600c0b82526001600160401b03808260681c1660208401528160a81c16604083015261ffff8160e81c16606083015260f81c6080820152f35b5034610596576040366003190112610596576004356117e881610585565b602435906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163303610e5057611825612ac5565b600081129081156118a3575b506118915781611883847fec4431f2ba1a9382f6b0c4352b888cba6f7db91667d9f776abe5ad8ddc5401b6947f0000000000000000000000000000000000000000000000000000000000000000614084565b6040519384521691602090a2005b60405163128bd24d60e31b8152600490fd5b6118ad9150614c6f565b831138611831565b5034610596576080366003190112610596576004356118d381610585565b604435606435916118e383610585565b601060015460f81c16611a16576118f8612ac5565b600081121590816119eb575b506119d95761193482337f00000000000000000000000000000000000000000000000000000000000000006135c3565b61193e82826147ec565b9260243584106119c757611951826129be565b8411611891577ff891b2a411b0e66a5f0a6ff1368670fefa287a13f541eb633a386a1a9cc7046b9161199f6119c29261199861198c88614bc8565b6001600160801b031690565b9083614084565b6040805194855260208501959095526001600160a01b0316933393918291820190565b0390a3005b60405163fa6ad35560e01b8152600490fd5b604051631d99ddbf60e01b8152600490fd5b90507f0000000000000000000000000000000000000000000000000000000000000000111538611904565b6040516313d0ff5960e31b8152600490fd5b5034610596576000366003190112610596576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461059657604036600319011261059657610016600435611a8f81610585565b6024359033333361326c565b503461059657604036600319011261059657610016600435611abc81610585565b60243590333333613e71565b60a081019081106001600160401b03821117611ae357604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b03821117611ae357604052565b6040519061010082018281106001600160401b03821117611ae357604052565b6040519061010082018281106001600160401b03821117611ae3576040528160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b50634e487b7160e01b600052601260045260246000fd5b50634e487b7160e01b600052601160045260246000fd5b66038d7ea4c68000908060001904821181151516611bd3570290565b611bdb611ba0565b0290565b655af3107a4000908060001904821181151516611bd3570290565b8060001904821181151516611bd3570290565b60ff16604d8111611c1f575b600a0a90565b611c27611ba0565b611c19565b611c34611b3a565b5060ff811660ff7f00000000000000000000000000000000000000000000000000000000000000001681101561221e5780611dae57507f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005b61ffff808260a01c16611cbf90611bdf565b6001600160401b0316818360b01c16611cd790611bdf565b6001600160401b0316918360c01c16611cef90611bdf565b6001600160401b0316928460a01c60ff16611d0990611c0d565b6001600160401b031690611d2d6001600160401b038084169060a889901c16611bfa565b6001600160801b031695611d3f611b1a565b60ff90981688526001600160a01b039182166020890152166001600160a01b031660408701526001600160401b031660608601526001600160401b031660808501526001600160401b031660a08401526001600160401b031660c08301526001600160801b031660e082015290565b60018103611dfe57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60028103611e4e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60038103611e9e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60048103611eee57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60058103611f3e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60068103611f8e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60078103611fde57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b6008810361202e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b6009810361207e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b600a81036120ce57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b600b810361211e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b600c810361216e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b600d81036121be57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b600e0361220c577f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60405163971241a160e01b8152600490fd5b604051633640530560e01b8152600490fd5b90612239611b3a565b5060009060ff92837f000000000000000000000000000000000000000000000000000000000000000016925b838582161061228057604051633640530560e01b8152600490fd5b61228981611c2c565b60208101516001600160a01b038481169116146122ab57506001018416612265565b93505050915090565b650100000000004210156122cd5764ffffffffff421690565b604051633d32ffdb60e01b8152600490fd5b906040516122ec81611ac8565b608081935480600c0b83526001600160401b03808260681c1660208501528160a81c16604084015261ffff8160e81c16606084015260f81c910152565b64ffffffffff918216911681811061233f570390565b612347611ba0565b0390565b906001600160401b038080931691168092038111612367570190565b61236f611ba0565b0190565b61237b6122b4565b6123a561239b61239560015464ffffffffff9060d01c1690565b83612329565b64ffffffffff1690565b90816123af575050565b8161240a6123ee6123c2610bfc95612590565b91909167ffffffffffffffff60401b6000549160401b169067ffffffffffffffff60401b191617600055565b6001600160401b03166001600160401b03196000541617600055565b6001547f000000000000000000000000000000000000000000000000000000000000000091906001600160681b031682811015612512575b506001546124639060681c6001600160681b03165b6001600160681b031690565b91821015612495575b50506001805464ffffffffff60d01b191660d09290921b64ffffffffff60d01b16919091179055565b6124d66124d161250b936124cc6124e6947f0000000000000000000000000000000000000000000000000000000000000000611bfa565b612f28565b614b7c565b60005460c01c61234b565b61234b565b600080546001600160c01b031660c09290921b6001600160c01b031916919091179055565b388061246c565b61255d6125496124d161258a936124cc867f0000000000000000000000000000000000000000000000000000000000000000611bfa565b60005460801c6001600160401b031661234b565b6000805467ffffffffffffffff60801b191660809290921b67ffffffffffffffff60801b16919091179055565b38612442565b906000546001600160401b0392838083169260401c1693816125b3575b50509190565b816126066126006125e097946126126126189761260c876125e761260c996125d9612866565b9e8f612637565b169d612747565b169b612606612600670de0b6b3a7640000998a93611bfa565b84611bfa565b04614b7c565b9061234b565b98611bfa565b9138806125ad565b81198111612367570190565b81811061233f570390565b7f00000000000000000000000000000000000000000000000000000000000000008082116126c057506124d1670de0b6b3a764000061269961095b937f0000000000000000000000000000000000000000000000000000000000000000611bfa565b047f0000000000000000000000000000000000000000000000000000000000000000612620565b61095b916124d191612733670de0b6b3a76400009161270383612699837f0000000000000000000000000000000000000000000000000000000000000000611bfa565b9381811061273a575b037f0000000000000000000000000000000000000000000000000000000000000000611bfa565b0490612620565b612742611ba0565b61270c565b7f00000000000000000000000000000000000000000000000000000000000000008082116127d057506124d1670de0b6b3a76400006127a961095b937f0000000000000000000000000000000000000000000000000000000000000000611bfa565b047f0000000000000000000000000000000000000000000000000000000000000000612620565b61095b916124d191612733670de0b6b3a764000091612813836127a9837f0000000000000000000000000000000000000000000000000000000000000000611bfa565b93818110612843575b037f0000000000000000000000000000000000000000000000000000000000000000611bfa565b61284b611ba0565b61281c565b811561285a570490565b612862611b89565b0490565b6000546001546128a866038d7ea4c68000916001600160401b036001600160681b039084612898828816848616611bfa565b049560401c169160681c16611bfa565b04816128b5575050600090565b670de0b6b3a76400009080600019048211811515166128d357020490565b6128db611ba0565b020490565b519069ffffffffffffffffffff8216820361059657565b506040513d6000823e3d90fd5b604051633fabe5a360e21b81529060a090829060049082906001600160a01b03165afa9081156129a2575b600091612956575b5060008113156129445790565b60405163fd1ee34960e01b8152600490fd5b9060a0823d821161299a575b8161296f60a09383611af9565b810103126107ad5750612981816128e0565b506129936080602083015192016128e0565b5038612937565b3d9150612962565b6129aa6128f7565b61292f565b90816020910312610596575190565b6040516370a0823160e01b8152306004820152906001600160a01b0316602082602481845afa918215612a48575b600092612a18575b5060005260026020526001600160801b03604060002054169081811061233f570390565b612a3a91925060203d8111612a41575b612a328183611af9565b8101906129af565b90386129f4565b503d612a28565b612a506128f7565b6129ec565b600082128015600160ff1b8401831216612a7f575b6001600160ff1b03830182131661233f570390565b612a87611ba0565b612a6a565b6000811280156001600160ff1b03839003841316612ab8575b600160ff1b829003831216612367570190565b612ac0611ba0565b612aa5565b61095b612ad06122b4565b612af3612aee61239b6001549364ffffffffff8560d01c1690612329565b612590565b6040516370a0823160e01b8152306004820152929091906020846024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa938415612be5575b600094612bad575b5091612ba1612b9b612b9b93612b94612ba79666038d7ea4c68000926001600160401b0384612b87826001600160681b039416848616611bfa565b0497169160681c16611bfa565b0495614c23565b91614c23565b90612a55565b90612a8c565b612ba793919450612b9b612b9b93612b94612bd8612ba19460203d8111612a4157612a328183611af9565b9794965050935050612b4c565b612bed6128f7565b612b44565b90612c19612c128360018060a01b03166000526005602052604060002090565b54600c0b90565b906000928383600c0b1215612e0957612cba612c61612c5b612c508496959660018060a01b03166000526005602052604060002090565b5460e81c61ffff1690565b93614a35565b612c8a7f0000000000000000000000000000000000000000000000000000000000000000612904565b6001600160401b037f00000000000000000000000000000000000000000000000000000000000000001691612f72565b90849360ff95867f000000000000000000000000000000000000000000000000000000000000000016955b8781169087821015612dfb5790889161ffff600180931b891616612d0b575b0116612ce5565b9590915082811215612def5790612de98992612ba7612de488612dde612dd26080612dc3612d898f612d5e612d42612d7c92611c2c565b6001600160a01b03909816600090815260066020526040902090565b6020888101516001600160a01b031660009081529190526040902090565b546001600160801b031690565b6040860151612da0906001600160a01b0316612904565b6001600160801b03612dbc60608901516001600160401b031690565b9216612f53565b9301516001600160401b031690565b6001600160401b031690565b90612f15565b614c23565b95612d04565b50955050945050505090565b505094509450509050121590565b50915050600190565b90612e32612c128360018060a01b03166000526005602052604060002090565b906000928383600c0b1215612f1057612e69612c61612c5b612c508496959660018060a01b03166000526005602052604060002090565b90849360ff95867f000000000000000000000000000000000000000000000000000000000000000016955b8781169087821015612f035790889161ffff600180931b891616612eba575b0116612e94565b9590915082811215612ef75790612ef18992612ba7612de488612dde612dd260a0612dc3612d898f612d5e612d42612d7c92611c2c565b95612eb3565b50509450945050505090565b5050945094505090501290565b509050565b670de0b6b3a76400009161286291611bfa565b612850907f000000000000000000000000000000000000000000000000000000000000000090611bfa565b6001600160401b0391612f6591611bfa565b911690811561285a570490565b9190612f856001600160401b0391614c23565b6000808513949082136001600160ff1b03868216848204841116613036575b600160ff1b96600085129185918316858a05831216613029575b60008512938416828a0586121661301c575b05831291161661300f575b029116918215613002575b8114600019831416612ff6570590565b612ffe611ba0565b0590565b61300a611b89565b612fe6565b613017611ba0565b612fdb565b613024611ba0565b612fd0565b613031611ba0565b612fbe565b61303e611ba0565b612fa4565b6001600160401b03918216911681811061233f570390565b600c0b6c7fffffffffffffffffffffffff19811461307a575b60000390565b613082611ba0565b613074565b6131a690610bfc9361309a8451600c0b90565b600c82900b855260009182918683600c83900b811361322c5761312f61310861317c946001600160681b03613101612dd2613156976130fb60206130ec6124d19a546001600160401b039060801c1690565b9201516001600160401b031690565b90613043565b9116611bfa565b7f000000000000000000000000000000000000000000000000000000000000000090612850565b7f000000000000000000000000000000000000000000000000000000000000000090612850565b61316f60408901916124e183516001600160401b031690565b6001600160401b03169052565b600c0b1261321f575461095e9060801c6001600160401b03165b6001600160401b03166020850152565b815160208301516040840151606085015160809095015160e89590951b61ffff60e81b1660a89190911b67ffffffffffffffff60a81b166001600160681b0390931660689290921b67ffffffffffffffff60681b169190911791909117176001600160f81b031960f89390931b92909216919091179055565b5461095e9060c01c613196565b61312f6131086132679461326261245761245761325c612dd2613156996130fb60206130ec6124d19c5460c01c90565b9361305b565b611bfa565b61317c565b939290936001805460f81c16611a165761328961328d91866149ed565b1590565b610e50576001600160a01b038181167f0000000000000000000000000000000000000000000000000000000000000000909116036132e45750610bfc9260001983036133635791506132de81614966565b91613363565b906132f2610bfc9493614bc8565b926136f3565b906001600160681b038080931691168092038111612367570190565b6001600160681b03918216911681811061233f570390565b600180546cffffffffffffffffffffffffff60681b191660689290921b6cffffffffffffffffffffffffff60681b16919091179055565b61344a919261339381837f00000000000000000000000000000000000000000000000000000000000000006135c3565b61339b612373565b6001600160a01b0384166000908152600560205260409020613455906133c5906122df565b6122df565b8051600c0b9061344f6133f56133ee6133e96133e086614a35565b612ba789614c23565b614acc565b8094613534565b97906134316134158a6134106001546001600160681b031690565b6132f8565b6001600160681b03166001600160681b03196001541617600155565b60015460681c6001600160681b0316613314565b613314565b61332c565b86613087565b6040519081526001600160a01b0393841693849216907fd1cf3d156d5f8f0d50f6c122ed609cec09d35c9b9fb3fff6ea0959134dae424e90602090a36001600160681b0381166134a3575050565b600080516020614c898339815191526134e16134d16000936134cc85546001600160401b031690565b614aa7565b6040519081529081906020820190565b0390a3565b600c91820b910b6000821280156c7fffffffffffffffffffffffff198401831216613527575b826c7fffffffffffffffffffffffff0182131661233f570390565b61352f611ba0565b61350c565b91909180600c0b83600c0b8181126135a157600012613567575061355891926134e6565b6001600160681b031690600090565b6000136135885761357891926134e6565b6001600160681b03169060009190565b6135919061305b565b6001600160681b03908116921690565b5050509050600090600090565b90816020910312610596575161095b81610ccb565b6040516323b872dd60e01b81526001600160a01b039283166004820152306024820152604481019390935260209183916064918391600091165af1908115613646575b600091613628575b501561361657565b60405163073d1efd60e51b8152600490fd5b613640915060203d811161147d576114758183611af9565b3861360e565b61364e6128f7565b613606565b90604051604081018181106001600160401b03821117611ae35760405291546001600160801b038116835260801c6020830152565b906001600160801b038080931691168092038111612367570190565b906001600160801b03166001600160801b0319825416179055565b9060206001600160801b03916136d883825116856136a4565b0151908254916001600160801b03199060801b169116179055565b919290926001600160801b039061370d82841685836135c3565b61371681612230565b9061373b6137368260018060a01b03166000526002602052604060002090565b613653565b926137666137598661375487516001600160801b031690565b613688565b6001600160801b03168552565b83516001600160801b03169061378961198c60e08601516001600160801b031690565b91161161388557613855613830856138809461384f7ffa56f7b24f17183d81894d3ac2ee654e3c26388d17a28dbd9549b8114304e1f49761384a876137ee8e61380c613805612d7c856137ee8560018060a01b03166000526006602052604060002090565b9060018060a01b0316600052602052604060002090565b9889613688565b98899561382b8560018060a01b03166000526002602052604060002090565b6136bf565b6001600160a01b0316600090815260066020526040902090565b6136a4565b89613897565b6040516001600160801b0390941684526001600160a01b039081169581169416929081906020820190565b0390a4565b604051637ac7b99d60e11b8152600490fd5b909290916001600160801b03908116158080613990575b15613916575050506138ee6138d260ff610bfc945116600160ff61ffff92161b1690565b6001600160a01b03909216600090815260056020526040902090565b805461ffff60e81b19811660e891821c61ffff16909317901b61ffff60e81b16919091179055565b159182613985575b5050613928575050565b61ffff61396161394760ff610bfc955116600160ff61ffff92161b1690565b199260018060a01b03166000526005602052604060002090565b91825460e81c161681549061ffff60e81b9060e81b169061ffff60e81b1916179055565b16159050388061391e565b5081831615156138ae565b93929093600260015460f81c16611a16576132896139b991866149ed565b610e50576001600160a01b0384811683821614613a3157807f00000000000000000000000000000000000000000000000000000000000000001690821614600014613a1d5750610bfc926000198303613a54579150613a1782614908565b91613a54565b90613a2b610bfc9493614bc8565b92613d32565b60405163e397a99b60e01b8152600490fd5b600160ff1b811461307a5760000390565b919091613a5f612373565b6001600160a01b0381166000908152600560205260409020613a80906122df565b6001600160a01b0384166000908152600560205260409020613aa1906122df565b928151613aae90600c0b90565b938051613abb90600c0b90565b92613ac586614a35565b613ace84614c23565b613ad791612a55565b92613ae185614a35565b90613aeb90614c23565b613af491612a8c565b90613afe84614acc565b613b088193614acc565b978893613b1491613ccd565b98613b1f9197613534565b98878a600154613b35906001600160681b031690565b90613b3f916132f8565b90613b4991613314565b613b69906001600160681b03166001600160681b03196001541617600155565b60015460681c6001600160681b031690613b82916132f8565b90613b8c91613314565b613b959061332c565b613b9f9187613087565b613ba99187613087565b60008112613c64575b506001600160681b0391828216613c15575b50508116613bd0575050565b600080516020614c898339815191526134e1613bf96000936134cc85546001600160401b031690565b6040519081526001600160a01b03909416939081906020820190565b600080516020614c89833981519152613c5a613c3e6000946134cc86546001600160401b031690565b6040519081526001600160a01b03909316929081906020820190565b0390a33880613bc4565b613c6d90613a43565b7f000000000000000000000000000000000000000000000000000000000000000011613cbb57613c9f61328983612bf2565b613ca95738613bb2565b604051630a62fbdb60e11b8152600490fd5b604051637139da2360e11b8152600490fd5b919082600c0b81600c0b8181136135a157600013613cf0575061355891926134e6565b600012613d015761357891926134e6565b613d0a9061305b565b6001600160681b03928316921690565b6001600160801b03918216911681811061233f570390565b6001600160a01b0381811660008181526006602081815260408084208987168086529083528185205489881686529383528185209085529091529091205494969591946001600160801b039492939291908516908516613d928882613d1a565b91613d9d8982613688565b918387613dbc8760018060a01b03166000526006602052604060002090565b6001600160a01b0390911660009081526020919091526040902090613de0916136a4565b6001600160a01b038b81166000908152600660209081526040808320938b16835292905220613e109084906136a4565b613e1987612230565b93613e25918587613897565b613e2f928a613897565b613e3890612bf2565b15613ca957806020927f29db89d45e1a802b4d55e202984fce9faf1d30aedf86503ff1ea0ed9ebb64201946040519716875216951693a4565b93929093600460015460f81c16611a1657613289613e8f91866149ed565b610e50576001600160a01b038181167f000000000000000000000000000000000000000000000000000000000000000090911603613ee65750610bfc926000198303613efa579150613ee082614908565b91613efa565b90613ef4610bfc9493614bc8565b9261410e565b909161344a92613f08612373565b6001600160a01b0383166000908152600560205260409020613f29906122df565b613f93613f378251600c0b90565b613f4c613f4382614a35565b612ba187614c23565b9261344f613f63613f5c86614acc565b8094613ccd565b613f7f6134158361344560019e959e546001600160681b031690565b60015460681c6001600160681b03166132f8565b6000811261403f575b50613fc882827f0000000000000000000000000000000000000000000000000000000000000000614084565b6040519182526001600160a01b0392831692169082907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb90602090a36001600160681b038216614016575050565b600080516020614c898339815191526134e16134d16000946134cc86546001600160401b031690565b61404890613a43565b7f000000000000000000000000000000000000000000000000000000000000000011613cbb5761407a61328984612bf2565b613ca95738613f9c565b60405163a9059cbb60e01b81526001600160a01b039283166004820152602481019390935260209183916044918391600091165af1908115614101575b6000916140e3575b50156140d157565b60405163cefaffeb60e01b8152600490fd5b6140fb915060203d811161147d576114758183611af9565b386140c9565b6141096128f7565b6140c1565b909260018060a01b0391828116928360005260066020526141c76001600160801b0392610b5f846141558960406000209060018060a01b0316600052602052604060002090565b54166141618782613d1a565b906141946141818b60018060a01b03166000526002602052604060002090565b61418e8a8a835416613d1a565b906136a4565b6141b88261384a8c6137ee8860018060a01b03166000526006602052604060002090565b6141c18a612230565b84613897565b15613ca957806020927fd6d480d5b3068db003533b170d67561494d72e3bf9fa40a266471351ebba9e169416956141ff878983614084565b60405196875216951693a4565b919081101561421c5760051b0190565b634e487b7160e01b600052603260045260246000fd5b3561095b81610585565b90604051608081016001600160401b0382821081831117611ae3576060916040528294549063ffffffff821684528160201c1660208401526001600160801b0381831c16604084015260e01c910152565b60019063ffffffff809116908114612367570190565b9291909260016008815460f81c16611a16575a946142bf612373565b60005b8481106143fb5750505061439b9061438161435b6143566142e8610bfc97985a9061262c565b61434f61433661431261430d8860018060a01b03166000526007602052604060002090565b61423c565b986124d161432c6143278c5163ffffffff1690565b61428d565b63ffffffff168b52565b61316f60208a01916124e183516001600160401b031690565b4890611bfa565b614bc8565b614374604086019161375483516001600160801b031690565b6001600160801b03169052565b6001600160a01b0316600090815260076020526040902090565b815160208084015160408501516060958601516001600160e01b031960e09190911b166fffffffffffffffffffffffffffffffff60601b9190961b1663ffffffff9093166bffffffffffffffff000000009190921b161717919091179055565b8061441961441361440e8694898761420c565b614232565b8661441f565b016142c2565b9161442c61328983612e12565b6147da57906144506133c08260018060a01b03166000526005602052604060002090565b9061445c8251600c0b90565b9361446685614a35565b926060906144788282015161ffff1690565b6144a17f0000000000000000000000000000000000000000000000000000000000000000612904565b96600092839860ff9a8b7f0000000000000000000000000000000000000000000000000000000000000000169a5b8c8116908c82101561462c57908d91898c8c61ffff600180961b8c16166144fb575b50505001166144cf565b90919a61450784611c2c565b6020818101516001600160a01b0386811660009081526006845260408082209290931680825291845282812080546001600160801b03198116909155600290945291909120805493946001600160801b03938416949293909261456c91869116613d1a565b614575916136a4565b604084810151909f906001600160a01b031661459090612904565b908501516001600160401b03166145b0916001600160801b038616612f53565b60c094909401516145ca906001600160401b031685612f15565b6145d391612620565b9d516001600160801b0392909216825260208201929092526001600160a01b0391821693821692909116907f9850ab1af75177e4a9201c65a2cf7976d5d28e40ef63494b44366f86b2f9412e90604090a4898c8c6144f1565b505094979699509450969150975061468361467d612de4856146786001600160401b037f000000000000000000000000000000000000000000000000000000000000000016809a611bfa565b612850565b82612a8c565b91600083126147d1575b61469683614acc565b96876146a29187613087565b6001600160a01b03851660009081526005602052604090208790805461ffff60e81b191690556146d191613534565b6001546001600160681b0316906146e7916132f8565b614707906001600160681b03166001600160681b03196001541617600155565b60015460681c6001600160681b03169061472091613314565b6147299061332c565b61473291612a55565b61473b90614c6f565b926147469184612f53565b6040805193845260208401919091526001600160a01b039182169485939216917f1547a878dc89ad3c367b6338b4be6a65a5dd74fb77ae044da1e8747ef1f4f62f9190a380600c0b600012614799575050565b600080516020614c898339815191526134e16134d16000936147cb6147c586546001600160401b031690565b91614c46565b90614aa7565b6000925061468d565b604051636ef5bcdd60e11b8152600490fd5b906148b16147fc61095b93612230565b61487c60606148a761481960018060a01b03604086015116612904565b6001600160401b039384918260c08801511661486b670de0b6b3a76400009482869384106148fb575b8303167f0000000000000000000000000000000000000000000000000000000000000000611bfa565b048084106148ee575b830390611bfa565b04956132627f0000000000000000000000000000000000000000000000000000000000000000612904565b9201511690611bfa565b9080156148e1575b7f00000000000000000000000000000000000000000000000000000000000000009104612850565b6148e9611b89565b6148b9565b6148f6611ba0565b614874565b614903611ba0565b614842565b61492b6149136122b4565b6106b164ffffffffff918260015460d01c1690612329565b506001600160a01b03909116600090815260056020526040812054600c0b91908083131561496057506147cb61095b92614c46565b91505090565b6149716149136122b4565b6001600160a01b03909216600090815260056020526040812054600c0b9291508083121561496057506147cb6149a961095b9361305b565b614c46565b50600036818037808036817f00000000000000000000000000000000000000000000000000000000000000005af43d82803e156149e9573d90f35b3d90fd5b6001600160a01b03808316911690811491908215614a0a57505090565b60009081526003602090815260408083206001600160a01b0390941683529290522060ff9150541690565b6000600c82900b12614a715766038d7ea4c68000614a6b61095b926001600160401b0360005416906001600160681b0316611bfa565b04614c23565b614aa2612de461095b92614a936001600160401b0360005460401c169161305b565b6001600160681b031690614aa7565b613a43565b66038d7ea4c68000916001600160681b036001600160401b0361286293169116611bfa565b60008112614b0f57614afd61095b91614af06001600160401b036000541691611bb7565b8115614b02575b04614ba2565b614bee565b614b0a611b89565b614af7565b614b5d614afd614b39614b4361095b94614b3e6001600160401b0360005460401c16938492613a43565b611bb7565b612620565b60018110614b6f575b8115614b62575b6000190104614ba2565b61305b565b614b6a611b89565b614b53565b614b77611ba0565b614b4c565b6001600160401b0390818111614b90571690565b6040516372a1cb5160e11b8152600490fd5b6001600160681b0390818111614bb6571690565b604051630dc7925560e11b8152600490fd5b6001600160801b0390818111614bdc571690565b60405163762ea71160e11b8152600490fd5b6001600160681b03166c7fffffffffffffffffffffffff8111614c1157600c0b90565b604051639369ae3560e01b8152600490fd5b6001600160ff1b038111614c345790565b60405163e7e828ad60e01b8152600490fd5b600081600c0b12614c5d576001600160681b031690565b60405163363b64b760e11b8152600490fd5b60008112614c5d5790565b6000901561095b575060019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ebbb5992ff311ebfce549d45326cccce4311c56f7dbe1eccbf1a0389a5886b7364736f6c634300080f0033",
  "deployedBytecode": "0x60806040526004361015610018575b6100166149ae565b005b60003560e01c8063042e02cf1461057c5780630902f1ac146105735780630bc47ad11461056a5780630c340a241461056157806318160ddd14610558578063189bb2f11461054f5780631b28d63e146105465780631c9f7fb91461053d5780631f5954bd1461053457806323b872dd1461052b57806324a3d6221461052257806326441318146105195780632a48cf12146105105780632b92a07d146105075780632d05670b146104fe5780632e04b8e7146104f5578063300e6beb146104ec578063313ce567146104e357806332176c49146104da578063374c49b4146104d157806338aa813f146104c85780633b3bec2e146104bf57806341976e09146104b65780634232cd63146104ad578063439e2e45146104a457806344c1e5eb1461049b57806344c35d071461049257806344ff241d1461048957806359e017bd146104805780635a94b8d11461047757806367800b5f1461046e57806370a08231146104655780637914acc71461045c5780637ac88ed1146104535780637eb711311461044a578063804de71f146104415780638285ef40146104385780638d5d814c1461042f57806390323177146104265780639241a5611461041d5780639364e18a1461041457806394920cca1461040b5780639ea99a5a146104025780639fa83b5a146103f95780639ff567f8146103f0578063a1654379146103e7578063a1a1ef43146103de578063a46fe83b146103d5578063a5b4ff79146103cc578063a9059cbb146103c3578063aba7f15e146103ba578063ad14777c146103b1578063bfe69c8d146103a8578063c1ee2c181461039f578063c3b35a7e14610396578063c3cecfd21461038d578063c4d66de814610384578063c55dae631461037b578063c5fa15cf14610372578063c8c7fe6b14610369578063cde6804114610360578063d8e5f61114610357578063d955759d1461034e578063dc4abafd14610345578063e478795d1461033c578063e4e6e77914610333578063e7dad6bd1461032a578063f2b9fdb8146103215763f3fef3a30361000e5761031c611a9b565b61000e565b5061031c611a6e565b5061031c611a28565b5061031c6118b5565b5061031c6117ca565b5061031c611756565b5061031c611737565b5061031c611710565b5061031c6116f6565b5061031c6116cb565b5061031c61165a565b5061031c611614565b5061031c6115cc565b5061031c611567565b5061031c61154d565b5061031c611531565b5061031c611491565b5061031c6113d9565b5061031c61139d565b5061031c61134f565b5061031c611313565b5061031c6112d4565b5061031c6112ad565b5061031c611262565b5061031c61123a565b5061031c61120a565b5061031c6111ce565b5061031c611192565b5061031c611156565b5061031c61111a565b5061031c6110fe565b5061031c6110d7565b5061031c611076565b5061031c61103a565b5061031c61101e565b5061031c610ff2565b5061031c610fb6565b5061031c610f8e565b5061031c610f67565b5061031c610f2b565b5061031c610ed4565b5061031c610e8e565b5061031c610cd5565b5061031c610c8f565b5061031c610c75565b5061031c610c5b565b5061031c610c33565b5061031c610bfe565b5061031c610b3c565b5061031c610b14565b5061031c610ad8565b5061031c610a99565b5061031c610a5d565b5061031c610a1f565b5061031c6109e3565b5061031c610978565b5061031c6108fa565b5061031c6108de565b5061031c61085f565b5061031c610818565b5061031c6107b0565b5061031c610722565b5061031c610705565b5061031c6106c9565b5061031c61065d565b5061031c610617565b5061031c6105f1565b5061031c6105cd565b5061031c61059b565b6001600160a01b0381160361059657565b600080fd5b50346105965760203660031901126105965760206105c36004356105be81610585565b612e12565b6040519015158152f35b50346105965760003660031901126105965760206105e9612ac5565b604051908152f35b50346105965760003660031901126105965760206001805460f81c161515604051908152f35b5034610596576000366003190112610596576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461059657600036600319011261059657602066038d7ea4c680006106c06106846122b4565b6001600160681b036001600160401b036106b7600154936106b164ffffffffff91828760d01c1690612329565b16612590565b50169116611bfa565b04604051908152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461059657600036600319011261059657602060405160658152f35b5034610596576000806003193601126107ad5764ffffffffff60015460d01c1661079c576107786107516122b4565b6001805464ffffffffff60d01b191660d09290921b64ffffffffff60d01b16919091179055565b80546001600160801b0319166e038d7ea4c6800000038d7ea4c68000178155604051f35b60405162dc149f60e41b8152600490fd5b80fd5b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b60609060031901126105965760043561080481610585565b9060243561081181610585565b9060443590565b50346105965761085461082a366107ec565b91907f0000000000000000000000000000000000000000000000000000000000000000913361399b565b602060405160018152f35b5034610596576000366003190112610596576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b6080906003190112610596576004356108bd81610585565b906024356108ca81610585565b906044356108d781610585565b9060643590565b5034610596576100166108f0366108a5565b9291909133613e71565b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b60409060031901126105965760043561094e81610585565b9060243561095b81610585565b90565b6001600160a01b0316600090815260056020526040902090565b5034610596576109df6109ba61098d36610936565b9060018060a01b0316600052600660205260406000209060018060a01b0316600052602052604060002090565b54604080516001600160801b038316815260809290921c602083015290918291820190565b0390f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461059657602036600319011261059657600435610a3d81610585565b60018060a01b031660005260046020526020604060002054604051908152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461059657600036600319011261059657602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346105965760203660031901126105965760206105e9600435610b3781610585565b614966565b50346105965760203660031901126105965760206105c3600435610b5f81610585565b612bf2565b610bfc9092919260e08061010083019560ff815116845260018060a01b0380602083015116602086015260408201511660408501526001600160401b036060820151166060850152610bc6608082015160808601906001600160401b03169052565b60a0818101516001600160401b03169085015260c0818101516001600160401b03169085015201516001600160801b0316910152565b565b5034610596576020366003190112610596576109df610c27600435610c2281610585565b612230565b60405191829182610b64565b50346105965760203660031901126105965760206105e9600435610c5681610585565b612904565b503461059657610016610c6d366107ec565b91333361326c565b503461059657610016610c87366107ec565b91333361399b565b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b8015150361059657565b50346105965760a036600319011261059657600435610cf381610ccb565b602435610cff81610ccb565b60443591610d0c83610ccb565b60643592610d1984610ccb565b608435610d2581610ccb565b60018060a01b03807f0000000000000000000000000000000000000000000000000000000000000000163314159081610e61575b50610e50577f3be39979091ae7ca962aa1c44e645f2df3c221b79f324afa5f44aedc8d2f690d94610e4b92610e16610d99610d9387614c7a565b60ff1690565b610dae610da589614c7a565b60011b60fe1690565b17610dc4610dbb84614c7a565b60021b60fc1690565b17610dda610dd185614c7a565b60031b60f81690565b17610df0610de786614c7a565b60041b60f01690565b600180546001600160f81b03169290911760f81b6001600160f81b031916919091179055565b6040519586958693909594919260809360a0860197151586521515602086015215156040850152151560608401521515910152565b0390a1005b6040516282b42960e81b8152600490fd5b90507f00000000000000000000000000000000000000000000000000000000000000001633141538610d59565b5034610596576000366003190112610596576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461059657602036600319011261059657600435610ef281610585565b6001600160a01b03166000908152600260209081526040918290205482516001600160801b038216815260809190911c91810191909152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5034610596576000366003190112610596576020600460015460f81c161515604051908152f35b50346105965760203660031901126105965760206105e9600435610fb181610585565b614908565b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346105965760403660031901126105965760206105e960043561101581610585565b602435906147ec565b50346105965760003660031901126105965760206105e9612866565b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461059657600036600319011261059657602066038d7ea4c680006106c061109d6122b4565b6001600160681b036001600160401b036110ca600154936106b164ffffffffff91828760d01c1690612329565b9050169160681c16611bfa565b5034610596576000366003190112610596576020600860015460f81c161515604051908152f35b503461059657610016611110366108a5565b929190913361326c565b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5034610596576020366003190112610596576020611229600435612747565b6001600160401b0360405191168152f35b50346105965760203660031901126105965760206105e960043561125d81610585565b6129be565b503461059657602060ff6112a161127836610936565b6001600160a01b0391821660009081526003865260408082209290931681526020919091522090565b54166040519015158152f35b5034610596576000366003190112610596576020600260015460f81c161515604051908152f35b503461059657600036600319011261059657602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346105965760403660031901126105965761085460043561137081610585565b602435907f000000000000000000000000000000000000000000000000000000000000000090333361399b565b50346105965760003660031901126105965760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b5034610596576113e8366107ec565b6001600160a01b03917f000000000000000000000000000000000000000000000000000000000000000083163303610e505760405163095ea7b360e01b81526001600160a01b03949094166004850152602484019190915260209183916044918391600091165af18015611484575b61145d57005b6100169060203d811161147d575b6114758183611af9565b8101906135ae565b503d61146b565b61148c6128f7565b611457565b5034610596576020366003190112610596576100166004356114b281610585565b6114ba612373565b60018060a01b03811660005260056020526040600020611526604051916114e083611ac8565b5480600c0b83526001600160401b03808260681c1660208501528160a81c16604084015261151c61ffff8260e81c16606085019061ffff169052565b60f81c6080830152565b8051600c0b91613087565b503461059657610016611543366108a5565b929190913361399b565b50346105965761001661155f366107ec565b913333613e71565b50346105965760403660031901126105965760043561158581610585565b602435906001600160401b03908183116105965736602384011215610596578260040135918211610596573660248360051b850101116105965760246100169301906142a3565b5034610596576020366003190112610596576004356115ea81610585565b6001600160a01b03166000908152600760205260409020805463ffffffff191663ffffffff179055005b5034610596576000366003190112610596576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346105965760203660031901126105965760043561167881610585565b60018060a01b0316600052600760205260806040600020546040519063ffffffff811682526001600160401b038160201c1660208301526001600160801b038160601c16604083015260e01c6060820152f35b50346105965760203660031901126105965760043560ff8116810361059657610c276109df91611c2c565b50346105965760206105c361170a36610936565b906149ed565b5034610596576000366003190112610596576020601060015460f81c161515604051908152f35b5034610596576020366003190112610596576020611229600435612637565b50346105965760203660031901126105965760043561177481610585565b60018060a01b0316600052600560205260a06040600020546040519080600c0b82526001600160401b03808260681c1660208401528160a81c16604083015261ffff8160e81c16606083015260f81c6080820152f35b5034610596576040366003190112610596576004356117e881610585565b602435906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081163303610e5057611825612ac5565b600081129081156118a3575b506118915781611883847fec4431f2ba1a9382f6b0c4352b888cba6f7db91667d9f776abe5ad8ddc5401b6947f0000000000000000000000000000000000000000000000000000000000000000614084565b6040519384521691602090a2005b60405163128bd24d60e31b8152600490fd5b6118ad9150614c6f565b831138611831565b5034610596576080366003190112610596576004356118d381610585565b604435606435916118e383610585565b601060015460f81c16611a16576118f8612ac5565b600081121590816119eb575b506119d95761193482337f00000000000000000000000000000000000000000000000000000000000000006135c3565b61193e82826147ec565b9260243584106119c757611951826129be565b8411611891577ff891b2a411b0e66a5f0a6ff1368670fefa287a13f541eb633a386a1a9cc7046b9161199f6119c29261199861198c88614bc8565b6001600160801b031690565b9083614084565b6040805194855260208501959095526001600160a01b0316933393918291820190565b0390a3005b60405163fa6ad35560e01b8152600490fd5b604051631d99ddbf60e01b8152600490fd5b90507f0000000000000000000000000000000000000000000000000000000000000000111538611904565b6040516313d0ff5960e31b8152600490fd5b5034610596576000366003190112610596576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461059657604036600319011261059657610016600435611a8f81610585565b6024359033333361326c565b503461059657604036600319011261059657610016600435611abc81610585565b60243590333333613e71565b60a081019081106001600160401b03821117611ae357604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b03821117611ae357604052565b6040519061010082018281106001600160401b03821117611ae357604052565b6040519061010082018281106001600160401b03821117611ae3576040528160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b50634e487b7160e01b600052601260045260246000fd5b50634e487b7160e01b600052601160045260246000fd5b66038d7ea4c68000908060001904821181151516611bd3570290565b611bdb611ba0565b0290565b655af3107a4000908060001904821181151516611bd3570290565b8060001904821181151516611bd3570290565b60ff16604d8111611c1f575b600a0a90565b611c27611ba0565b611c19565b611c34611b3a565b5060ff811660ff7f00000000000000000000000000000000000000000000000000000000000000001681101561221e5780611dae57507f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000005b61ffff808260a01c16611cbf90611bdf565b6001600160401b0316818360b01c16611cd790611bdf565b6001600160401b0316918360c01c16611cef90611bdf565b6001600160401b0316928460a01c60ff16611d0990611c0d565b6001600160401b031690611d2d6001600160401b038084169060a889901c16611bfa565b6001600160801b031695611d3f611b1a565b60ff90981688526001600160a01b039182166020890152166001600160a01b031660408701526001600160401b031660608601526001600160401b031660808501526001600160401b031660a08401526001600160401b031660c08301526001600160801b031660e082015290565b60018103611dfe57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60028103611e4e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60038103611e9e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60048103611eee57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60058103611f3e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60068103611f8e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60078103611fde57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b6008810361202e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b6009810361207e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b600a81036120ce57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b600b810361211e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b600c810361216e57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b600d81036121be57507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b600e0361220c577f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cad565b60405163971241a160e01b8152600490fd5b604051633640530560e01b8152600490fd5b90612239611b3a565b5060009060ff92837f000000000000000000000000000000000000000000000000000000000000000016925b838582161061228057604051633640530560e01b8152600490fd5b61228981611c2c565b60208101516001600160a01b038481169116146122ab57506001018416612265565b93505050915090565b650100000000004210156122cd5764ffffffffff421690565b604051633d32ffdb60e01b8152600490fd5b906040516122ec81611ac8565b608081935480600c0b83526001600160401b03808260681c1660208501528160a81c16604084015261ffff8160e81c16606084015260f81c910152565b64ffffffffff918216911681811061233f570390565b612347611ba0565b0390565b906001600160401b038080931691168092038111612367570190565b61236f611ba0565b0190565b61237b6122b4565b6123a561239b61239560015464ffffffffff9060d01c1690565b83612329565b64ffffffffff1690565b90816123af575050565b8161240a6123ee6123c2610bfc95612590565b91909167ffffffffffffffff60401b6000549160401b169067ffffffffffffffff60401b191617600055565b6001600160401b03166001600160401b03196000541617600055565b6001547f000000000000000000000000000000000000000000000000000000000000000091906001600160681b031682811015612512575b506001546124639060681c6001600160681b03165b6001600160681b031690565b91821015612495575b50506001805464ffffffffff60d01b191660d09290921b64ffffffffff60d01b16919091179055565b6124d66124d161250b936124cc6124e6947f0000000000000000000000000000000000000000000000000000000000000000611bfa565b612f28565b614b7c565b60005460c01c61234b565b61234b565b600080546001600160c01b031660c09290921b6001600160c01b031916919091179055565b388061246c565b61255d6125496124d161258a936124cc867f0000000000000000000000000000000000000000000000000000000000000000611bfa565b60005460801c6001600160401b031661234b565b6000805467ffffffffffffffff60801b191660809290921b67ffffffffffffffff60801b16919091179055565b38612442565b906000546001600160401b0392838083169260401c1693816125b3575b50509190565b816126066126006125e097946126126126189761260c876125e761260c996125d9612866565b9e8f612637565b169d612747565b169b612606612600670de0b6b3a7640000998a93611bfa565b84611bfa565b04614b7c565b9061234b565b98611bfa565b9138806125ad565b81198111612367570190565b81811061233f570390565b7f00000000000000000000000000000000000000000000000000000000000000008082116126c057506124d1670de0b6b3a764000061269961095b937f0000000000000000000000000000000000000000000000000000000000000000611bfa565b047f0000000000000000000000000000000000000000000000000000000000000000612620565b61095b916124d191612733670de0b6b3a76400009161270383612699837f0000000000000000000000000000000000000000000000000000000000000000611bfa565b9381811061273a575b037f0000000000000000000000000000000000000000000000000000000000000000611bfa565b0490612620565b612742611ba0565b61270c565b7f00000000000000000000000000000000000000000000000000000000000000008082116127d057506124d1670de0b6b3a76400006127a961095b937f0000000000000000000000000000000000000000000000000000000000000000611bfa565b047f0000000000000000000000000000000000000000000000000000000000000000612620565b61095b916124d191612733670de0b6b3a764000091612813836127a9837f0000000000000000000000000000000000000000000000000000000000000000611bfa565b93818110612843575b037f0000000000000000000000000000000000000000000000000000000000000000611bfa565b61284b611ba0565b61281c565b811561285a570490565b612862611b89565b0490565b6000546001546128a866038d7ea4c68000916001600160401b036001600160681b039084612898828816848616611bfa565b049560401c169160681c16611bfa565b04816128b5575050600090565b670de0b6b3a76400009080600019048211811515166128d357020490565b6128db611ba0565b020490565b519069ffffffffffffffffffff8216820361059657565b506040513d6000823e3d90fd5b604051633fabe5a360e21b81529060a090829060049082906001600160a01b03165afa9081156129a2575b600091612956575b5060008113156129445790565b60405163fd1ee34960e01b8152600490fd5b9060a0823d821161299a575b8161296f60a09383611af9565b810103126107ad5750612981816128e0565b506129936080602083015192016128e0565b5038612937565b3d9150612962565b6129aa6128f7565b61292f565b90816020910312610596575190565b6040516370a0823160e01b8152306004820152906001600160a01b0316602082602481845afa918215612a48575b600092612a18575b5060005260026020526001600160801b03604060002054169081811061233f570390565b612a3a91925060203d8111612a41575b612a328183611af9565b8101906129af565b90386129f4565b503d612a28565b612a506128f7565b6129ec565b600082128015600160ff1b8401831216612a7f575b6001600160ff1b03830182131661233f570390565b612a87611ba0565b612a6a565b6000811280156001600160ff1b03839003841316612ab8575b600160ff1b829003831216612367570190565b612ac0611ba0565b612aa5565b61095b612ad06122b4565b612af3612aee61239b6001549364ffffffffff8560d01c1690612329565b612590565b6040516370a0823160e01b8152306004820152929091906020846024816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa938415612be5575b600094612bad575b5091612ba1612b9b612b9b93612b94612ba79666038d7ea4c68000926001600160401b0384612b87826001600160681b039416848616611bfa565b0497169160681c16611bfa565b0495614c23565b91614c23565b90612a55565b90612a8c565b612ba793919450612b9b612b9b93612b94612bd8612ba19460203d8111612a4157612a328183611af9565b9794965050935050612b4c565b612bed6128f7565b612b44565b90612c19612c128360018060a01b03166000526005602052604060002090565b54600c0b90565b906000928383600c0b1215612e0957612cba612c61612c5b612c508496959660018060a01b03166000526005602052604060002090565b5460e81c61ffff1690565b93614a35565b612c8a7f0000000000000000000000000000000000000000000000000000000000000000612904565b6001600160401b037f00000000000000000000000000000000000000000000000000000000000000001691612f72565b90849360ff95867f000000000000000000000000000000000000000000000000000000000000000016955b8781169087821015612dfb5790889161ffff600180931b891616612d0b575b0116612ce5565b9590915082811215612def5790612de98992612ba7612de488612dde612dd26080612dc3612d898f612d5e612d42612d7c92611c2c565b6001600160a01b03909816600090815260066020526040902090565b6020888101516001600160a01b031660009081529190526040902090565b546001600160801b031690565b6040860151612da0906001600160a01b0316612904565b6001600160801b03612dbc60608901516001600160401b031690565b9216612f53565b9301516001600160401b031690565b6001600160401b031690565b90612f15565b614c23565b95612d04565b50955050945050505090565b505094509450509050121590565b50915050600190565b90612e32612c128360018060a01b03166000526005602052604060002090565b906000928383600c0b1215612f1057612e69612c61612c5b612c508496959660018060a01b03166000526005602052604060002090565b90849360ff95867f000000000000000000000000000000000000000000000000000000000000000016955b8781169087821015612f035790889161ffff600180931b891616612eba575b0116612e94565b9590915082811215612ef75790612ef18992612ba7612de488612dde612dd260a0612dc3612d898f612d5e612d42612d7c92611c2c565b95612eb3565b50509450945050505090565b5050945094505090501290565b509050565b670de0b6b3a76400009161286291611bfa565b612850907f000000000000000000000000000000000000000000000000000000000000000090611bfa565b6001600160401b0391612f6591611bfa565b911690811561285a570490565b9190612f856001600160401b0391614c23565b6000808513949082136001600160ff1b03868216848204841116613036575b600160ff1b96600085129185918316858a05831216613029575b60008512938416828a0586121661301c575b05831291161661300f575b029116918215613002575b8114600019831416612ff6570590565b612ffe611ba0565b0590565b61300a611b89565b612fe6565b613017611ba0565b612fdb565b613024611ba0565b612fd0565b613031611ba0565b612fbe565b61303e611ba0565b612fa4565b6001600160401b03918216911681811061233f570390565b600c0b6c7fffffffffffffffffffffffff19811461307a575b60000390565b613082611ba0565b613074565b6131a690610bfc9361309a8451600c0b90565b600c82900b855260009182918683600c83900b811361322c5761312f61310861317c946001600160681b03613101612dd2613156976130fb60206130ec6124d19a546001600160401b039060801c1690565b9201516001600160401b031690565b90613043565b9116611bfa565b7f000000000000000000000000000000000000000000000000000000000000000090612850565b7f000000000000000000000000000000000000000000000000000000000000000090612850565b61316f60408901916124e183516001600160401b031690565b6001600160401b03169052565b600c0b1261321f575461095e9060801c6001600160401b03165b6001600160401b03166020850152565b815160208301516040840151606085015160809095015160e89590951b61ffff60e81b1660a89190911b67ffffffffffffffff60a81b166001600160681b0390931660689290921b67ffffffffffffffff60681b169190911791909117176001600160f81b031960f89390931b92909216919091179055565b5461095e9060c01c613196565b61312f6131086132679461326261245761245761325c612dd2613156996130fb60206130ec6124d19c5460c01c90565b9361305b565b611bfa565b61317c565b939290936001805460f81c16611a165761328961328d91866149ed565b1590565b610e50576001600160a01b038181167f0000000000000000000000000000000000000000000000000000000000000000909116036132e45750610bfc9260001983036133635791506132de81614966565b91613363565b906132f2610bfc9493614bc8565b926136f3565b906001600160681b038080931691168092038111612367570190565b6001600160681b03918216911681811061233f570390565b600180546cffffffffffffffffffffffffff60681b191660689290921b6cffffffffffffffffffffffffff60681b16919091179055565b61344a919261339381837f00000000000000000000000000000000000000000000000000000000000000006135c3565b61339b612373565b6001600160a01b0384166000908152600560205260409020613455906133c5906122df565b6122df565b8051600c0b9061344f6133f56133ee6133e96133e086614a35565b612ba789614c23565b614acc565b8094613534565b97906134316134158a6134106001546001600160681b031690565b6132f8565b6001600160681b03166001600160681b03196001541617600155565b60015460681c6001600160681b0316613314565b613314565b61332c565b86613087565b6040519081526001600160a01b0393841693849216907fd1cf3d156d5f8f0d50f6c122ed609cec09d35c9b9fb3fff6ea0959134dae424e90602090a36001600160681b0381166134a3575050565b600080516020614c898339815191526134e16134d16000936134cc85546001600160401b031690565b614aa7565b6040519081529081906020820190565b0390a3565b600c91820b910b6000821280156c7fffffffffffffffffffffffff198401831216613527575b826c7fffffffffffffffffffffffff0182131661233f570390565b61352f611ba0565b61350c565b91909180600c0b83600c0b8181126135a157600012613567575061355891926134e6565b6001600160681b031690600090565b6000136135885761357891926134e6565b6001600160681b03169060009190565b6135919061305b565b6001600160681b03908116921690565b5050509050600090600090565b90816020910312610596575161095b81610ccb565b6040516323b872dd60e01b81526001600160a01b039283166004820152306024820152604481019390935260209183916064918391600091165af1908115613646575b600091613628575b501561361657565b60405163073d1efd60e51b8152600490fd5b613640915060203d811161147d576114758183611af9565b3861360e565b61364e6128f7565b613606565b90604051604081018181106001600160401b03821117611ae35760405291546001600160801b038116835260801c6020830152565b906001600160801b038080931691168092038111612367570190565b906001600160801b03166001600160801b0319825416179055565b9060206001600160801b03916136d883825116856136a4565b0151908254916001600160801b03199060801b169116179055565b919290926001600160801b039061370d82841685836135c3565b61371681612230565b9061373b6137368260018060a01b03166000526002602052604060002090565b613653565b926137666137598661375487516001600160801b031690565b613688565b6001600160801b03168552565b83516001600160801b03169061378961198c60e08601516001600160801b031690565b91161161388557613855613830856138809461384f7ffa56f7b24f17183d81894d3ac2ee654e3c26388d17a28dbd9549b8114304e1f49761384a876137ee8e61380c613805612d7c856137ee8560018060a01b03166000526006602052604060002090565b9060018060a01b0316600052602052604060002090565b9889613688565b98899561382b8560018060a01b03166000526002602052604060002090565b6136bf565b6001600160a01b0316600090815260066020526040902090565b6136a4565b89613897565b6040516001600160801b0390941684526001600160a01b039081169581169416929081906020820190565b0390a4565b604051637ac7b99d60e11b8152600490fd5b909290916001600160801b03908116158080613990575b15613916575050506138ee6138d260ff610bfc945116600160ff61ffff92161b1690565b6001600160a01b03909216600090815260056020526040902090565b805461ffff60e81b19811660e891821c61ffff16909317901b61ffff60e81b16919091179055565b159182613985575b5050613928575050565b61ffff61396161394760ff610bfc955116600160ff61ffff92161b1690565b199260018060a01b03166000526005602052604060002090565b91825460e81c161681549061ffff60e81b9060e81b169061ffff60e81b1916179055565b16159050388061391e565b5081831615156138ae565b93929093600260015460f81c16611a16576132896139b991866149ed565b610e50576001600160a01b0384811683821614613a3157807f00000000000000000000000000000000000000000000000000000000000000001690821614600014613a1d5750610bfc926000198303613a54579150613a1782614908565b91613a54565b90613a2b610bfc9493614bc8565b92613d32565b60405163e397a99b60e01b8152600490fd5b600160ff1b811461307a5760000390565b919091613a5f612373565b6001600160a01b0381166000908152600560205260409020613a80906122df565b6001600160a01b0384166000908152600560205260409020613aa1906122df565b928151613aae90600c0b90565b938051613abb90600c0b90565b92613ac586614a35565b613ace84614c23565b613ad791612a55565b92613ae185614a35565b90613aeb90614c23565b613af491612a8c565b90613afe84614acc565b613b088193614acc565b978893613b1491613ccd565b98613b1f9197613534565b98878a600154613b35906001600160681b031690565b90613b3f916132f8565b90613b4991613314565b613b69906001600160681b03166001600160681b03196001541617600155565b60015460681c6001600160681b031690613b82916132f8565b90613b8c91613314565b613b959061332c565b613b9f9187613087565b613ba99187613087565b60008112613c64575b506001600160681b0391828216613c15575b50508116613bd0575050565b600080516020614c898339815191526134e1613bf96000936134cc85546001600160401b031690565b6040519081526001600160a01b03909416939081906020820190565b600080516020614c89833981519152613c5a613c3e6000946134cc86546001600160401b031690565b6040519081526001600160a01b03909316929081906020820190565b0390a33880613bc4565b613c6d90613a43565b7f000000000000000000000000000000000000000000000000000000000000000011613cbb57613c9f61328983612bf2565b613ca95738613bb2565b604051630a62fbdb60e11b8152600490fd5b604051637139da2360e11b8152600490fd5b919082600c0b81600c0b8181136135a157600013613cf0575061355891926134e6565b600012613d015761357891926134e6565b613d0a9061305b565b6001600160681b03928316921690565b6001600160801b03918216911681811061233f570390565b6001600160a01b0381811660008181526006602081815260408084208987168086529083528185205489881686529383528185209085529091529091205494969591946001600160801b039492939291908516908516613d928882613d1a565b91613d9d8982613688565b918387613dbc8760018060a01b03166000526006602052604060002090565b6001600160a01b0390911660009081526020919091526040902090613de0916136a4565b6001600160a01b038b81166000908152600660209081526040808320938b16835292905220613e109084906136a4565b613e1987612230565b93613e25918587613897565b613e2f928a613897565b613e3890612bf2565b15613ca957806020927f29db89d45e1a802b4d55e202984fce9faf1d30aedf86503ff1ea0ed9ebb64201946040519716875216951693a4565b93929093600460015460f81c16611a1657613289613e8f91866149ed565b610e50576001600160a01b038181167f000000000000000000000000000000000000000000000000000000000000000090911603613ee65750610bfc926000198303613efa579150613ee082614908565b91613efa565b90613ef4610bfc9493614bc8565b9261410e565b909161344a92613f08612373565b6001600160a01b0383166000908152600560205260409020613f29906122df565b613f93613f378251600c0b90565b613f4c613f4382614a35565b612ba187614c23565b9261344f613f63613f5c86614acc565b8094613ccd565b613f7f6134158361344560019e959e546001600160681b031690565b60015460681c6001600160681b03166132f8565b6000811261403f575b50613fc882827f0000000000000000000000000000000000000000000000000000000000000000614084565b6040519182526001600160a01b0392831692169082907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb90602090a36001600160681b038216614016575050565b600080516020614c898339815191526134e16134d16000946134cc86546001600160401b031690565b61404890613a43565b7f000000000000000000000000000000000000000000000000000000000000000011613cbb5761407a61328984612bf2565b613ca95738613f9c565b60405163a9059cbb60e01b81526001600160a01b039283166004820152602481019390935260209183916044918391600091165af1908115614101575b6000916140e3575b50156140d157565b60405163cefaffeb60e01b8152600490fd5b6140fb915060203d811161147d576114758183611af9565b386140c9565b6141096128f7565b6140c1565b909260018060a01b0391828116928360005260066020526141c76001600160801b0392610b5f846141558960406000209060018060a01b0316600052602052604060002090565b54166141618782613d1a565b906141946141818b60018060a01b03166000526002602052604060002090565b61418e8a8a835416613d1a565b906136a4565b6141b88261384a8c6137ee8860018060a01b03166000526006602052604060002090565b6141c18a612230565b84613897565b15613ca957806020927fd6d480d5b3068db003533b170d67561494d72e3bf9fa40a266471351ebba9e169416956141ff878983614084565b60405196875216951693a4565b919081101561421c5760051b0190565b634e487b7160e01b600052603260045260246000fd5b3561095b81610585565b90604051608081016001600160401b0382821081831117611ae3576060916040528294549063ffffffff821684528160201c1660208401526001600160801b0381831c16604084015260e01c910152565b60019063ffffffff809116908114612367570190565b9291909260016008815460f81c16611a16575a946142bf612373565b60005b8481106143fb5750505061439b9061438161435b6143566142e8610bfc97985a9061262c565b61434f61433661431261430d8860018060a01b03166000526007602052604060002090565b61423c565b986124d161432c6143278c5163ffffffff1690565b61428d565b63ffffffff168b52565b61316f60208a01916124e183516001600160401b031690565b4890611bfa565b614bc8565b614374604086019161375483516001600160801b031690565b6001600160801b03169052565b6001600160a01b0316600090815260076020526040902090565b815160208084015160408501516060958601516001600160e01b031960e09190911b166fffffffffffffffffffffffffffffffff60601b9190961b1663ffffffff9093166bffffffffffffffff000000009190921b161717919091179055565b8061441961441361440e8694898761420c565b614232565b8661441f565b016142c2565b9161442c61328983612e12565b6147da57906144506133c08260018060a01b03166000526005602052604060002090565b9061445c8251600c0b90565b9361446685614a35565b926060906144788282015161ffff1690565b6144a17f0000000000000000000000000000000000000000000000000000000000000000612904565b96600092839860ff9a8b7f0000000000000000000000000000000000000000000000000000000000000000169a5b8c8116908c82101561462c57908d91898c8c61ffff600180961b8c16166144fb575b50505001166144cf565b90919a61450784611c2c565b6020818101516001600160a01b0386811660009081526006845260408082209290931680825291845282812080546001600160801b03198116909155600290945291909120805493946001600160801b03938416949293909261456c91869116613d1a565b614575916136a4565b604084810151909f906001600160a01b031661459090612904565b908501516001600160401b03166145b0916001600160801b038616612f53565b60c094909401516145ca906001600160401b031685612f15565b6145d391612620565b9d516001600160801b0392909216825260208201929092526001600160a01b0391821693821692909116907f9850ab1af75177e4a9201c65a2cf7976d5d28e40ef63494b44366f86b2f9412e90604090a4898c8c6144f1565b505094979699509450969150975061468361467d612de4856146786001600160401b037f000000000000000000000000000000000000000000000000000000000000000016809a611bfa565b612850565b82612a8c565b91600083126147d1575b61469683614acc565b96876146a29187613087565b6001600160a01b03851660009081526005602052604090208790805461ffff60e81b191690556146d191613534565b6001546001600160681b0316906146e7916132f8565b614707906001600160681b03166001600160681b03196001541617600155565b60015460681c6001600160681b03169061472091613314565b6147299061332c565b61473291612a55565b61473b90614c6f565b926147469184612f53565b6040805193845260208401919091526001600160a01b039182169485939216917f1547a878dc89ad3c367b6338b4be6a65a5dd74fb77ae044da1e8747ef1f4f62f9190a380600c0b600012614799575050565b600080516020614c898339815191526134e16134d16000936147cb6147c586546001600160401b031690565b91614c46565b90614aa7565b6000925061468d565b604051636ef5bcdd60e11b8152600490fd5b906148b16147fc61095b93612230565b61487c60606148a761481960018060a01b03604086015116612904565b6001600160401b039384918260c08801511661486b670de0b6b3a76400009482869384106148fb575b8303167f0000000000000000000000000000000000000000000000000000000000000000611bfa565b048084106148ee575b830390611bfa565b04956132627f0000000000000000000000000000000000000000000000000000000000000000612904565b9201511690611bfa565b9080156148e1575b7f00000000000000000000000000000000000000000000000000000000000000009104612850565b6148e9611b89565b6148b9565b6148f6611ba0565b614874565b614903611ba0565b614842565b61492b6149136122b4565b6106b164ffffffffff918260015460d01c1690612329565b506001600160a01b03909116600090815260056020526040812054600c0b91908083131561496057506147cb61095b92614c46565b91505090565b6149716149136122b4565b6001600160a01b03909216600090815260056020526040812054600c0b9291508083121561496057506147cb6149a961095b9361305b565b614c46565b50600036818037808036817f00000000000000000000000000000000000000000000000000000000000000005af43d82803e156149e9573d90f35b3d90fd5b6001600160a01b03808316911690811491908215614a0a57505090565b60009081526003602090815260408083206001600160a01b0390941683529290522060ff9150541690565b6000600c82900b12614a715766038d7ea4c68000614a6b61095b926001600160401b0360005416906001600160681b0316611bfa565b04614c23565b614aa2612de461095b92614a936001600160401b0360005460401c169161305b565b6001600160681b031690614aa7565b613a43565b66038d7ea4c68000916001600160681b036001600160401b0361286293169116611bfa565b60008112614b0f57614afd61095b91614af06001600160401b036000541691611bb7565b8115614b02575b04614ba2565b614bee565b614b0a611b89565b614af7565b614b5d614afd614b39614b4361095b94614b3e6001600160401b0360005460401c16938492613a43565b611bb7565b612620565b60018110614b6f575b8115614b62575b6000190104614ba2565b61305b565b614b6a611b89565b614b53565b614b77611ba0565b614b4c565b6001600160401b0390818111614b90571690565b6040516372a1cb5160e11b8152600490fd5b6001600160681b0390818111614bb6571690565b604051630dc7925560e11b8152600490fd5b6001600160801b0390818111614bdc571690565b60405163762ea71160e11b8152600490fd5b6001600160681b03166c7fffffffffffffffffffffffff8111614c1157600c0b90565b604051639369ae3560e01b8152600490fd5b6001600160ff1b038111614c345790565b60405163e7e828ad60e01b8152600490fd5b600081600c0b12614c5d576001600160681b031690565b60405163363b64b760e11b8152600490fd5b60008112614c5d5790565b6000901561095b575060019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ebbb5992ff311ebfce549d45326cccce4311c56f7dbe1eccbf1a0389a5886b7364736f6c634300080f0033",
  "immutableReferences": {
    "11": [
      {
        "length": 32,
        "start": 1582
      },
      {
        "length": 32,
        "start": 3375
      },
      {
        "length": 32,
        "start": 5107
      },
      {
        "length": 32,
        "start": 6134
      }
    ],
    "15": [
      {
        "length": 32,
        "start": 2166
      },
      {
        "length": 32,
        "start": 3685
      }
    ],
    "19": [
      {
        "length": 32,
        "start": 2094
      },
      {
        "length": 32,
        "start": 4982
      },
      {
        "length": 32,
        "start": 5675
      },
      {
        "length": 32,
        "start": 6239
      },
      {
        "length": 32,
        "start": 6416
      },
      {
        "length": 32,
        "start": 11034
      },
      {
        "length": 32,
        "start": 12958
      },
      {
        "length": 32,
        "start": 13167
      },
      {
        "length": 32,
        "start": 14803
      },
      {
        "length": 32,
        "start": 16032
      },
      {
        "length": 32,
        "start": 16292
      }
    ],
    "23": [
      {
        "length": 32,
        "start": 6719
      },
      {
        "length": 32,
        "start": 11366
      },
      {
        "length": 32,
        "start": 17533
      },
      {
        "length": 32,
        "start": 18563
      }
    ],
    "27": [
      {
        "length": 32,
        "start": 3749
      },
      {
        "length": 32,
        "start": 18875
      }
    ],
    "31": [
      {
        "length": 32,
        "start": 4908
      },
      {
        "length": 32,
        "start": 9785
      }
    ],
    "35": [
      {
        "length": 32,
        "start": 3908
      },
      {
        "length": 32,
        "start": 9845
      },
      {
        "length": 32,
        "start": 9951
      }
    ],
    "39": [
      {
        "length": 32,
        "start": 4179
      },
      {
        "length": 32,
        "start": 9999
      }
    ],
    "43": [
      {
        "length": 32,
        "start": 4523
      },
      {
        "length": 32,
        "start": 9884
      }
    ],
    "47": [
      {
        "length": 32,
        "start": 4403
      },
      {
        "length": 32,
        "start": 10057
      }
    ],
    "51": [
      {
        "length": 32,
        "start": 2556
      },
      {
        "length": 32,
        "start": 10117
      },
      {
        "length": 32,
        "start": 10223
      }
    ],
    "55": [
      {
        "length": 32,
        "start": 2323
      },
      {
        "length": 32,
        "start": 10271
      }
    ],
    "59": [
      {
        "length": 32,
        "start": 4047
      },
      {
        "length": 32,
        "start": 10156
      }
    ],
    "63": [
      {
        "length": 32,
        "start": 1993
      },
      {
        "length": 32,
        "start": 18503
      }
    ],
    "67": [
      {
        "length": 32,
        "start": 3240
      },
      {
        "length": 32,
        "start": 11412
      },
      {
        "length": 32,
        "start": 12078
      },
      {
        "length": 32,
        "start": 18001
      },
      {
        "length": 32,
        "start": 18619
      }
    ],
    "71": [
      {
        "length": 32,
        "start": 5046
      },
      {
        "length": 32,
        "start": 12554
      }
    ],
    "75": [
      {
        "length": 32,
        "start": 1762
      },
      {
        "length": 32,
        "start": 9509
      }
    ],
    "79": [
      {
        "length": 32,
        "start": 4583
      },
      {
        "length": 32,
        "start": 9384
      }
    ],
    "83": [
      {
        "length": 32,
        "start": 4463
      },
      {
        "length": 32,
        "start": 9231
      }
    ],
    "87": [
      {
        "length": 32,
        "start": 2678
      },
      {
        "length": 32,
        "start": 15471
      },
      {
        "length": 32,
        "start": 16458
      }
    ],
    "91": [
      {
        "length": 32,
        "start": 2801
      },
      {
        "length": 32,
        "start": 6639
      }
    ],
    "95": [
      {
        "length": 32,
        "start": 2740
      }
    ],
    "99": [
      {
        "length": 32,
        "start": 4847
      },
      {
        "length": 32,
        "start": 7229
      },
      {
        "length": 32,
        "start": 8771
      },
      {
        "length": 32,
        "start": 11459
      },
      {
        "length": 32,
        "start": 11890
      },
      {
        "length": 32,
        "start": 17581
      }
    ],
    "102": [
      {
        "length": 32,
        "start": 12593
      }
    ],
    "105": [
      {
        "length": 32,
        "start": 7309
      }
    ],
    "107": [
      {
        "length": 32,
        "start": 7276
      }
    ],
    "109": [
      {
        "length": 32,
        "start": 7642
      }
    ],
    "111": [
      {
        "length": 32,
        "start": 7609
      }
    ],
    "113": [
      {
        "length": 32,
        "start": 7722
      }
    ],
    "115": [
      {
        "length": 32,
        "start": 7689
      }
    ],
    "117": [
      {
        "length": 32,
        "start": 7802
      }
    ],
    "119": [
      {
        "length": 32,
        "start": 7769
      }
    ],
    "121": [
      {
        "length": 32,
        "start": 7882
      }
    ],
    "123": [
      {
        "length": 32,
        "start": 7849
      }
    ],
    "125": [
      {
        "length": 32,
        "start": 7962
      }
    ],
    "127": [
      {
        "length": 32,
        "start": 7929
      }
    ],
    "129": [
      {
        "length": 32,
        "start": 8042
      }
    ],
    "131": [
      {
        "length": 32,
        "start": 8009
      }
    ],
    "133": [
      {
        "length": 32,
        "start": 8122
      }
    ],
    "135": [
      {
        "length": 32,
        "start": 8089
      }
    ],
    "137": [
      {
        "length": 32,
        "start": 8202
      }
    ],
    "139": [
      {
        "length": 32,
        "start": 8169
      }
    ],
    "141": [
      {
        "length": 32,
        "start": 8282
      }
    ],
    "143": [
      {
        "length": 32,
        "start": 8249
      }
    ],
    "145": [
      {
        "length": 32,
        "start": 8362
      }
    ],
    "147": [
      {
        "length": 32,
        "start": 8329
      }
    ],
    "149": [
      {
        "length": 32,
        "start": 8442
      }
    ],
    "151": [
      {
        "length": 32,
        "start": 8409
      }
    ],
    "153": [
      {
        "length": 32,
        "start": 8522
      }
    ],
    "155": [
      {
        "length": 32,
        "start": 8489
      }
    ],
    "157": [
      {
        "length": 32,
        "start": 8602
      }
    ],
    "159": [
      {
        "length": 32,
        "start": 8569
      }
    ],
    "161": [
      {
        "length": 32,
        "start": 8680
      }
    ],
    "163": [
      {
        "length": 32,
        "start": 8647
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "213:424:68:-:0;;;;;;252:57;213:424;;:::i;:::-;252:57;:::io;:::-;;;:::i;:::-;;;:::o;:::-;;;;;-1:-1:-1;;213:424:68;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;213:424:68;;;;;;:::o;:::-;;;-1:-1:-1;;;;;213:424:68;;;;;;:::o;:::-;;;-1:-1:-1;;;;;213:424:68;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;1789:3:2;;;;;;;:::o;:::-;213:424:68;;;1789:3:2;;;;;;;;5536:3606:0;5636:16;;;;213:424:68;;5636:16:0;;;;5630:32;;:23;;-1:-1:-1;;;;;213:424:68;5630:23:0;213:424:68;;-1:-1:-1;;;;;213:424:68;;;5630:32:0;213:424:68;;;;;;;;;;5630:34:0;;;;;;;;;;;;;;;;;;;5536:3606;5630:34;;;;5536:3606;213:424:68;;;;5678:29:0;999:2:2;5678:29:0;;5674:55;;5743:28;;;;999:2:2;;5743:28:0;;;;-1:-1:-1;;;;;213:424:68;5743:28:0;;;2135:4:2;213:424:68;;;5743:43:0;5739:69;;5822:19;;;;;;829:2:2;5822:19:0;;2135:4:2;5822:39:0;5818:67;;5899:24;;;;829:2:2;;5899:24:0;;;;;;-1:-1:-1;;;;;213:424:68;5899:29:0;5895:54;;5974:25;1566:1:2;213:424:68;5974:25:0;;;;;;;;;;213:424:68;5963:46:0;:37;213:424:68;;;;;;;;;;;5963:46:0;213:424:68;;5963:48:0;;;;;;;;;;;;;5536:3606;5630:34;5963:48;;;5536:3606;213:424:68;;5963:71:0;5959:97;;213:424:68;;;;;;;;;;;;;;;;;;;6121:26:0;;6177:20;213:424:68;-1:-1:-1;;;;;213:424:68;;;;6161:36:0;;213:424:68;-1:-1:-1;;;;;213:424:68;;;;6211:28:0;;213:424:68;-1:-1:-1;;;;;213:424:68;;;;;6253:46:0;6121:26;6333:24;;213:424:68;-1:-1:-1;;;;;213:424:68;6313:44:0;;;;999:2:2;;6371:52:0;;-1:-1:-1;;;;;213:424:68;999:2:2;-1:-1:-1;;;;;213:424:68;;;6371:52:0;;;6438:20;;6491:2;1566:1:2;213:424:68;6472:35:0;;;;;;6542:25;;1789:3:2;6521:46:0;999:2:2;6542:25:0;;;999:2:2;213:424:68;;;;;;;;6521:46:0;;;;;;6585:30;6581:56;;-1:-1:-1;;1566:1:2;;213:424:68;1789:3:2;;6651:53:0;;829:2:2;-1:-1:-1;;;;;213:424:68;;;6719:44:0;;6803:30;;;;999:2:2;-1:-1:-1;;;;;213:424:68;;;6777:56:0;;;6873:30;;;;999:2:2;213:424:68;;6847:56:0;;6934:20;;;829:2:2;213:424:68;;6918:36:0;;6985:21;;;829:2:2;213:424:68;6968:38:0;;-1:-1:-1;7107:17:0;;999:2:2;213:424:68;;7094:30:0;;;;6211:28;7176:40;;999:2:2;213:424:68;;;;1677:10:2;;;213:424:68;;7138:97:0;;;;213:424:68;7288:41:0;;999:2:2;213:424:68;;1677:10:2;;;213:424:68;;-1:-1:-1;7249:99:0;;;7396:36;;;999:2:2;213:424:68;;1677:10:2;;;213:424:68;;-1:-1:-1;7362:89:0;;;7478:17;;;999:2:2;213:424:68;;7465:30:0;;;7547:40;;;999:2:2;213:424:68;;1677:10:2;;;213:424:68;;7509:97:0;;;7659:41;;;999:2:2;213:424:68;;1677:10:2;;;213:424:68;;7620:99:0;;;7767:36;;;999:2:2;213:424:68;;1677:10:2;;;;213:424:68;7733:89:0;;7887:19;;2135:4:2;213:424:68;;7869:45:0;;7973:19;;7950:46;;;:::i;:::-;7925:71;;;;8054:19;;8031:46;;;:::i;:::-;8006:71;;;;8135:19;;8112:46;;;:::i;:::-;8087:71;;;;8216:19;;8193:46;;;:::i;:::-;8168:71;;;;8297:19;;8274:46;;;:::i;:::-;8249:71;;;;8378:19;;8355:46;;;:::i;:::-;8330:71;;;;8459:19;;8436:46;;;:::i;:::-;8411:71;;;;8540:19;;8517:46;;;:::i;:::-;8492:71;;;;8621:19;;8598:46;;;:::i;:::-;8573:71;;;;8702:19;;8679:46;;;:::i;:::-;8654:71;;;;8783:19;;8760:47;;;:::i;:::-;8735:72;;;;8865:19;;8842:47;;;:::i;:::-;8817:72;;;;8947:19;;8924:47;;;:::i;:::-;8899:72;;;;9029:19;;9006:47;;;:::i;:::-;8981:72;;;;9111:19;9088:47;;;:::i;:::-;9063:72;;;;5536:3606::o;6581:56::-;213:424:68;-1:-1:-1;;;6624:13:0;;;5959:97;213:424:68;;-1:-1:-1;;;6043:13:0;;213:424:68;;6043:13:0;5963:48;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;5895:54;213:424:68;;-1:-1:-1;;;5937:12:0;;213:424:68;;5937:12:0;5818:67;213:424:68;;-1:-1:-1;;;5870:15:0;;213:424:68;;5870:15:0;5739:69;213:424:68;;-1:-1:-1;;;5795:13:0;;213:424:68;;5795:13:0;5674:55;213:424:68;;-1:-1:-1;;;5716:13:0;;213:424:68;;5716:13:0;5630:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;213:424:68;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;-1:-1:-1;213:424:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;9777:2323:0;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;9947:23:0;9951:19;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;10217:21:0;;;;213:424:68;-1:-1:-1;;;;;213:424:68;10266:20:0;;;213:424:68;10266:20:0;;;213:424:68;;;;;;;-1:-1:-1;;;;;213:424:68;;;;10342:19:0;;10338:63;;213:424:68;;;;;;;;10469:32:0;;;1566:1:2;213:424:68;10469:32:0;;;;;;;;;;;;;;9943:202;-1:-1:-1;10469:32:0;;;9943:202;213:424:68;;10469:55:0;10465:81;;213:424:68;;;;;10560:23:0;;;;;;;;;;;;;;;9943:202;-1:-1:-1;10560:23:0;;;9943:202;213:424:68;;;;;;;;;10560:36:0;10556:62;;10687:34;;;999:2:2;;10687:34:0;;;-1:-1:-1;;;;;213:424:68;999:2:2;10725:37:0;;;999:2:2;;10725:37:0;;;;10687:75;;-1:-1:-1;;;;;213:424:68;999:2:2;213:424:68;10687:75:0;-1:-1:-1;;;;;213:424:68;;;10687:75:0;;10683:106;;999:2:2;;2135:4;213:424:68;;-1:-1:-1;;;;;213:424:68;10803:61:0;10799:95;;999:2:2;11158:55:0;;11165:47;;999:2:2;;11057:52:0;;11165:47;;-1:-1:-1;;;;;213:424:68;999:2:2;213:424:68;999:2:2;1677:10;-1:-1:-1;;;;;213:424:68;;;1677:10:2;;;11064:44:0;1112:12:2;;;;11057:52:0;999:2:2;;-1:-1:-1;;;;;213:424:68;;;11158:55:0;213:424:68;11261:29:0;;999:2:2;11261:29:0;;;11254:47;;11261:39;;-1:-1:-1;;;;;213:424:68;999:2:2;213:424:68;11254:47:0;1112:12:2;;;;;;;;11392:51:0;;11388:82;;-1:-1:-1;;11567:21:0;;1112:12:2;11560:49:0;;11567:41;;11592:2;1566:1:2;;;;;-1:-1:-1;;;;;213:424:68;11567:41:0;:::i;11560:49::-;1112:12:2;;;;-1:-1:-1;;;1112:12:2;11642:90:0;;;;1112:12:2;;;;;-1:-1:-1;;;1112:12:2;11642:164:0;;;;1112:12:2;;;;;-1:-1:-1;;;1112:12:2;11642:230:0;;;;;1112:12:2;;;;-1:-1:-1;;;1112:12:2;11905:81:0;1112:12:2;;;;;-1:-1:-1;;;;;;;1112:12:2;11905:139:0;;9777:2323::o;11388:82::-;213:424:68;-1:-1:-1;;;11452:18:0;;;10799:95;213:424:68;;-1:-1:-1;;;10873:21:0;;213:424:68;;10873:21:0;10683:106;213:424:68;;-1:-1:-1;;;10771:18:0;;213:424:68;;10771:18:0;10556:62;213:424:68;;-1:-1:-1;;;10605:13:0;;213:424:68;;10605:13:0;10560:23;;;;;;-1:-1:-1;10560:23:0;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;10465:81;213:424:68;;-1:-1:-1;;;10533:13:0;;213:424:68;;10533:13:0;10469:32;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;10338:63;10377:13;;;;;;;;-1:-1:-1;10377:13:0;-1:-1:-1;10377:13:0;:::o;9943:202::-;10121:13;-1:-1:-1;10121:13:0;-1:-1:-1;10121:13:0;:::o;9777:2323::-;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;8075:1:0;9947:23;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;;9777:2323:0;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;8156:1:0;9947:23;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;;9777:2323:0;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;8237:1:0;9947:23;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;;9777:2323:0;;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;5630:34:0;;2135:4:2;9947:23:0;;2135:4:2;;;9986:105:0;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;10217:21:0;;;;213:424:68;10217:21:0;;;;-1:-1:-1;;;;;213:424:68;10266:20:0;;;213:424:68;10266:20:0;;;213:424:68;;;;;;;-1:-1:-1;;;;;213:424:68;;;;10342:19:0;;10338:63;;213:424:68;;;;1566:1:2;213:424:68;;;;10469:32:0;;;;;;;;;;;;;;;;-1:-1:-1;10469:32:0;;;213:424:68;;10469:55:0;10465:81;;213:424:68;;;;;10560:23:0;;;;;;;;;;;;;;;-1:-1:-1;10560:23:0;;;213:424:68;;;;;;;;;10560:36:0;10556:62;;10687:34;;;999:2:2;;10687:34:0;;;-1:-1:-1;;;;;213:424:68;999:2:2;213:424:68;10338:63:0;10377:13;;;;;;;;;-1:-1:-1;10377:13:0;-1:-1:-1;10377:13:0;:::o;9943:202::-;-1:-1:-1;;;;;;10121:13:0:o;9777:2323::-;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;8399:1:0;9947:23;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;;9777:2323:0;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;8480:1:0;9947:23;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;;9777:2323:0;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;8561:1:0;9947:23;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;;9777:2323:0;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;1566:1;9947:23:0;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;;9777:2323:0;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;8723:1:0;9947:23;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;;9777:2323:0;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;6491:2:0;9947:23;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;;9777:2323:0;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;8886:2:0;9947:23;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;;9777:2323:0;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;8968:2:0;9947:23;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;;9777:2323:0;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;9050:2:0;9947:23;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;;9777:2323:0;213:424:68;;:::i;:::-;-1:-1:-1;2135:4:2;;9132:2:0;9947:23;9951:19;;;9986:105;;;213:424:68;;9986:105:0;;9943:202;-1:-1:-1;;;;;213:424:68;;",
  "deployedSourceMap": "213:424:68:-:0;;;;;;;;;-1:-1:-1;213:424:68;;:::i;:::-;-1:-1:-1;213:424:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;26420:10:0;213:424:68;;;;26420:46:0;1636:6:8;;213:424:68;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;398:42:0;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;1927:4:2;3215:43;51761:16:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;51738:58:0;51780:15;213:424:68;;51761:34:0;213:424:68;;;;;;;51761:34:0;;:::i;:::-;213:424:68;51738:58:0;:::i;:::-;213:424:68;;;;3215:43:2;:::i;:::-;213:424:68;;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;2938:54:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;625:3;213:424;;;;;;;;;;;;;;;;;;9326:15:0;213:424:68;;;;9322:53:0;;9419:34;9437:16;;:::i;:::-;9326:15;213:424:68;;-1:-1:-1;;;;213:424:68;;;;;;-1:-1:-1;;;213:424:68;;;;;;;;9419:34:0;1927:4:2;;-1:-1:-1;;;;;;1927:4:2;;;;;213:424:68;;;9322:53:0;213:424:68;;-1:-1:-1;;;9355:20:0;;213:424:68;;9355:20:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;2511:52:0;213:424:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;35340:6:0;213:424:68;;;:::i;:::-;35329:9:0;;;35307:10;;35340:6;:::i;:::-;213:424:68;;;35364:4:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;500:47:0;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;40818:6:0;213:424:68;;;:::i;:::-;40790:10:0;;;;;40818:6;:::i;213:424:68:-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;2152:67:0;213:424:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;:::o;:::-;-1:-1:-1;;;;;213:424:68;;;;;21451:9:0;213:424:68;;;;;;:::o;:::-;;;;;;2117:76:11;213:424:68;;;:::i;:::-;;;;;;;;-1:-1:-1;213:424:68;2117:76:11;213:424:68;;;-1:-1:-1;213:424:68;;;;;;;;;;;;;;;;;2117:76:11;213:424:68;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;1957:66:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;213:424:68;;;;;;-1:-1:-1;213:424:68;;;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;3504:44:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;3764:40:0;213:424:68;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;3650:45:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;31594:6:0;213:424:68;;;:::i;:::-;31558:10:0;;;31594:6;:::i;213:424:68:-;;;;;35727:6:0;213:424:68;;;:::i;:::-;35691:10:0;;;35727:6;:::i;213:424:68:-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;2663:40:0;213:424:68;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;25738:8:0;;213:424:68;25724:10:0;:22;;:53;;;;213:424:68;25720:80:0;;;26167:82;25860:21;26167:82;25860:21;25811:340;25860:44;:21;;;:::i;:::-;213:424:68;;;;25860:44:0;25921:48;:23;;;:::i;:::-;213:424:68;1247:1:2;213:424:68;;;1247:1:2;25921:48:0;25836:134;25986:48;:23;;;:::i;:::-;213:424:68;1247:1:2;213:424:68;;;1247:1:2;25986:48:0;25836:199;26051:44;:21;;;:::i;:::-;213:424:68;1247:1:2;213:424:68;;;1247:1:2;26051:44:0;25836:260;26112:38;:18;;;:::i;:::-;213:424:68;1247:1:2;213:424:68;;;1247:1:2;26112:38:0;1302:1:2;1460;;-1:-1:-1;;;;;1460:1:2;25836:315:0;;;;1460:1:2;;-1:-1:-1;;;;;;1460:1:2;;;;;;;;25811:340:0;213:424:68;;26167:82:0;;;;1460:1:2;;;;;;;;;;;213:424:68;;;;;;;1460:1:2;;;213:424:68;;;1460:1:2;;;213:424:68;;;1460:1:2;;;213:424:68;;;1460:1:2;;213:424:68;1460:1:2;26167:82:0;;;;213:424:68;25720:80:0;213:424:68;;-1:-1:-1;;;25786:14:0;;213:424:68;;25786:14:0;25724:53;25764:13;;;213:424:68;25724:10:0;25750:27;;25724:53;;;213:424:68;;;;;;;-1:-1:-1;;213:424:68;;;;;;846:51:0;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;-1:-1:-1;213:424:68;;;1541:60:11;213:424:68;;;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;1221:66:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;1247:1:2;26866:10:0;213:424:68;;;26866:48:0;1636:6:8;;213:424:68;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;2308:62:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;1416:67:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;1927:4:2;3215:43;52162:16:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;52139:58:0;52181:15;213:424:68;;52162:34:0;213:424:68;;;;;;;52162:34:0;;:::i;52139:58::-;213:424:68;;;;;;;3215:43:2;:::i;213:424:68:-;;;;;;;-1:-1:-1;;213:424:68;;;;;1247:1:2;27086:10:0;213:424:68;;;27086:46:0;1636:6:8;;213:424:68;;;;;;;;;;;32039:6:0;213:424:68;;;:::i;:::-;32009:10:0;;;;;32039:6;:::i;213:424:68:-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;1787:41:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;3379:48:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;1572:62:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;3105:54:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;1703:61:11;213:424:68;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;1703:61:11;213:424:68;;;1703:61:11;213:424:68;;;;;;;;;;;;-1:-1:-1;213:424:68;;;;;;;1703:61:11;213:424:68;;;;;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;1247:1:2;26642:10:0;213:424:68;;;26642:48:0;1636:6:8;;213:424:68;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;3880:41:0;213:424:68;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;1051:41:0;213:424:68;;;;;;;;;;-1:-1:-1;;213:424:68;;;;34904:6:0;213:424:68;;;;;:::i;:::-;;;34893:9:0;;34864:10;;;34904:6;:::i;213:424:68:-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;2776:49:0;213:424:68;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;51367:8:0;213:424:68;;51353:10:0;:22;51349:49;;213:424:68;;-1:-1:-1;;;51409:37:0;;-1:-1:-1;;;;;213:424:68;;;;;51409:37:0;;213:424:68;;;;;;;;51409:37:0;;213:424:68;;;;;;-1:-1:-1;;213:424:68;51409:37:0;;;;;;213:424:68;51409:37:0;;213:424:68;51409:37:0;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;213:424:68;;;;;;;-1:-1:-1;;213:424:68;;;;17450:15:0;213:424:68;;;;;:::i;:::-;17266:207:0;;:::i;:::-;213:424:68;;;;;;;-1:-1:-1;213:424:68;17386:9:0;213:424:68;;;-1:-1:-1;213:424:68;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;2135:4:2;213:424:68;;;;;;;2135:4:2;213:424:68;;;;;;;;;;;;;;;;;;;;;2135:4:2;;213:424:68;;;;;17450:15:0;;:::i;213:424:68:-;;;;;36161:6:0;213:424:68;;;:::i;:::-;36132:10:0;;;;;36161:6;:::i;213:424:68:-;;;;;40391:6:0;213:424:68;;;:::i;:::-;40356:10:0;;;40391:6;:::i;213:424:68:-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;-1:-1:-1;213:424:68;;;486:16;213:424;;;;;;;-1:-1:-1;;213:424:68;528:16;213:424;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;609:43:0;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;213:424:68;2251:60:11;213:424:68;;;;-1:-1:-1;213:424:68;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;213:424:68;;;;;1247:1:2;27298:10:0;213:424:68;;;27298:43:0;1636:6:8;;213:424:68;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;213:424:68;1991:46:11;213:424:68;;;;-1:-1:-1;213:424:68;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;50546:8:0;213:424:68;;50532:10:0;:22;50528:49;;50603:13;;:::i;:::-;-1:-1:-1;50630:12:0;;:46;;;;;213:424:68;50626:81:0;;;50732:9;50747:6;50732:9;50770:28;50732:9;;50747:6;:::i;:::-;213:424:68;;;;;;;;;50770:28:0;213:424:68;50626:81:0;213:424:68;;-1:-1:-1;;;50685:22:0;;213:424:68;;50685:22:0;50630:46;50655:21;;;;:::i;:::-;50646:30;;50630:46;;;213:424:68;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;1247:1:2;27298:10:0;213:424:68;;;27298:43:0;47897:34;;47957:13;;:::i;:::-;-1:-1:-1;47984:13:0;;;:49;;;;213:424:68;47980:74:0;;;48196:10;48184;;48173:9;48196:10;:::i;:::-;48242:34;;;;:::i;:::-;213:424:68;;;48290:28:0;;48286:58;;48377:28;;;:::i;:::-;48358:47;;48354:82;;48856:62;48814:25;48782:58;48856:62;48814:25;48782:58;48814:25;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;48782:58:0;;;;:::i;:::-;213:424:68;;;;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;48184:10:0;;213:424:68;;;;;;;48856:62:0;;;;213:424:68;48286:58:0;213:424:68;;-1:-1:-1;;;48327:17:0;;213:424:68;;48327:17:0;47980:74;213:424:68;;-1:-1:-1;;;48042:12:0;;213:424:68;;48042:12:0;47984:49;48019:14;;;-1:-1:-1;48001:32:0;47984:49;;;47897:34;213:424:68;;-1:-1:-1;;;47923:8:0;;213:424:68;;47923:8:0;213:424:68;;;;;;;-1:-1:-1;;213:424:68;;;;;;724:52:0;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;31223:6:0;213:424:68;;;;;:::i;:::-;;;31180:10:0;;;;31223:6;:::i;213:424:68:-;;;;;;;-1:-1:-1;;213:424:68;;;;40030:6:0;213:424:68;;;;;:::i;:::-;;;39987:10:0;;;;40030:6;:::i;213:424:68:-;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;-1:-1:-1;213:424:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2135:4:2:-;;213:424:68;;;2135:4:2;;;;;;;;;;213:424:68;;;2135:4:2;;;;;;;;;213:424:68;2135:4:2;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;213:424:68;2135:4:2;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;213:424:68;;2135:4:2;;;;;;;;;:::o;:::-;;;:::i;:::-;;;12304:2669:0;213:424:68;;:::i;:::-;;;;;;12402:9:0;213:424:68;12397:14:0;;;12393:37;;12494:6;;;-1:-1:-1;12557:9:0;12525;12490:1440;213:424:68;;;;;14095:34:0;14094:46;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;14194:34:0;14193:46;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;14285:34:0;14284:46;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;;14441:33:0;14508:15;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;14562:44:0;-1:-1:-1;;;;;213:424:68;;;;;;;;14563:34:0;14562:44;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;:::i;:::-;;;;;2135:4:2;;-1:-1:-1;;;;;13972:26:0;;;14625:341;;;2135:4:2;14378:26:0;-1:-1:-1;;;;;213:424:68;14625:341:0;;;2135:4:2;-1:-1:-1;;;;;213:424:68;14625:341:0;;;2135:4:2;-1:-1:-1;;;;;213:424:68;14625:341:0;;;2135:4:2;-1:-1:-1;;;;;213:424:68;;14625:341:0;;2135:4:2;-1:-1:-1;;;;;213:424:68;;14625:341:0;;2135:4:2;-1:-1:-1;;;;;213:424:68;14625:341:0;;;2135:4:2;213:424:68;:::o;12490:1440:0:-;12592:1;12587:6;;12592:1;;-1:-1:-1;12650:9:0;12618;12490:1440;;12583:1347;12685:1;12680:6;;12685:1;;-1:-1:-1;12743:9:0;12711;12490:1440;;12676:1254;12778:1;12773:6;;12778:1;;-1:-1:-1;12836:9:0;12804;12490:1440;;12769:1161;12871:1;12866:6;;12871:1;;-1:-1:-1;12929:9:0;12897;12490:1440;;12862:1068;12964:1;12959:6;;12964:1;;-1:-1:-1;13022:9:0;12990;12490:1440;;12955:975;13057:1;13052:6;;13057:1;;-1:-1:-1;13115:9:0;13083;12490:1440;;13048:882;13150:1;13145:6;;13150:1;;-1:-1:-1;13208:9:0;13176;12490:1440;;13141:789;13243:1;13238:6;;13243:1;;-1:-1:-1;13301:9:0;13269;12490:1440;;13234:696;13336:1;13331:6;;13336:1;;-1:-1:-1;13394:9:0;13362;12490:1440;;13327:603;13429:2;13424:7;;13429:2;;-1:-1:-1;13488:9:0;13456;12490:1440;;13420:510;13523:2;13518:7;;13523:2;;-1:-1:-1;13582:9:0;13550;12490:1440;;13514:416;13617:2;13612:7;;13617:2;;-1:-1:-1;13676:9:0;13644;12490:1440;;13608:322;13711:2;13706:7;;13711:2;;-1:-1:-1;13770:9:0;13738;12490:1440;;13702:228;13805:2;13800:7;13805:2;;13864:9;13832;12490:1440;;13796:134;213:424:68;;-1:-1:-1;;;13911:8:0;;12871:1;;13911:8;12393:37;213:424:68;;-1:-1:-1;;;12420:10:0;;;;;15059:364;;213:424:68;;:::i;:::-;15168:11:0;15178:1;213:424:68;;15185:9:0;;;213:424:68;15163:227:0;15181:13;213:424:68;;;;15181:13:0;;;213:424:68;;-1:-1:-1;;;15406:10:0;;;;;15168:11;15241:15;;;:::i;:::-;15274;;;213:424:68;-1:-1:-1;;;;;213:424:68;;;;;15274:24:0;15270:79;;-1:-1:-1;213:424:68;;;;15168:11:0;;15270:79;15318:16;;;;;;;:::o;15483:178::-;15581:5;15562:15;:24;;15558:56;;213:424:68;15562:15:0;213:424:68;15483:178:0;:::o;15558:56::-;213:424:68;;-1:-1:-1;;;15595:19:0;;;;;213:424:68;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;2135:4:2;213:424:68;;;;;;;2135:4:2;213:424:68;;;;;;;;;;;;;2135:4:2;213:424:68:o;:::-;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;16510:675:0:-;16569:16;;:::i;:::-;16614:31;16622:22;213:424:68;16629:15:0;213:424:68;;;;;;;;;16622:22:0;;:::i;:::-;213:424:68;;;;16614:31:0;16659:15;;16655:524;;16510:675;;:::o;16655:524::-;16727:35;16690:72;;16727:35;17146:22;16727:35;;:::i;:::-;16690:72;;;-1:-1:-1;;;16673:1:0;1927:4:2;;;;;;-1:-1:-1;;;1927:4:2;;;16673:1:0;1927:4:2;;16690:72:0;-1:-1:-1;;;;;213:424:68;-1:-1:-1;;;;;1927:4:2;16673:1:0;1927:4:2;;;16673:1:0;1927:4:2;;16690:72:0;16629:15;213:424:68;16799:17:0;;;-1:-1:-1;;;;;213:424:68;16780:36:0;;;;16776:172;;16655:524;-1:-1:-1;16629:15:0;213:424:68;16965:36:0;;213:424:68;;-1:-1:-1;;;;;213:424:68;;-1:-1:-1;;;;;213:424:68;;;16965:36:0;;;;;16961:172;;16655:524;-1:-1:-1;;9326:15:0;213:424:68;;-1:-1:-1;;;;213:424:68;;;;;;-1:-1:-1;;;213:424:68;;;;;;;;16961:172:0;17044:74;17051:66;17021:97;17062:23;:37;17021:97;17062:23;;:37;:::i;:::-;17051:66;:::i;:::-;17044:74;:::i;:::-;16673:1;213:424:68;;;17021:97:0;:::i;213:424:68:-;17021:97:0;:::i;:::-;16673:1;213:424:68;;-1:-1:-1;;;;;213:424:68;;;;;;-1:-1:-1;;;;;;213:424:68;;;;;;;;17021:97:0;16961:172;;;;16776;16836:97;16859:74;16866:66;16836:97;16877:23;:37;:23;;:37;:::i;16859:74::-;16673:1;213:424:68;;;-1:-1:-1;;;;;213:424:68;17021:97:0;:::i;16836:::-;16673:1;213:424:68;;-1:-1:-1;;;;213:424:68;;;;;;-1:-1:-1;;;213:424:68;;;;;;;;16836:97:0;16776:172;;;15765:647;;15890:15;213:424:68;-1:-1:-1;;;;;213:424:68;;;;;;;;;15970:15:0;;15966:387;;15765:647;16362:43;;;15765:647;:::o;15966:387::-;16020:16;27499:10;16316:24;16068:26;16020:16;;16166:81;16261;16020:16;16186:61;16020:16;16126:26;16281:61;16020:16;;;:::i;:::-;16068:26;;;:::i;:::-;213:424:68;16126:26:0;;:::i;:::-;213:424:68;2135:4:2;27499:10:0;16221:24;2135:4:2;16221:24:0;;;;:::i;:::-;27499:10;;:::i;:::-;213:424:68;16186:61:0;:::i;:::-;16166:81;;:::i;:::-;16316:24;;:::i;16261:81::-;15966:387;;;;;213:424:68;;;;;;;;;:::o;:::-;;;;;;;;:::o;17674:653:0:-;17782:10;17767:25;;;;;17935:35;17891:93;2135:4:2;27499:10:0;17884:101;17935:35;;27499:10;:::i;:::-;213:424:68;17891:31:0;:93;:::i;17763:558::-;18132:178;2135:4:2;18139:170:0;2135:4:2;27499:10:0;2135:4:2;18183:35:0;18139:92;18183:35;27499:10;18183:35;;27499:10;:::i;18139:92::-;213:424:68;;;;;;17763:558:0;213:424:68;18244:36:0;27499:10;:::i;:::-;213:424:68;18139:170:0;;:::i;213:424:68:-;;;:::i;:::-;;;18528:653:0;18636:10;18621:25;;;;;18789:35;18745:93;2135:4:2;27499:10:0;18738:101;18789:35;;27499:10;:::i;:::-;213:424:68;18745:31:0;:93;:::i;18617:558::-;18986:178;2135:4:2;18993:170:0;2135:4:2;27499:10:0;2135:4:2;19037:35:0;18993:92;19037:35;27499:10;19037:35;;27499:10;:::i;18993:92::-;213:424:68;;;;;;18617:558:0;213:424:68;19098:36:0;27499:10;:::i;213:424:68:-;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;19306:378:0:-;19417:15;213:424:68;19434:15:0;213:424:68;3215:43:2;1927:4;213:424:68;-1:-1:-1;;;;;;;;;;213:424:68;;3215:43:2;213:424:68;;;;;;3215:43:2;:::i;:::-;213:424:68;;;;;;;;;3215:43:2;:::i;:::-;213:424:68;19546:17:0;;;19579:8;;19417:15;19579:8;:::o;19542:136::-;213:424:68;2135:4:2;;;;;;;;;;;;;;213:424:68;19618:49:0;:::o;2135:4:2:-;;;:::i;:::-;;213:424:68;19618:49:0;:::o;213:424:68:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;19857:228:0;213:424:68;;-1:-1:-1;;;19965:39:0;;213:424:68;19965:39:0;;213:424:68;;19965:39:0;;213:424:68;;-1:-1:-1;;;;;213:424:68;19965:39:0;;;;;;;19857:228;19965:39;;;;19857:228;20018:10;19965:39;20018:10;;;20014:33;;19857:228;:::o;20014:33::-;213:424:68;;-1:-1:-1;;;20037:10:0;;19965:39;;20037:10;19965:39;;;;;;;;;;;;;;;;:::i;:::-;;;213:424:68;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;19965:39:0;;;;;;-1:-1:-1;19965:39:0;;;;;:::i;:::-;;;213:424:68;;;;;;;;;;;:::o;20331:186:0:-;213:424:68;;-1:-1:-1;;;20430:37:0;;20461:4;20430:37;;;213:424:68;;-1:-1:-1;;;;;213:424:68;20430:37:0;213:424:68;;;;20430:37:0;;;;;;;20331:186;-1:-1:-1;20430:37:0;;;20331:186;213:424:68;-1:-1:-1;213:424:68;20470:16:0;20430:37;213:424:68;-1:-1:-1;;;;;213:424:68;-1:-1:-1;213:424:68;;;;;;;;;;20331:186:0;:::o;20430:37::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;213:424:68;;;;;;-1:-1:-1;;;213:424:68;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;-1:-1:-1;;;213:424:68;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;20615:505:0;21043:70;20759:16;;:::i;:::-;20736:58;;20759:34;20778:15;213:424:68;;;;;;;20759:34:0;;:::i;20736:58::-;;:::i;:::-;213:424:68;;-1:-1:-1;;;20819:41:0;;20854:4;20819:41;;;213:424:68;;;;;20819:41:0;213:424:68;;;-1:-1:-1;;;;;20825:9:0;213:424:68;20819:41:0;;;;;;;20615:505;-1:-1:-1;20819:41:0;;;20615:505;1927:4:2;;21064:23:0;21043:18;:44;1927:4:2;3215:43;21090:23:0;1927:4:2;;213:424:68;-1:-1:-1;;;;;213:424:68;3215:43:2;213:424:68;-1:-1:-1;;;;;213:424:68;;;;;3215:43:2;:::i;:::-;213:424:68;;;;;;;3215:43:2;:::i;:::-;213:424:68;21043:18:0;;:::i;:::-;21064:23;;:::i;:::-;21043:44;;:::i;21090:23::-;21043:70;;:::i;20819:41::-;21090:23;20819:41;;;;21043:18;:44;20819:41;3215:43:2;20819:41:0;21064:23;20819:41;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;21337:1111;;21451:28;:18;;213:424:68;;;;;;;;21451:9:0;213:424:68;;;;;;;21451:18:0;213:424:68;;;;;21451:28:0;;;213:424:68;;;;;21494:14:0;;21490:56;;21627:134;21655:23;21574:27;:18;;;;;213:424:68;;;;;;;;21451:9:0;213:424:68;;;;;;;21574:18:0;213:424:68;;;;;;;21574:27:0;21655:23;;:::i;:::-;21692:28;21701:18;21692:28;:::i;:::-;-1:-1:-1;;;;;21741:9:0;213:424:68;21627:134:0;;:::i;:::-;21777:11;;213:424:68;;21794:9:0;;;213:424:68;21772:638:0;21777:11;213:424:68;;;21790:13:0;;;;;;;213:424:68;;;;;1247:1:2;;;28683:37:0;;;21821:548;;21777:11;213:424:68;;21777:11:0;;21821:548;21871:14;;;;;;;;21867:72;;21982:15;22222:132;21982:15;;22235:119;22245:108;21982:15;22245:108;213:424:68;22307:28:0;22032:172;22062:44;21982:15;22062:23;21982:15;22062:36;21982:15;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;;;22062:14:0;213:424:68;;;;;;;22062:23:0;22086:11;;;;213:424:68;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;22062:36:0;213:424:68;-1:-1:-1;;;;;213:424:68;;;22062:44:0;22137:15;;;213:424:68;22128:25:0;;-1:-1:-1;;;;;213:424:68;;:::i;22128:25:0:-;-1:-1:-1;;;;;213:424:68;22175:11:0;;;213:424:68;-1:-1:-1;;;;;213:424:68;;;;;;22032:172:0;:::i;:::-;22307:28;;213:424:68;-1:-1:-1;;;;;213:424:68;;;;-1:-1:-1;;;;;213:424:68;;;22245:108:0;;;:::i;:::-;22235:119;:::i;22222:132::-;21821:548;;;21867:72;21909:11;;;;;;;;;;:::o;21790:13::-;;;;;;;;;;22427:14;;21337:1111;:::o;21490:56::-;21524:11;;;;21531:4;21524:11;:::o;22687:1107::-;;22793:28;:18;;213:424:68;;;;;;;;21451:9:0;213:424:68;;;;;;;22793:28:0;;;213:424:68;;;;;22836:14:0;;22832:57;;22970:134;22998:23;22917:27;:18;;;;;213:424:68;;;;;;;;21451:9:0;213:424:68;;;;;;;22970:134:0;23120:11;;213:424:68;;23137:9:0;;;213:424:68;23115:642:0;23120:11;213:424:68;;;23133:13:0;;;;;;;213:424:68;;;;;1247:1:2;;;28683:37:0;;;23164:552;;23120:11;213:424:68;;23120:11:0;;23164:552;23214:14;;;;;;;;23210:73;;23326:15;23566:135;23326:15;;23579:122;23589:111;23326:15;23589:111;213:424:68;23651:31:0;23376:172;23406:44;23326:15;23406:23;23326:15;23406:36;23326:15;;:::i;23566:135::-;23164:552;;;23210:73;23252:12;;;;;;;;;;:::o;23133:13::-;;;;;;;;;;23774;22687:1107;:::o;22832:57::-;-1:-1:-1;22866:12:0;-1:-1:-1;22866:12:0:o;27413:118::-;2135:4:2;27413:118:0;27499:10;27413:118;27499:10;:::i;27602:118::-;27690:13;27602:118;27694:9;27690:13;;:::i;27832:130::-;-1:-1:-1;;;;;27832:130:0;27934:9;27832:130;27934:9;:::i;:::-;213:424:68;;;;;;;;27832:130:0;:::o;28081:162::-;;;28191:16;-1:-1:-1;;;;;28081:162:0;28191:16;:::i;:::-;-1:-1:-1;213:424:68;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;28081:162:0;-1:-1:-1;;;213:424:68;-1:-1:-1;213:424:68;;;;;;;;;;;;;;;28081:162:0;-1:-1:-1;213:424:68;;;;;;;;;;;;;28081:162:0;213:424:68;;;;;;;;28081:162:0;213:424:68;;;;;;;;28081:162:0;213:424:68;;-1:-1:-1;;213:424:68;;;;;;28081:162:0;:::o;213:424:68:-;;;:::i;:::-;;28081:162:0;:::o;213:424:68:-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;213:424:68;;;;;;;;:::o;:::-;;;:::i;:::-;;;29470:890:0;30327:18;29470:890;213:424:68;29470:890:0;213:424:68;;;;;;;;;;;;;;29599:15:0;;;;213:424:68;29599:15:0;213:424:68;;;;29669:14:0;-1:-1:-1;29599:15:0;;29821:52;:31;29785:112;213:424:68;-1:-1:-1;;;;;29717:54:0;29725:45;29814:83;213:424:68;;29747:23:0;213:424:68;29821:75:0;213:424:68;;-1:-1:-1;;;;;213:424:68;;;;;;;29747:23:0;;213:424:68;-1:-1:-1;;;;;213:424:68;;;;29725:45:0;;:::i;29717:54::-;213:424:68;;29821:31:0;:::i;:::-;29855:18;29821:52;;:::i;:::-;29876:20;29821:75;;:::i;29814:83::-;29785:112;:25;;;213:424:68;;;;-1:-1:-1;;;;;213:424:68;;;29785:112:0;-1:-1:-1;;;;;213:424:68;2135:4:2;;;29785:112:0;213:424:68;;30152:17:0;29599:15;;213:424:68;30185:45:0;;213:424:68;;-1:-1:-1;;;;;213:424:68;;-1:-1:-1;;;;;213:424:68;30185:23:0;;;2135:4:2;;30327:18:0;213:424:68;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;213:424:68;;;;;;-1:-1:-1;;;213:424:68;-1:-1:-1;;;;;213:424:68;;;;;;;;-1:-1:-1;;;213:424:68;1460:1:2;;;;;;;;;-1:-1:-1;;;;;;1460:1:2;;;;;;;;;;;;;;;213:424:68;30148:169:0;213:424:68;30261:45:0;;213:424:68;;;;29665:473:0;30050:53;:32;30014:113;213:424:68;30050:32:0;:19;30058:10;29946:54;29954:45;30043:84;213:424:68;;29976:23:0;213:424:68;30050:76:0;213:424:68;;;;;;29946:54:0;30058:10;;:::i;30050:32::-;;:::i;30014:113::-;29665:473;;32284:519;;;;;26420:10;213:424:68;;;;26420:46:0;32400:37;;32452:29;32451:30;32452:29;;;:::i;:::-;32451:30;;213:424:68;32451:30:0;32447:57;;-1:-1:-1;;;;;213:424:68;;;32528:9:0;213:424:68;;;32519:18:0;213:424:68;;-1:-1:-1;32690:6:0;;-1:-1:-1;;32557:27:0;;32690:6;32553:95;32613:20;;;;;:::i;:::-;32553:95;32690:6;:::i;32515:282::-;32770:15;;;;;;:::i;:::-;;;:::i;213:424:68:-;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;:::o;:::-;33390:31:0;213:424:68;;-1:-1:-1;;;;213:424:68;;;;;;-1:-1:-1;;;213:424:68;;;;;;;:::o;32887:821:0:-;33431:30;32887:821;;32999:6;32982:9;;;32999:6;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;;21451:9:0;213:424:68;;;;;33506:15:0;;213:424:68;;;:::i;33071:14:0:-;213:424:68;:::i;:::-;;;;;33164:26:0;33431:30;33328:51;33245:26;33164:46;:26;;;:::i;:::-;33193:17;;;:::i;33164:46::-;33245:26;:::i;:::-;33328:51;;;:::i;:::-;213:424:68;;33390:31:0;;213:424:68;;33390:31:0;213:424:68;-1:-1:-1;;;;;213:424:68;;;;33390:31:0;:::i;:::-;-1:-1:-1;;;;;213:424:68;-1:-1:-1;;;;;213:424:68;33390:31:0;213:424:68;;;33390:31:0;213:424:68;;33390:31:0;;213:424:68;;;-1:-1:-1;;;;;213:424:68;33431:30:0;:::i;213:424:68:-;33431:30:0;:::i;:::-;;:::i;:::-;33506:15;;:::i;:::-;213:424:68;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;33538:25:0;;213:424:68;;33538:25:0;-1:-1:-1;;;;;213:424:68;;33574:128:0;;32887:821;;:::o;33574:128::-;-1:-1:-1;;;;;;;;;;;33615:76:0;33641:49;-1:-1:-1;213:424:68;;;;-1:-1:-1;;;;;213:424:68;;;;33641:49:0;:::i;:::-;213:424:68;;;;;;;;;;;;;33615:76:0;;;;32887:821::o;213:424:68:-;;;;;;;;;;;;-1:-1:-1;;213:424:68;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;23889:576:0;;;;213:424:68;;;;;;24123:27:0;;;24119:46;;24196:1;-1:-1:-1;24196:1:0;;24229:27;;;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;24213:48:0;24196:1;24213:48;:::o;24176:283::-;24196:1;-1:-1:-1;24196:1:0;;24334:27;;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;24315:48:0;24196:1;24315:48;;:::o;24278:181::-;24410:13;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;;24394:54:0:o;24119:46::-;24152:13;;;;;24160:1;24152:13;24160:1;24152:13;:::o;213:424:68:-;;;;;;;;;;;;;:::i;30470:208:0:-;213:424:68;;-1:-1:-1;;;30568:54:0;;-1:-1:-1;;;;;213:424:68;;;30568:54:0;;;213:424:68;30608:4:0;213:424:68;;;;;;;;;;;30568:54:0;;213:424:68;;;;;;-1:-1:-1;;213:424:68;30568:54:0;;;;;;;30470:208;-1:-1:-1;30568:54:0;;;30470:208;30636:8;;30632:39;;30470:208::o;30632:39::-;213:424:68;;-1:-1:-1;;;30653:18:0;;30568:54;;30653:18;30568:54;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;213:424:68;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;-1:-1:-1;;;;;213:424:68;;2135:4:2;;213:424:68;;;;;2135:4:2;213:424:68:o;:::-;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;213:424:68;-1:-1:-1;;;;;1927:4:2;213:424:68;;;;;;:::o;:::-;;;-1:-1:-1;;;;;213:424:68;;;;;;;;:::i;:::-;;;;;;1927:4:2;-1:-1:-1;;;;;1927:4:2;213:424:68;;;;;;;;;:::o;33798:773:0:-;;;;;-1:-1:-1;;;;;213:424:68;33901:33:0;213:424:68;;;33901:33:0;;;:::i;:::-;33974:28;;;:::i;:::-;34045:23;213:424:68;34045:23:0;;213:424:68;;;;;;;;34045:16:0;213:424:68;;;;;;;34045:23:0;213:424:68;:::i;:::-;;34078:33:0;;213:424:68;;;;-1:-1:-1;;;;;213:424:68;;;;34078:33:0;:::i;:::-;-1:-1:-1;;;;;213:424:68;2135:4:2;;;34078:33:0;213:424:68;;-1:-1:-1;;;;;213:424:68;34151:19:0;34125:45;213:424:68;34151:19:0;;;213:424:68;-1:-1:-1;;;;;213:424:68;;;34125:45:0;213:424:68;;34125:45:0;34121:77;;34489:16;213:424:68;34233:19:0;34522:42;34233:19;34379:53;34522:42;34233:19;34379:26;34233:19;34379;34233;34304:22;34233:34;:26;:19;;;213:424:68;;;;;;;;22062:14:0;213:424:68;;;;;;;34233:19:0;213:424:68;;;;;;;;;;;;;;;;34233:34:0;34304:22;;;:::i;:::-;34337:23;;;;;213:424:68;;;;;;;;34045:16:0;213:424:68;;;;;;;34337:23:0;213:424:68;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;22062:14:0;213:424:68;;;;;;;34379:26:0;:53;:::i;:::-;34489:16;;:::i;:::-;213:424:68;;-1:-1:-1;;;;;213:424:68;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;;;34522:42:0;;;;33798:773::o;34121:77::-;213:424:68;;-1:-1:-1;;;34179:19:0;;;;;28833:543;;;;;-1:-1:-1;;;;;213:424:68;;;29017:23:0;;;:48;;28833:543;29013:357;;;213:424:68;;;29114:18:0;29146:29;213:424:68;29114:62:0;213:424:68;;;;;;;;1247:1:2;213:424:68;;;29146:29:0;-1:-1:-1;;;;;213:424:68;;;;;;;21451:9:0;213:424:68;;;;;;;29114:18:0;213:424:68;;-1:-1:-1;;;;213:424:68;;;;;;;;29114:62:0;;;213:424:68;;-1:-1:-1;;;213:424:68;;;;;;;;29013:357:0;29197:23;:48;;;;29013:357;29193:177;;;;29013:357;;28833:543::o;29193:177::-;213:424:68;29296:18:0;29329:29;213:424:68;29296:63:0;213:424:68;;;;;;;;1247:1:2;213:424:68;;;29329:29:0;29327:32;29296:18;213:424:68;;;;;;;;21451:9:0;213:424:68;;;;;;;29296:18:0;213:424:68;;;;;29296:63:0;;213:424:68;;;;;;;;;;;;;;;;;;;;29197:48:0;213:424:68;29224:21:0;;-1:-1:-1;29197:48:0;;;;29017;213:424:68;;;;29044:21:0;;29017:48;;36404:566;;;;;1247:1:2;26642:10:0;213:424:68;;;26642:48:0;36521:39;;36575:28;36574:29;36575:28;;;:::i;36574:29::-;36570:56;;-1:-1:-1;;;;;213:424:68;;;;;;36640:10:0;36636:39;;36699:9;;213:424:68;;;;36690:18:0;36686:278;213:424:68;;;-1:-1:-1;36856:6:0;;-1:-1:-1;;36728:27:0;;36856:6;36724:89;36784:14;;;;;:::i;:::-;36724:89;36856:6;:::i;36686:278::-;36937:15;;;;;;:::i;:::-;;;:::i;36636:39::-;213:424:68;;-1:-1:-1;;;36659:16:0;;;;;213:424:68;-1:-1:-1;;;213:424:68;;;;;;;:::o;37086:1634:0:-;;;;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;;21451:9:0;213:424:68;;;;;;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;;21451:9:0;213:424:68;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;37417:26:0;;;;:::i;:::-;37446:17;;;:::i;:::-;37417:46;;;:::i;:::-;37493:26;;;;:::i;:::-;37522:17;;;;:::i;:::-;37493:46;;;:::i;:::-;37574:26;;;;:::i;:::-;37635;;;;:::i;:::-;37721:54;;;;;;:::i;:::-;37831:51;;;;;:::i;:::-;213:424:68;;;37999:15:0;213:424:68;;;-1:-1:-1;;;;;213:424:68;;;;37999:30:0;;;;:::i;:::-;:47;;;;:::i;:::-;37981:65;;-1:-1:-1;;;;;213:424:68;-1:-1:-1;;;;;213:424:68;33390:31:0;213:424:68;;;33390:31:0;213:424:68;;37981:65:0;37999:15;213:424:68;;;-1:-1:-1;;;;;213:424:68;38074:30:0;;;;:::i;:::-;:44;;;;:::i;:::-;38056:62;;;:::i;:::-;38163:15;;;;:::i;:::-;38223;;;;:::i;:::-;-1:-1:-1;38254:14:0;;38250:184;;37086:1634;213:424:68;-1:-1:-1;;;;;213:424:68;;;;38444:132:0;;37086:1634;213:424:68;;;;38586:128:0;;37086:1634;;:::o;38586:128::-;-1:-1:-1;;;;;;;;;;;38627:76:0;38653:49;-1:-1:-1;213:424:68;;;;-1:-1:-1;;;;;213:424:68;;;38653:49:0;213:424:68;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;38444:132:0;-1:-1:-1;;;;;;;;;;;38487:78:0;38513:51;-1:-1:-1;213:424:68;;;;-1:-1:-1;;;;;213:424:68;;;38513:51:0;213:424:68;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;38487:78:0;;;;38444:132;;;;38250:184;38296:11;;;:::i;:::-;38311:13;-1:-1:-1;38284:65:0;;38367:28;38368:27;;;:::i;38367:28::-;38363:60;;38250:184;;;38363:60;213:424:68;;-1:-1:-1;;;38404:19:0;;;;;38284:65;213:424:68;;-1:-1:-1;;;38333:16:0;;;;;24563:585;;;213:424:68;;;;;;24806:27:0;;;24802:46;;24879:1;-1:-1:-1;24879:1:0;;24912:27;;;;;:::i;24859:283::-;24879:1;-1:-1:-1;24879:1:0;;25017:27;;;;:::i;24961:181::-;25116:13;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;25077:54:0;:::o;213:424:68:-;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;:::o;38809:909:0:-;-1:-1:-1;;;;;213:424:68;;;-1:-1:-1;213:424:68;;;38937:14:0;213:424:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38809:909:0;213:424:68;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;39076:22:0;38809:909;213:424:68;39076:22:0;:::i;:::-;39135;;;;;:::i;:::-;39168:19;;;;;213:424:68;;;;;;;;22062:14:0;213:424:68;;;;;;;39168:19:0;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;39168:53:0;;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;;;22062:14:0;213:424:68;;;;;;;;;;;;;;;;;39231:53:0;;:19;;:53;:::i;:::-;39324:28;;;:::i;:::-;39408:16;;;;;;:::i;:::-;39481;;;;:::i;:::-;39597:27;;;:::i;:::-;39596:28;39592:60;;213:424:68;;;39668:43:0;213:424:68;;;;;;;;;;39668:43:0;;38809:909::o;41061:514::-;;;;;1247:1:2;26866:10:0;213:424:68;;;26866:48:0;41177:39;;41231:28;41230:29;41231:28;;;:::i;41230:29::-;41226:56;;-1:-1:-1;;;;;213:424:68;;;41306:9:0;213:424:68;;;41297:18:0;213:424:68;;-1:-1:-1;41462:6:0;;-1:-1:-1;;41335:27:0;;41462:6;41331:89;41391:14;;;;;:::i;:::-;41331:89;41462:6;:::i;41293:276::-;41542:15;;;;;;:::i;:::-;;;:::i;41692:1027::-;;;42196:31;41692:1027;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;;21451:9:0;213:424:68;;;;;;;;:::i;:::-;42272:15:0;213:424:68;;;;;;;;41921:46:0;:26;;;:::i;:::-;41950:17;;;:::i;41921:46::-;42002:26;42196:31;42088:54;42002:26;;;:::i;:::-;42088:54;;;:::i;:::-;42153:33;;213:424:68;;42153:33:0;213:424:68;;;;-1:-1:-1;;;;;213:424:68;;;42153:33:0;;213:424:68;;;-1:-1:-1;;;;;213:424:68;33390:31:0;:::i;42272:15::-;-1:-1:-1;42303:14:0;;42299:184;;41692:1027;42507:9;42522:6;42507:9;;;42522:6;:::i;:::-;213:424:68;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;42545:25:0;;213:424:68;;42545:25:0;-1:-1:-1;;;;;213:424:68;;42581:132:0;;41692:1027;;:::o;42581:132::-;-1:-1:-1;;;;;;;;;;;42624:78:0;42650:51;-1:-1:-1;213:424:68;;;;-1:-1:-1;;;;;213:424:68;;;42299:184:0;42345:11;;;:::i;:::-;42360:13;-1:-1:-1;42333:65:0;;42416:28;42417:27;;;:::i;42416:28::-;42412:60;;42299:184;;;30736:187;213:424:68;;-1:-1:-1;;;30833:33:0;;-1:-1:-1;;;;;213:424:68;;;30833:33:0;;;213:424:68;;;;;;;;30833:33:0;;213:424:68;;;;;;-1:-1:-1;;213:424:68;30833:33:0;;;;;;;30736:187;30833:33;;;;30736:187;30880:8;;30876:40;;30736:187::o;30876:40::-;213:424:68;;-1:-1:-1;;;30897:19:0;;30833:33;;30897:19;30833:33;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;42809:747;;;213:424:68;;;;;;;;;;;-1:-1:-1;213:424:68;42936:14:0;213:424:68;;43393:27:0;-1:-1:-1;;;;;213:424:68;43277:16:0;213:424:68;42936:26:0;213:424:68;;-1:-1:-1;213:424:68;;;;;;;;;;;;;;;;;42936:26:0;213:424:68;;43007:22:0;;;;:::i;:::-;43040:23;:50;:23;;213:424:68;;;;;;;;34045:16:0;213:424:68;;;;;;;43040:23:0;:50;213:424:68;;;;;43040:50:0;:::i;:::-;;;:::i;:::-;43100:53;:19;:26;:19;;;213:424:68;;;;;;;;22062:14:0;213:424:68;;;;;;;43100:53:0;43193:28;;;:::i;:::-;43277:16;;:::i;43393:27::-;43392:28;43388:60;;213:424:68;;;43507:42:0;213:424:68;;43459:32:0;;;;;;:::i;:::-;213:424:68;;;;;;;;43507:42:0;;42809:747::o;213:424:68:-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2135:4:2;-1:-1:-1;;;;;213:424:68;;;;;;;2135:4:2;213:424:68;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;43810:969:0:-;;;;;27086:10;1247:1:2;213:424:68;;;;27086:46:0;43901:37;;43965:9;43949:25;;;:::i;:::-;44024:1;44027:19;;;;;;44178:9;;;44737:26;44178:9;44673:54;44695:32;44703:23;44167:20;213:424:68;44178:9:0;;;44167:20;;:::i;:::-;44618:45;44640:23;213:424:68;44553:26:0;;213:424:68;;;;;;;;44553:16:0;213:424:68;;;;;;;44553:26:0;213:424:68;:::i;:::-;;44589:19:0;;213:424:68;;;;;;;;44589:19:0;:::i;:::-;213:424:68;;;;;44640:23:0;44618:45;:18;;;213:424:68;;;;-1:-1:-1;;;;;213:424:68;;;44618:45:0;44713:13;44703:23;;:::i;:::-;44695:32;:::i;:::-;44673:54;:18;;;213:424:68;;;;-1:-1:-1;;;;;213:424:68;;;44673:54:0;-1:-1:-1;;;;;213:424:68;2135:4:2;;;44673:54:0;-1:-1:-1;;;;;213:424:68;;;;;44553:16:0;213:424:68;;;;;;;44737:26:0;213:424:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;213:424:68;;;;;;-1:-1:-1;;;213:424:68;;;;;;;;;;;;;;;;;;;;;;;;44015:10:0;44089:11;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;213:424:68;44015:10:0;;44873:2412;;44955:24;44956:23;;;:::i;44955:24::-;44951:54;;45047:18;213:424:68;45047:18:0;;213:424:68;;;;;;;;21451:9:0;213:424:68;;;;;;;;;;;;;;;;;45148:26:0;;;;:::i;:::-;45202:20;;;213:424:68;45202:20:0;;;213:424:68;;;;;;45253:28:0;45262:18;45253:28;:::i;:::-;45291:22;-1:-1:-1;45329:11:0;;213:424:68;;45346:9:0;;;213:424:68;45324:722:0;45329:11;213:424:68;;;45342:13:0;;;;;;;213:424:68;;;;;;;;1247:1:2;;;28683:37:0;;;45373:632;;45329:11;213:424:68;;;;;45329:11:0;;45373:632;45448:15;;;;;;:::i;:::-;45497;;;;213:424:68;-1:-1:-1;;;;;213:424:68;;;;;;;22062:14:0;213:424:68;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;213:424:68;;;;;34045:16:0;213:424:68;;;;;;;;;45497:15:0;;-1:-1:-1;;;;;213:424:68;;;;;;45497:15:0;;45668:55;;213:424:68;;;45668:55:0;:::i;:::-;;;;:::i;:::-;45789:19;;;;213:424:68;45789:19:0;;;-1:-1:-1;;;;;213:424:68;45780:29:0;;;:::i;:::-;45811:15;;;213:424:68;-1:-1:-1;;;;;213:424:68;45758:69:0;;-1:-1:-1;;;;;213:424:68;;45758:69:0;:::i;:::-;45876:27;;;;;213:424:68;45859:45:0;;-1:-1:-1;;;;;213:424:68;45876:27:0;45859:45;:::i;:::-;45845:59;;;:::i;:::-;213:424:68;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;45928:62:0;;213:424:68;;45928:62:0;45373:632;;;;;45342:13;;;;;;;;;;;;;;;46159:36;46172:23;28451:19;46118:9;28451:11;-1:-1:-1;;;;;46118:9:0;213:424:68;28451:11:0;;;:::i;:::-;:19;:::i;46172:23::-;46159:36;;:::i;:::-;46291:14;-1:-1:-1;46291:14:0;;46287:59;;45324:722;46378:26;;;:::i;:::-;46456:12;;;;;;:::i;:::-;-1:-1:-1;;;;;213:424:68;;;;;;21451:9:0;213:424:68;;;;;46506:18:0;;213:424:68;;-1:-1:-1;;;;213:424:68;;;46594:48:0;;;:::i;:::-;213:424:68;;-1:-1:-1;;;;;213:424:68;46816:31:0;;;;:::i;:::-;;;-1:-1:-1;;;;;213:424:68;-1:-1:-1;;;;;213:424:68;33390:31:0;213:424:68;;;33390:31:0;213:424:68;;46816:31:0;213:424:68;;;;-1:-1:-1;;;;;213:424:68;46857:30:0;;;;:::i;:::-;;;;:::i;:::-;46932:23;;;:::i;:::-;46920:36;;;:::i;:::-;46995:51;;;;;:::i;:::-;213:424:68;;;;;;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;47061:62:0;;213:424:68;47061:62:0;213:424:68;;;-1:-1:-1;;47134:145:0;;44873:2412;;:::o;47134:145::-;-1:-1:-1;;;;;;;;;;;47175:93:0;47205:62;-1:-1:-1;213:424:68;47241:25:0;213:424:68;;;-1:-1:-1;;;;;213:424:68;;;;47241:25:0;;:::i;:::-;47205:62;;:::i;46287:59::-;-1:-1:-1;;;46287:59:0;;44951:54;213:424:68;;-1:-1:-1;;;44988:17:0;;;;;49235:977;;50130:40;49367:28;50130:75;49235:977;49367:28;:::i;:::-;27499:10;50155:15;50130:22;49426:29;213:424:68;;;;;49435:19:0;;;213:424:68;;49426:29:0;:::i;:::-;-1:-1:-1;;;;;49726:27:0;;;;;;;213:424:68;;27499:10:0;213:424:68;;;;;;;;;49235:977:0;213:424:68;;;49688:21:0;27499:10;:::i;:::-;213:424:68;;;;;;49235:977:0;213:424:68;;27499:10:0;;:::i;:::-;213:424:68;49886:18:0;49877:28;49886:18;49877:28;:::i;50130:22::-;50155:15;;213:424:68;;50130:40:0;;:::i;:::-;213:424:68;;;;;49235:977:0;50196:9;213:424:68;;50130:75:0;:::i;213:424:68:-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;52573:334:0;52688:58;52711:16;;:::i;:::-;:34;213:424:68;;;52730:15:0;213:424:68;;;;52711:34:0;;:::i;52688:58::-;-1:-1:-1;;;;;;213:424:68;;;-1:-1:-1;213:424:68;;;52775:9:0;213:424:68;;;;;;;;;;52820:13:0;;;-1:-1:-1;;;52873:22:0;;52836:60;52873:22;;:::i;52820:80::-;;;;52573:334;:::o;53206:341::-;53327:58;53350:16;;:::i;53327:58::-;-1:-1:-1;;;;;213:424:68;;;-1:-1:-1;213:424:68;;;53414:9:0;213:424:68;;;;;;;;;;-1:-1:-1;53459:13:0;;;-1:-1:-1;;;53524:10:0;53512:23;53524:10;53475:61;53524:10;;:::i;:::-;53512:23;:::i;53647:418::-;;53731:328;;;;;;;;53704:17;;53731:328;;;;;;;;;;;;;;;;2384:151:2;-1:-1:-1;;;;;213:424:68;;;;;2483:16:2;;;;2384:151;2483:45;;;;2476:52;;2384:151;:::o;2483:45::-;-1:-1:-1;213:424:68;;;2503:9:2;213:424:68;;;;;;;;-1:-1:-1;;;;;213:424:68;;;;;;;;;;;-1:-1:-1;213:424:68;;2384:151:2;:::o;2660:335::-;2770:1;213:424:68;;;;2751:20:2;2770:1;;1927:4;3215:43;2794:72;213:424:68;-1:-1:-1;;;;;2770:1:2;213:424:68;;;-1:-1:-1;;;;;213:424:68;3215:43:2;:::i;:::-;213:424:68;2794:72:2;:::i;2747:242::-;2905:73;2915:62;2904:74;213:424:68;2959:16:2;-1:-1:-1;;;;;2770:1:2;213:424:68;;;;2959:16:2;;:::i;:::-;-1:-1:-1;;;;;213:424:68;2915:62:2;;:::i;2905:73::-;2904:74;:::i;3088:196::-;1927:4;3088:196;-1:-1:-1;;;;;;;;;;3215:43:2;3088:196;213:424:68;;;3215:43:2;:::i;3680:333::-;3788:1;3771:18;;3788:1;;4354:62;3812:72;213:424:68;4363:32:2;-1:-1:-1;;;;;3788:1:2;213:424:68;;4363:32:2;;:::i;:::-;213:424:68;;;;3767:240:2;213:424:68;4354:62:2;:::i;:::-;3812:72;:::i;213:424:68:-;;;:::i;:::-;;;3767:240:2;3923:73;4762:85;3979:14;4771:51;3922:74;213:424:68;4771:32:2;-1:-1:-1;;;;;3788:1:2;213:424:68;;;;3979:14:2;;;;:::i;:::-;4771:32;:::i;:::-;:51;:::i;:::-;4825:1;213:424:68;;;;3767:240:2;213:424:68;;;;3767:240:2;-1:-1:-1;;213:424:68;;4762:85:2;:::i;3923:73::-;3922:74;:::i;213:424:68:-;;;:::i;:::-;;;;;;:::i;:::-;;;377:146:8;-1:-1:-1;;;;;446:20:8;;;;442:48;;213:424:68;377:146:8;:::o;442:48::-;213:424:68;;-1:-1:-1;;;475:15:8;;;;;529:151;-1:-1:-1;;;;;600:21:8;;;;596:50;;213:424:68;529:151:8;:::o;596:50::-;213:424:68;;-1:-1:-1;;;630:16:8;;;;;686:151;-1:-1:-1;;;;;757:21:8;;;;753:50;;213:424:68;686:151:8;:::o;753:50::-;213:424:68;;-1:-1:-1;;;787:16:8;;;;;843:161;-1:-1:-1;;;;;213:424:68;930:16:8;918:29;;914:57;;213:424:68;;843:161:8;:::o;914:57::-;213:424:68;;-1:-1:-1;;;956:15:8;;;;;1010:161;-1:-1:-1;;;;;1085:29:8;;1081:57;;1010:161;:::o;1081:57::-;213:424:68;;-1:-1:-1;;;1123:15:8;;;;;1177:141;1258:1;213:424:68;;;1254:5:8;1250:34;;-1:-1:-1;;;;;213:424:68;1177:141:8;:::o;1250:34::-;213:424:68;;-1:-1:-1;;;1268:16:8;;;;;1324:141;1405:1;1401:5;;1397:34;;1324:141;:::o;1471:88::-;-1:-1:-1;;1543:9:8;;;;1547:1;1471:88;:::o",
  "source": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.15;\n\nimport \"../Comet.sol\";\n\n/**\n * @title A modified version of Compound Comet\n * @notice This is solely used for testing upgrades\n * @author Compound\n */\ncontract CometModified is Comet {\n\n    constructor(Configuration memory config) Comet(config) {}\n\n    /**\n     * @notice Initialize storage for a liquidator\n     * @dev Solely used for testing upgrades\n     */\n    function initialize(address liquidator) external {\n        liquidatorPoints[liquidator].numAbsorbs = type(uint32).max;\n    }\n\n    function newFunction() external pure returns (int) {\n        return 101;\n    }\n}\n",
  "sourcePath": "/home/stephensb/sb-labs/solidity-contracts/contracts/comet/contracts/test/CometModified.sol",
  "ast": {
    "absolutePath": "project:/contracts/comet/contracts/test/CometModified.sol",
    "exportedSymbols": {
      "Comet": [
        4239
      ],
      "CometConfiguration": [
        4308
      ],
      "CometCore": [
        4573
      ],
      "CometMainInterface": [
        5859
      ],
      "CometMath": [
        6067
      ],
      "CometModified": [
        15413
      ],
      "CometStorage": [
        6894
      ],
      "ERC20": [
        8552
      ],
      "IPriceFeed": [
        8815
      ]
    },
    "id": 15414,
    "license": "BUSL-1.1",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15372,
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:68"
      },
      {
        "absolutePath": "project:/contracts/comet/contracts/Comet.sol",
        "file": "../Comet.sol",
        "id": 15373,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15414,
        "sourceUnit": 4240,
        "src": "62:22:68",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15375,
              "name": "Comet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4239,
              "src": "239:5:68"
            },
            "id": 15376,
            "nodeType": "InheritanceSpecifier",
            "src": "239:5:68"
          }
        ],
        "canonicalName": "CometModified",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15374,
          "nodeType": "StructuredDocumentation",
          "src": "86:126:68",
          "text": " @title A modified version of Compound Comet\n @notice This is solely used for testing upgrades\n @author Compound"
        },
        "fullyImplemented": true,
        "id": 15413,
        "linearizedBaseContracts": [
          15413,
          4239,
          5859,
          4573,
          6067,
          6894,
          4308
        ],
        "name": "CometModified",
        "nameLocation": "222:13:68",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15385,
              "nodeType": "Block",
              "src": "307:2:68",
              "statements": []
            },
            "id": 15386,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 15382,
                    "name": "config",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15379,
                    "src": "299:6:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Configuration_$4292_memory_ptr",
                      "typeString": "struct CometConfiguration.Configuration memory"
                    }
                  }
                ],
                "id": 15383,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 15381,
                  "name": "Comet",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4239,
                  "src": "293:5:68"
                },
                "nodeType": "ModifierInvocation",
                "src": "293:13:68"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15379,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "285:6:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 15386,
                  "src": "264:27:68",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Configuration_$4292_memory_ptr",
                    "typeString": "struct CometConfiguration.Configuration"
                  },
                  "typeName": {
                    "id": 15378,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 15377,
                      "name": "Configuration",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4292,
                      "src": "264:13:68"
                    },
                    "referencedDeclaration": 4292,
                    "src": "264:13:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Configuration_$4292_storage_ptr",
                      "typeString": "struct CometConfiguration.Configuration"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "263:29:68"
            },
            "returnParameters": {
              "id": 15384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:0:68"
            },
            "scope": 15413,
            "src": "252:57:68",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15403,
              "nodeType": "Block",
              "src": "476:75:68",
              "statements": [
                {
                  "expression": {
                    "id": 15401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 15392,
                          "name": "liquidatorPoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6893,
                          "src": "486:16:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidatorPoints_$6838_storage_$",
                            "typeString": "mapping(address => struct CometStorage.LiquidatorPoints storage ref)"
                          }
                        },
                        "id": 15394,
                        "indexExpression": {
                          "id": 15393,
                          "name": "liquidator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15389,
                          "src": "503:10:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "486:28:68",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidatorPoints_$6838_storage",
                          "typeString": "struct CometStorage.LiquidatorPoints storage ref"
                        }
                      },
                      "id": 15395,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "numAbsorbs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6831,
                      "src": "486:39:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 15398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "533:6:68",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 15397,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "533:6:68",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            }
                          ],
                          "id": 15396,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "528:4:68",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 15399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "528:12:68",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint32",
                          "typeString": "type(uint32)"
                        }
                      },
                      "id": 15400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "528:16:68",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "486:58:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 15402,
                  "nodeType": "ExpressionStatement",
                  "src": "486:58:68"
                }
              ]
            },
            "documentation": {
              "id": 15387,
              "nodeType": "StructuredDocumentation",
              "src": "315:107:68",
              "text": " @notice Initialize storage for a liquidator\n @dev Solely used for testing upgrades"
            },
            "functionSelector": "c4d66de8",
            "id": 15404,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "436:10:68",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15389,
                  "mutability": "mutable",
                  "name": "liquidator",
                  "nameLocation": "455:10:68",
                  "nodeType": "VariableDeclaration",
                  "scope": 15404,
                  "src": "447:18:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:7:68",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "446:20:68"
            },
            "returnParameters": {
              "id": 15391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:0:68"
            },
            "scope": 15413,
            "src": "427:124:68",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 15411,
              "nodeType": "Block",
              "src": "608:27:68",
              "statements": [
                {
                  "expression": {
                    "hexValue": "313031",
                    "id": 15409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "625:3:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_101_by_1",
                      "typeString": "int_const 101"
                    },
                    "value": "101"
                  },
                  "functionReturnParameters": 15408,
                  "id": 15410,
                  "nodeType": "Return",
                  "src": "618:10:68"
                }
              ]
            },
            "functionSelector": "1b28d63e",
            "id": 15412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newFunction",
            "nameLocation": "566:11:68",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "577:2:68"
            },
            "returnParameters": {
              "id": 15408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15407,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15412,
                  "src": "603:3:68",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 15406,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:3:68",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:5:68"
            },
            "scope": 15413,
            "src": "557:78:68",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 15414,
        "src": "213:424:68",
        "usedErrors": [
          5298,
          5300,
          5302,
          5304,
          5306,
          5308,
          5310,
          5312,
          5314,
          5316,
          5318,
          5320,
          5322,
          5324,
          5326,
          5328,
          5330,
          5332,
          5334,
          5336,
          5338,
          5340,
          5342,
          5865,
          5867,
          5869,
          5871,
          5873,
          5875
        ]
      }
    ],
    "src": "37:601:68"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-11-30T22:41:29.720Z",
  "devdoc": {
    "author": "Compound",
    "kind": "dev",
    "methods": {
      "absorb(address,address[])": {
        "params": {
          "absorber": "The recipient of the incentive paid to the caller of absorb",
          "accounts": "The list of underwater accounts to absorb"
        }
      },
      "approveThis(address,address,uint256)": {
        "details": "Only callable by governorNote: Setting the `asset` as Comet's address will allow the manager to withdraw from Comet's Comet balance",
        "params": {
          "amount": "The amount of an asset to approve",
          "asset": "The asset that the manager will gain approval of",
          "manager": "The account which will be allowed or disallowed"
        }
      },
      "balanceOf(address)": {
        "details": "Note: uses updated interest indices to calculate",
        "params": {
          "account": "The account whose balance to query"
        },
        "returns": {
          "_0": "The present day base balance magnitude of the account, if positive"
        }
      },
      "borrowBalanceOf(address)": {
        "details": "Note: uses updated interest indices to calculate",
        "params": {
          "account": "The account whose balance to query"
        },
        "returns": {
          "_0": "The present day base balance magnitude of the account, if negative"
        }
      },
      "buyCollateral(address,uint256,uint256,address)": {
        "params": {
          "asset": "The asset to buy",
          "baseAmount": "The amount of base tokens used to buy the collateral",
          "minAmount": "The minimum amount of collateral tokens that should be received by the buyer",
          "recipient": "The recipient address"
        }
      },
      "getAssetInfo(uint8)": {
        "params": {
          "i": "The index of the asset info to get"
        },
        "returns": {
          "_0": "The asset info object"
        }
      },
      "getAssetInfoByAddress(address)": {
        "details": "Determine index of asset that matches given address"
      },
      "getBorrowRate(uint256)": {
        "details": "Note: Does not accrue interest first",
        "params": {
          "utilization": "The utilization to check the borrow rate for"
        },
        "returns": {
          "_0": "The per second borrow rate at `utilization`"
        }
      },
      "getCollateralReserves(address)": {
        "details": "Note: Reverts if collateral reserves are somehow negative, which should not be possible",
        "params": {
          "asset": "The collateral asset"
        }
      },
      "getPrice(address)": {
        "params": {
          "priceFeed": "The address of a price feed"
        },
        "returns": {
          "_0": "The price, scaled by `PRICE_SCALE`"
        }
      },
      "getSupplyRate(uint256)": {
        "details": "Note: Does not accrue interest first",
        "params": {
          "utilization": "The utilization to check the supply rate for"
        },
        "returns": {
          "_0": "The per second supply rate at `utilization`"
        }
      },
      "getUtilization()": {
        "details": "Note: Does not accrue interest first",
        "returns": {
          "_0": "The utilization rate of the base asset"
        }
      },
      "hasPermission(address,address)": {
        "params": {
          "manager": "The manager account",
          "owner": "The owner account"
        },
        "returns": {
          "_0": "Whether or not the manager has permission"
        }
      },
      "initialize(address)": {
        "details": "Solely used for testing upgrades"
      },
      "initializeStorage()": {
        "details": "Can be used from constructor or proxy"
      },
      "isAbsorbPaused()": {
        "returns": {
          "_0": "Whether or not absorb actions are paused"
        }
      },
      "isBorrowCollateralized(address)": {
        "params": {
          "account": "The address to check"
        },
        "returns": {
          "_0": "Whether the account is minimally collateralized enough to borrow"
        }
      },
      "isBuyPaused()": {
        "returns": {
          "_0": "Whether or not buy actions are paused"
        }
      },
      "isLiquidatable(address)": {
        "params": {
          "account": "The address to check"
        },
        "returns": {
          "_0": "Whether the account is minimally collateralized enough to not be liquidated"
        }
      },
      "isSupplyPaused()": {
        "returns": {
          "_0": "Whether or not supply actions are paused"
        }
      },
      "isTransferPaused()": {
        "returns": {
          "_0": "Whether or not transfer actions are paused"
        }
      },
      "isWithdrawPaused()": {
        "returns": {
          "_0": "Whether or not withdraw actions are paused"
        }
      },
      "pause(bool,bool,bool,bool,bool)": {
        "params": {
          "absorbPaused": "Boolean for pausing absorb actions",
          "buyPaused": "Boolean for pausing buy actions",
          "supplyPaused": "Boolean for pausing supply actions",
          "transferPaused": "Boolean for pausing transfer actions",
          "withdrawPaused": "Boolean for pausing withdraw actions"
        }
      },
      "quoteCollateral(address,uint256)": {
        "params": {
          "asset": "The collateral asset to get the quote for",
          "baseAmount": "The amount of the base asset to get the quote for"
        },
        "returns": {
          "_0": "The quote in terms of the collateral asset"
        }
      },
      "supply(address,uint256)": {
        "params": {
          "amount": "The quantity to supply",
          "asset": "The asset to supply"
        }
      },
      "supplyFrom(address,address,address,uint256)": {
        "params": {
          "amount": "The quantity to supply",
          "asset": "The asset to supply",
          "dst": "The address which will hold the balance",
          "from": "The supplier address"
        }
      },
      "supplyTo(address,address,uint256)": {
        "params": {
          "amount": "The quantity to supply",
          "asset": "The asset to supply",
          "dst": "The address which will hold the balance"
        }
      },
      "totalBorrow()": {
        "details": "Note: uses updated interest indices to calculate",
        "returns": {
          "_0": "The amount of debt*"
        }
      },
      "totalSupply()": {
        "details": "Note: uses updated interest indices to calculate",
        "returns": {
          "_0": "The supply of tokens*"
        }
      },
      "transfer(address,uint256)": {
        "params": {
          "amount": "The quantity to transfer",
          "dst": "The recipient address"
        },
        "returns": {
          "_0": "true"
        }
      },
      "transferAsset(address,address,uint256)": {
        "params": {
          "amount": "The quantity to transfer",
          "asset": "The asset to transfer",
          "dst": "The recipient address"
        }
      },
      "transferAssetFrom(address,address,address,uint256)": {
        "params": {
          "amount": "The quantity to transfer",
          "asset": "The asset to transfer",
          "dst": "The recipient address",
          "src": "The sender address"
        }
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "amount": "The quantity to transfer",
          "dst": "The recipient address",
          "src": "The sender address"
        },
        "returns": {
          "_0": "true"
        }
      },
      "withdraw(address,uint256)": {
        "params": {
          "amount": "The quantity to withdraw",
          "asset": "The asset to withdraw"
        }
      },
      "withdrawFrom(address,address,address,uint256)": {
        "params": {
          "amount": "The quantity to withdraw",
          "asset": "The asset to withdraw",
          "src": "The sender address",
          "to": "The recipient address"
        }
      },
      "withdrawReserves(address,uint256)": {
        "params": {
          "amount": "The amount of reserves to be withdrawn from the protocol",
          "to": "An address of the receiver of withdrawn reserves"
        }
      },
      "withdrawTo(address,address,uint256)": {
        "params": {
          "amount": "The quantity to withdraw",
          "asset": "The asset to withdraw",
          "to": "The recipient address"
        }
      }
    },
    "title": "A modified version of Compound Comet",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidUInt64()": [
        {
          "notice": "Custom errors *"
        }
      ]
    },
    "events": {
      "AbsorbCollateral(address,address,address,uint256,uint256)": {
        "notice": "Event emitted when a user's collateral is absorbed by the protocol"
      },
      "AbsorbDebt(address,address,uint256,uint256)": {
        "notice": "Event emitted when a borrow position is absorbed by the protocol"
      },
      "BuyCollateral(address,address,uint256,uint256)": {
        "notice": "Event emitted when a collateral asset is purchased from the protocol"
      },
      "PauseAction(bool,bool,bool,bool,bool)": {
        "notice": "Event emitted when an action is paused/unpaused"
      },
      "WithdrawReserves(address,uint256)": {
        "notice": "Event emitted when reserves are withdrawn by the governor"
      }
    },
    "kind": "user",
    "methods": {
      "absorb(address,address[])": {
        "notice": "Absorb a list of underwater accounts onto the protocol balance sheet"
      },
      "accrueAccount(address)": {
        "notice": "Accrue interest and rewards for an account*"
      },
      "approveThis(address,address,uint256)": {
        "notice": "Sets Comet's ERC20 allowance of an asset for a manager"
      },
      "balanceOf(address)": {
        "notice": "Query the current positive base balance of an account or zero"
      },
      "baseBorrowMin()": {
        "notice": "The minimum base amount required to initiate a borrow"
      },
      "baseMinForRewards()": {
        "notice": "The minimum amount of base principal wei for rewards to accrue"
      },
      "baseScale()": {
        "notice": "The scale for base token (must be less than 18 decimals)"
      },
      "baseToken()": {
        "notice": "The address of the base token contract"
      },
      "baseTokenPriceFeed()": {
        "notice": "The address of the price feed for the base token"
      },
      "baseTrackingBorrowSpeed()": {
        "notice": "The speed at which borrow rewards are tracked (in trackingIndexScale)"
      },
      "baseTrackingSupplySpeed()": {
        "notice": "The speed at which supply rewards are tracked (in trackingIndexScale)"
      },
      "borrowBalanceOf(address)": {
        "notice": "Query the current negative base balance of an account or zero"
      },
      "borrowKink()": {
        "notice": "The point in the borrow rate separating the low interest rate slope and the high interest rate slope (factor)"
      },
      "borrowPerSecondInterestRateBase()": {
        "notice": "Per second borrow base interest rate (factor)"
      },
      "borrowPerSecondInterestRateSlopeHigh()": {
        "notice": "Per second borrow interest rate slope applied when utilization is above kink (factor)"
      },
      "borrowPerSecondInterestRateSlopeLow()": {
        "notice": "Per second borrow interest rate slope applied when utilization is below kink (factor)"
      },
      "buyCollateral(address,uint256,uint256,address)": {
        "notice": "Buy collateral from the protocol using base tokens, increasing protocol reserves A minimum collateral amount should be specified to indicate the maximum slippage acceptable for the buyer."
      },
      "decimals()": {
        "notice": "The number of decimals for wrapped base token"
      },
      "extensionDelegate()": {
        "notice": "The address of the extension contract delegate"
      },
      "getAssetInfo(uint8)": {
        "notice": "Get the i-th asset info, according to the order they were passed in originally"
      },
      "getCollateralReserves(address)": {
        "notice": "Gets the total balance of protocol collateral reserves for an asset"
      },
      "getPrice(address)": {
        "notice": "Get the current price from a feed"
      },
      "getReserves()": {
        "notice": "Gets the total amount of protocol reserves of the base asset"
      },
      "governor()": {
        "notice": "The admin of the protocol"
      },
      "hasPermission(address,address)": {
        "notice": "Determine if the manager has permission to act on behalf of the owner"
      },
      "initialize(address)": {
        "notice": "Initialize storage for a liquidator"
      },
      "initializeStorage()": {
        "notice": "Initialize storage for the contract"
      },
      "isAllowed(address,address)": {
        "notice": "Mapping of users to accounts which may be permitted to manage the user account"
      },
      "isBorrowCollateralized(address)": {
        "notice": "Check whether an account has enough collateral to borrow"
      },
      "isLiquidatable(address)": {
        "notice": "Check whether an account has enough collateral to not be liquidated"
      },
      "liquidatorPoints(address)": {
        "notice": "Mapping of magic liquidator points"
      },
      "numAssets()": {
        "notice": "The number of assets this contract actually supports"
      },
      "pause(bool,bool,bool,bool,bool)": {
        "notice": "Pauses different actions within Comet"
      },
      "pauseGuardian()": {
        "notice": "The account which may trigger pauses"
      },
      "quoteCollateral(address,uint256)": {
        "notice": "Gets the quote for a collateral asset in exchange for an amount of base asset"
      },
      "storeFrontPriceFactor()": {
        "notice": "The fraction of the liquidation penalty that goes to buyers of collateral instead of the protocol"
      },
      "supply(address,uint256)": {
        "notice": "Supply an amount of asset to the protocol"
      },
      "supplyFrom(address,address,address,uint256)": {
        "notice": "Supply an amount of asset from `from` to dst, if allowed"
      },
      "supplyKink()": {
        "notice": "The point in the supply rates separating the low interest rate slope and the high interest rate slope (factor)"
      },
      "supplyPerSecondInterestRateBase()": {
        "notice": "Per second supply base interest rate (factor)"
      },
      "supplyPerSecondInterestRateSlopeHigh()": {
        "notice": "Per second supply interest rate slope applied when utilization is above kink (factor)"
      },
      "supplyPerSecondInterestRateSlopeLow()": {
        "notice": "Per second supply interest rate slope applied when utilization is below kink (factor)"
      },
      "supplyTo(address,address,uint256)": {
        "notice": "Supply an amount of asset to dst"
      },
      "targetReserves()": {
        "notice": "The minimum base token reserves which must be held before collateral is hodled"
      },
      "totalBorrow()": {
        "notice": "Get the total amount of debt"
      },
      "totalSupply()": {
        "notice": "Get the total number of tokens in circulation"
      },
      "totalsCollateral(address)": {
        "notice": "Aggregate variables tracked for each collateral asset"
      },
      "trackingIndexScale()": {
        "notice": "The scale for reward tracking"
      },
      "transfer(address,uint256)": {
        "notice": "ERC20 transfer an amount of base token to dst"
      },
      "transferAsset(address,address,uint256)": {
        "notice": "Transfer an amount of asset to dst"
      },
      "transferAssetFrom(address,address,address,uint256)": {
        "notice": "Transfer an amount of asset from src to dst, if allowed"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "ERC20 transfer an amount of base token from src to dst, if allowed"
      },
      "userBasic(address)": {
        "notice": "Mapping of users to base principal and other basic data"
      },
      "userCollateral(address,address)": {
        "notice": "Mapping of users to collateral data per collateral asset"
      },
      "userNonce(address)": {
        "notice": "The next expected nonce for an address, for validating authorizations via signature"
      },
      "withdraw(address,uint256)": {
        "notice": "Withdraw an amount of asset from the protocol"
      },
      "withdrawFrom(address,address,address,uint256)": {
        "notice": "Withdraw an amount of asset from src to `to`, if allowed"
      },
      "withdrawReserves(address,uint256)": {
        "notice": "Withdraws base token reserves if called by the governor"
      },
      "withdrawTo(address,address,uint256)": {
        "notice": "Withdraw an amount of asset to `to`"
      }
    },
    "notice": "This is solely used for testing upgrades",
    "version": 1
  }
}