{
  "contractName": "TransparentUpgradeableProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "implementation_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/comet/contracts/vendor/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/comet/contracts/vendor/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"project:/contracts/comet/contracts/vendor/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f5abfc32db1d44fd3d38d902879eaeaad827781bb9f954d3ccb8639c55db3c0\",\"dweb:/ipfs/QmVSkxFgWphaUx6w9XdvgwJJuxABdpuVQEbABbRmzd3XFc\"]},\"project:/contracts/comet/contracts/vendor/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"project:/contracts/comet/contracts/vendor/proxy/Proxy.sol\":{\"keccak256\":\"0x0edeb16b9821ae2b16e9d69c383b38d3ad2fbb3e0c06cf809a0786d96e602551\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88adc865fb1bd8dab4c58096e1d5887713f62c0405f8d2d17294727a8f43d8f7\",\"dweb:/ipfs/QmUJ27zsjxCatfoTFWho4k4qdhuBTorMqLuJzWqUX4Sdmg\"]},\"project:/contracts/comet/contracts/vendor/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"project:/contracts/comet/contracts/vendor/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x140055a64cf579d622e04f5a198595832bf2cb193cd0005f4f2d4d61ca906253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3110d13fd267ac03d3cf9611198971db0d12ed2bc0538cddef286090987461f\",\"dweb:/ipfs/QmWPynjSTgd72fRxeX3huVN9GLNLWijFvoVpJMKNESkPb3\"]},\"project:/contracts/comet/contracts/vendor/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"project:/contracts/comet/contracts/vendor/utils/StorageSlot.sol\":{\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbaba7fe0fe556cc5ed291e03d271fd27d395250141ecfb57a4b30d528958ff9\",\"dweb:/ipfs/QmWT653X2DyZo8nqEcmFe3yTkrCJv3ptbZLhbgLU3y6abe\"]}},\"version\":1}",
  "bytecode": "0x608060405262000bc9803803806200001781620000d2565b9283398101606082820312620000ba576200003282620000fe565b916200004160208201620000fe565b604082015190916001600160401b038211620000ba57019282601f85011215620000ba578351936200007d620000778662000113565b620000d2565b9385855260208683010111620000ba57620000aa94620000a491602080870191016200012f565b62000152565b6040516107449081620004858239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f191682016001600160401b03811183821017620000f857604052565b620000be565b51906001600160a01b0382168203620000ba57565b6001600160401b038111620000f857601f01601f191660200190565b5f5b838110620001415750505f910152565b818101518382015260200162000131565b91823b1562000205577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b038516908117909155620001dc93907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2815115801590620001fd575b620001de575b505062000260565b565b620001f491620001ed62000329565b9162000383565b505f80620001d4565b505f620001ce565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039081547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604060018060a01b0381519481851686521693846020820152a18115620002d5576001600160a01b031916179055565b60405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b60405190606082016001600160401b03811183821017620000f85760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b15620003d2575f81620003c69460208394519201905af43d15620003c9573d90620003b6620000778362000113565b9182523d5f602084013e62000426565b90565b60609062000426565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b9091901562000433575090565b815115620004445750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526200047681518092816024860152602086860191016200012f565b601f01601f19168101030190fdfe60806040526004361015610019575b3661034f575b61034f565b5f3560e01c80633659cfe6146100685780634f1ef286146100635780635c60da1b1461005e5780638f283970146100595763f851a4400361000e57610294565b6101b6565b61016a565b6100d2565b346100b85760203660031901126100b8576100816100bc565b5f805160206106cf83398151915254336001600160a01b0390911603610014576100b6906100ad6102e8565b905f8252610412565b005b5f80fd5b600435906001600160a01b03821682036100b857565b60403660031901126100b8576100e66100bc565b60243567ffffffffffffffff918282116100b857366023830112156100b85781600401359283116100b85736602484840101116100b8575f805160206106cf83398151915254336001600160a01b0390911603610014575f6020848060246101586101536100b699610333565b61030d565b968288520183870137840101526104f1565b346100b8575f3660031901126100b8575f805160206106cf833981519152546001600160a01b03903390821603610014575f805160206106ef8339815191525460405191168152602090f35b346100b85760203660031901126100b8576101cf6100bc565b5f805160206106cf83398151915280549091906001600160a01b03903390821603610014577f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519481851686521693846020820152a18115610240576001600160a01b031916179055005b60405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346100b8575f3660031901126100b8575f805160206106cf83398151915280546001600160a01b0390339082160361001457905460405191168152602090f35b634e487b7160e01b5f52604160045260245ffd5b604051906020820182811067ffffffffffffffff82111761030857604052565b6102d4565b6040519190601f01601f1916820167ffffffffffffffff81118382101761030857604052565b67ffffffffffffffff811161030857601f01601f191660200190565b5f805160206106cf833981519152546001600160a01b03908116331461039c575f80915f805160206106ef8339815191525416368280378136915af43d5f803e15610398573d5ff35b3d5ffd5b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a490fd5b803b15610496575f805160206106ef83398151915280546001600160a01b0319166001600160a01b0383169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a281511580159061048f575b61047a575050565b61048c91610486610560565b916105ba565b50565b505f610472565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b803b15610496575f805160206106ef83398151915280546001600160a01b0319166001600160a01b0383169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a28151158015906105585761047a575050565b506001610472565b604051906060820182811067ffffffffffffffff8211176103085760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b15610601575f816105f69460208394519201905af43d156105f9573d906105e761015383610333565b9182523d5f602084013e610655565b90565b606090610655565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b90919015610661575090565b8151156106715750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401525f935b8285106106b5575050604492505f838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061069356feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220d0ff06026cf4a5b5465e5503890c39f07a28d3801ee4275aaca90bc5f99533f664736f6c63430008170033",
  "deployedBytecode": "0x60806040526004361015610019575b3661034f575b61034f565b5f3560e01c80633659cfe6146100685780634f1ef286146100635780635c60da1b1461005e5780638f283970146100595763f851a4400361000e57610294565b6101b6565b61016a565b6100d2565b346100b85760203660031901126100b8576100816100bc565b5f805160206106cf83398151915254336001600160a01b0390911603610014576100b6906100ad6102e8565b905f8252610412565b005b5f80fd5b600435906001600160a01b03821682036100b857565b60403660031901126100b8576100e66100bc565b60243567ffffffffffffffff918282116100b857366023830112156100b85781600401359283116100b85736602484840101116100b8575f805160206106cf83398151915254336001600160a01b0390911603610014575f6020848060246101586101536100b699610333565b61030d565b968288520183870137840101526104f1565b346100b8575f3660031901126100b8575f805160206106cf833981519152546001600160a01b03903390821603610014575f805160206106ef8339815191525460405191168152602090f35b346100b85760203660031901126100b8576101cf6100bc565b5f805160206106cf83398151915280549091906001600160a01b03903390821603610014577f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519481851686521693846020820152a18115610240576001600160a01b031916179055005b60405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346100b8575f3660031901126100b8575f805160206106cf83398151915280546001600160a01b0390339082160361001457905460405191168152602090f35b634e487b7160e01b5f52604160045260245ffd5b604051906020820182811067ffffffffffffffff82111761030857604052565b6102d4565b6040519190601f01601f1916820167ffffffffffffffff81118382101761030857604052565b67ffffffffffffffff811161030857601f01601f191660200190565b5f805160206106cf833981519152546001600160a01b03908116331461039c575f80915f805160206106ef8339815191525416368280378136915af43d5f803e15610398573d5ff35b3d5ffd5b60405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a490fd5b803b15610496575f805160206106ef83398151915280546001600160a01b0319166001600160a01b0383169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a281511580159061048f575b61047a575050565b61048c91610486610560565b916105ba565b50565b505f610472565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b803b15610496575f805160206106ef83398151915280546001600160a01b0319166001600160a01b0383169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a28151158015906105585761047a575050565b506001610472565b604051906060820182811067ffffffffffffffff8211176103085760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b15610601575f816105f69460208394519201905af43d156105f9573d906105e761015383610333565b9182523d5f602084013e610655565b90565b606090610655565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b90919015610661575090565b8151156106715750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401525f935b8285106106b5575050604492505f838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061069356feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220d0ff06026cf4a5b5465e5503890c39f07a28d3801ee4275aaca90bc5f99533f664736f6c63430008170033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "1634:3556:36:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;1634:3556:36;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;-1:-1:-1;1634:3556:36;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1634:3556:36;;;-1:-1:-1;;;;;1634:3556:36;;;;;;;;;;:::o;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1634:3556:36;;;;;;:::o;:::-;-1:-1:-1;;;;;1634:3556:36;;;;;;-1:-1:-1;;1634:3556:36;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1634:3556:36;;;;:::o;:::-;;;;;;;;;;;;;1908:254;;1465:19:37;;:23;1634:3556:36;;1030:66:32;1634:3556:36;;-1:-1:-1;;;;;;1634:3556:36;-1:-1:-1;;;;;1634:3556:36;;;;;;;;2148:6;;1634:3556;2015:27:32;-1:-1:-1;;2015:27:32;1634:3556:36;;2364:15:32;;;:28;;;1908:254:36;2360:112:32;;1908:254:36;2148:6;;;:::i;:::-;1908:254::o;2360:112:32:-;6684:77:37;1634:3556:36;;;:::i;:::-;6684:77:37;;:::i;:::-;;2360:112:32;;;;2364:28;;-1:-1:-1;2364:28:32;;1634:3556:36;;;-1:-1:-1;;;1634:3556:36;;;;;;;;;;;;;;;;;-1:-1:-1;;;1634:3556:36;;;;;;;4624:135:32;3842:66;1634:3556:36;;;4688:35:32;1634:3556:36;;;;;;;;;;;;;;;;;;;;;4688:35:32;4375:22;;1634:3556:36;;-1:-1:-1;;;;;;1634:3556:36;;;;4624:135:32:o;1634:3556:36:-;;;-1:-1:-1;;;1634:3556:36;;;;;;;;;;;;;;;;;-1:-1:-1;;;1634:3556:36;;;;;;;;;;;;;;-1:-1:-1;;;;;1634:3556:36;;;;;;;;;;;;;-1:-1:-1;;;1634:3556:36;;;;;;;;;:::o;6954:387:37:-;;;1465:19;;:23;1634:3556:36;;-1:-1:-1;7241:25:37;7283:51;7241:25;;;;;;;;;;1634:3556:36;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7241:25:37;1634:3556:36;;;7283:51:37;:::i;:::-;6954:387;:::o;1634:3556:36:-;;;7283:51:37;:::i;1634:3556:36:-;;;-1:-1:-1;;;1634:3556:36;;;;;;;;;;;;;;;;;-1:-1:-1;;;1634:3556:36;;;;;;;7561:692:37;;;;7731:516;;;7758:17;;:::o;7731:516::-;1634:3556:36;;7876:21:37;:17;;8010:154;;;;;;;7872:365;1634:3556:36;;;;;;;;8202:20:37;;1634:3556:36;8202:20:37;;;1634:3556:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1634:3556:36;;;8202:20:37;;;",
  "deployedSourceMap": "1634:3556:36:-:0;;;;;;;;;-1:-1:-1;1634:3556:36;2853:63:33;1634:3556:36;;2853:63:33;:::i;1634:3556:36:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;1634:3556:36;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3842:66:32;2336:10:36;-1:-1:-1;;;;;1634:3556:36;;;2336:25;1634:3556;;4153:5;1634:3556;;;:::i;:::-;;;;;4153:5;:::i;:::-;1634:3556;;;;;;;;;-1:-1:-1;;;;;1634:3556:36;;;;;;:::o;:::-;;;-1:-1:-1;;1634:3556:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3842:66:32;2336:10:36;-1:-1:-1;;;;;1634:3556:36;;;2336:25;1634:3556;;-1:-1:-1;1634:3556:36;;;;;;4651:48;1634:3556;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;4651:48;:::i;1634:3556::-;;;;;;-1:-1:-1;;1634:3556:36;;;;-1:-1:-1;;;;;;;;;;;3842:66:32;-1:-1:-1;;;;;1634:3556:36;2336:10;1634:3556;;;2336:25;1634:3556;;-1:-1:-1;;;;;;;;;;;3842:66:32;1634:3556:36;;;;;;;;;;;;;;;-1:-1:-1;;1634:3556:36;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3842:66:32;;;;;-1:-1:-1;;;;;1634:3556:36;2336:10;1634:3556;;;2336:25;1634:3556;;4688:35:32;1634:3556:36;3842:66:32;;1634:3556:36;;;;;;;;;;;;;;;;4688:35:32;4375:22;;1634:3556:36;;-1:-1:-1;;;;;;1634:3556:36;;;;;;;;-1:-1:-1;;;1634:3556:36;;;;;;;;;;;;;;;;;-1:-1:-1;;;1634:3556:36;;;;;;;;;;;;;-1:-1:-1;;1634:3556:36;;;;-1:-1:-1;;;;;;;;;;;3842:66:32;;-1:-1:-1;;;;;1634:3556:36;2336:10;1634:3556;;;2336:25;1634:3556;;3842:66:32;;1634:3556:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;1634:3556:36;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1634:3556:36;;;;:::o;2322:110:33:-;-1:-1:-1;;;;;;;;;;;3842:66:32;-1:-1:-1;;;;;1634:3556:36;;;5052:10;:25;1634:3556;;1018:819:33;3842:66:32;;-1:-1:-1;;;;;;;;;;;3842:66:32;1634:3556:36;1018:819:33;;;;;;;;;;;;;;;;;;;;;;;1634:3556:36;;;-1:-1:-1;;;1634:3556:36;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1634:3556:36;;;;;;;2183:295:32;1465:19:37;;:23;1634:3556:36;;-1:-1:-1;;;;;;;;;;;1634:3556:36;;-1:-1:-1;;;;;;1634:3556:36;-1:-1:-1;;;;;1634:3556:36;;;;;;;;2015:27:32;-1:-1:-1;;2015:27:32;1634:3556:36;;2364:15:32;;;:28;;;2183:295;2360:112;;2183:295;;:::o;2360:112::-;6684:77:37;1634:3556:36;;;:::i;:::-;6684:77:37;;:::i;:::-;;2183:295:32:o;2364:28::-;;1634:3556:36;2364:28:32;;1634:3556:36;;;-1:-1:-1;;;1634:3556:36;;;;;;;;;;;;;;;;;-1:-1:-1;;;1634:3556:36;;;;;;;2183:295:32;1465:19:37;;:23;1634:3556:36;;-1:-1:-1;;;;;;;;;;;1634:3556:36;;-1:-1:-1;;;;;;1634:3556:36;-1:-1:-1;;;;;1634:3556:36;;;;;;;;2015:27:32;-1:-1:-1;;2015:27:32;1634:3556:36;;2364:15:32;;;:28;;;2360:112;;2183:295;;:::o;2364:28::-;;4694:4:36;2364:28:32;;1634:3556:36;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1634:3556:36;;;;;;;;;:::o;6954:387:37:-;;;1465:19;;:23;1634:3556:36;;-1:-1:-1;7241:25:37;7283:51;7241:25;;;;;;;;;;1634:3556:36;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;7241:25:37;1634:3556:36;;;7283:51:37;:::i;:::-;6954:387;:::o;1634:3556:36:-;;;7283:51:37;:::i;1634:3556:36:-;;;-1:-1:-1;;;1634:3556:36;;;;;;;;;;;;;;;;;-1:-1:-1;;;1634:3556:36;;;;;;;7561:692:37;;;;7731:516;;;7758:17;;:::o;7731:516::-;1634:3556:36;;7876:21:37;:17;;8010:154;;;;;;;7872:365;1634:3556:36;;;;;;8202:20:37;;1634:3556:36;;;8202:20:37;;;1634:3556:36;;;;;;;;;7896:1:37;1634:3556:36;;;;;;;;;;;;7896:1:37;1634:3556:36;;;;;;;;;;;;;;8202:20:37;;;;1634:3556:36;;;;;;;;;;;;;;;;;;;-1:-1:-1;1634:3556:36;",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/transparent/TransparentUpgradeableProxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC1967/ERC1967Proxy.sol\";\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches one of the admin functions exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n * \"admin cannot fallback to proxy target\".\n *\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n * to sudden errors when trying to call a function from the proxy implementation.\n *\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    /**\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\n     */\n    constructor(\n        address _logic,\n        address admin_,\n        bytes memory _data\n    ) payable ERC1967Proxy(_logic, _data) {\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1));\n        _changeAdmin(admin_);\n    }\n\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _getAdmin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function admin() external ifAdmin returns (address admin_) {\n        admin_ = _getAdmin();\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function implementation() external ifAdmin returns (address implementation_) {\n        implementation_ = _implementation();\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\n     */\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\n        _changeAdmin(newAdmin);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\n     */\n    function upgradeTo(address newImplementation) external ifAdmin {\n        _upgradeToAndCall(newImplementation, bytes(\"\"), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\n     */\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\n        _upgradeToAndCall(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _admin() internal view virtual returns (address) {\n        return _getAdmin();\n    }\n\n    /**\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\n     */\n    function _beforeFallback() internal virtual override {\n        require(msg.sender != _getAdmin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\");\n        super._beforeFallback();\n    }\n}\n",
  "sourcePath": "/home/stephensb/sb-labs/solidity-contracts/contracts/comet/contracts/vendor/proxy/transparent/TransparentUpgradeableProxy.sol",
  "ast": {
    "absolutePath": "project:/contracts/comet/contracts/vendor/proxy/transparent/TransparentUpgradeableProxy.sol",
    "exportedSymbols": {
      "Address": [
        4254
      ],
      "ERC1967Proxy": [
        3279
      ],
      "ERC1967Upgrade": [
        3597
      ],
      "IBeacon": [
        3659
      ],
      "IERC1822Proxiable": [
        3224
      ],
      "Proxy": [
        3649
      ],
      "StorageSlot": [
        4336
      ],
      "TransparentUpgradeableProxy": [
        3959
      ]
    },
    "id": 3960,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3797,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "118:23:36"
      },
      {
        "absolutePath": "project:/contracts/comet/contracts/vendor/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "../ERC1967/ERC1967Proxy.sol",
        "id": 3798,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3960,
        "sourceUnit": 3280,
        "src": "143:37:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3800,
              "name": "ERC1967Proxy",
              "nameLocations": [
                "1674:12:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3279,
              "src": "1674:12:36"
            },
            "id": 3801,
            "nodeType": "InheritanceSpecifier",
            "src": "1674:12:36"
          }
        ],
        "canonicalName": "TransparentUpgradeableProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3799,
          "nodeType": "StructuredDocumentation",
          "src": "182:1451:36",
          "text": " @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy."
        },
        "fullyImplemented": true,
        "id": 3959,
        "linearizedBaseContracts": [
          3959,
          3279,
          3597,
          3649
        ],
        "name": "TransparentUpgradeableProxy",
        "nameLocation": "1643:27:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3835,
              "nodeType": "Block",
              "src": "2038:124:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3816,
                          "name": "_ADMIN_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3437,
                          "src": "2055:11:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e61646d696e",
                                        "id": 3822,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2096:21:36",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        },
                                        "value": "eip1967.proxy.admin"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        }
                                      ],
                                      "id": 3821,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "2086:9:36",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 3823,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2086:32:36",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 3820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2078:7:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 3819,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2078:7:36",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2078:41:36",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 3825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2122:1:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "2078:45:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2070:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 3817,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2070:7:36",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2070:54:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2055:69:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3815,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "2048:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2048:77:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3830,
                  "nodeType": "ExpressionStatement",
                  "src": "2048:77:36"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3832,
                        "name": "admin_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3806,
                        "src": "2148:6:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3831,
                      "name": "_changeAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3500,
                      "src": "2135:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:20:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3834,
                  "nodeType": "ExpressionStatement",
                  "src": "2135:20:36"
                }
              ]
            },
            "documentation": {
              "id": 3802,
              "nodeType": "StructuredDocumentation",
              "src": "1693:210:36",
              "text": " @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
            },
            "id": 3836,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3811,
                    "name": "_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3804,
                    "src": "2023:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 3812,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3808,
                    "src": "2031:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 3813,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3810,
                  "name": "ERC1967Proxy",
                  "nameLocations": [
                    "2010:12:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3279,
                  "src": "2010:12:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "2010:27:36"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3804,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "1937:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "1929:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1929:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3806,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "1961:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "1953:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3808,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1990:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "1977:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3807,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1977:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1919:82:36"
            },
            "returnParameters": {
              "id": 3814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2038:0:36"
            },
            "scope": 3959,
            "src": "1908:254:36",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3851,
              "nodeType": "Block",
              "src": "2322:115:36",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3839,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2336:3:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2340:6:36",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2336:10:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3841,
                        "name": "_getAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3457,
                        "src": "2350:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2350:11:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2336:25:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3849,
                    "nodeType": "Block",
                    "src": "2395:36:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3846,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3627,
                            "src": "2409:9:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2409:11:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3848,
                        "nodeType": "ExpressionStatement",
                        "src": "2409:11:36"
                      }
                    ]
                  },
                  "id": 3850,
                  "nodeType": "IfStatement",
                  "src": "2332:99:36",
                  "trueBody": {
                    "id": 3845,
                    "nodeType": "Block",
                    "src": "2363:26:36",
                    "statements": [
                      {
                        "id": 3844,
                        "nodeType": "PlaceholderStatement",
                        "src": "2377:1:36"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3837,
              "nodeType": "StructuredDocumentation",
              "src": "2168:130:36",
              "text": " @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin."
            },
            "id": 3852,
            "name": "ifAdmin",
            "nameLocation": "2312:7:36",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3838,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2319:2:36"
            },
            "src": "2303:134:36",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3865,
              "nodeType": "Block",
              "src": "2938:37:36",
              "statements": [
                {
                  "expression": {
                    "id": 3863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3860,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3858,
                      "src": "2948:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3861,
                        "name": "_getAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3457,
                        "src": "2957:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2957:11:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2948:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3864,
                  "nodeType": "ExpressionStatement",
                  "src": "2948:20:36"
                }
              ]
            },
            "documentation": {
              "id": 3853,
              "nodeType": "StructuredDocumentation",
              "src": "2443:431:36",
              "text": " @dev Returns the current admin.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
            },
            "functionSelector": "f851a440",
            "id": 3866,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3856,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3855,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "2905:7:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3852,
                  "src": "2905:7:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "2905:7:36"
              }
            ],
            "name": "admin",
            "nameLocation": "2888:5:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2893:2:36"
            },
            "returnParameters": {
              "id": 3859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3858,
                  "mutability": "mutable",
                  "name": "admin_",
                  "nameLocation": "2930:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 3866,
                  "src": "2922:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2922:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2921:16:36"
            },
            "scope": 3959,
            "src": "2879:96:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3879,
              "nodeType": "Block",
              "src": "3512:52:36",
              "statements": [
                {
                  "expression": {
                    "id": 3877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3874,
                      "name": "implementation_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3872,
                      "src": "3522:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 3875,
                        "name": "_implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          3278
                        ],
                        "referencedDeclaration": 3278,
                        "src": "3540:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 3876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3540:17:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3522:35:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3878,
                  "nodeType": "ExpressionStatement",
                  "src": "3522:35:36"
                }
              ]
            },
            "documentation": {
              "id": 3867,
              "nodeType": "StructuredDocumentation",
              "src": "2981:449:36",
              "text": " @dev Returns the current implementation.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
            },
            "functionSelector": "5c60da1b",
            "id": 3880,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3870,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3869,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "3470:7:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3852,
                  "src": "3470:7:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "3470:7:36"
              }
            ],
            "name": "implementation",
            "nameLocation": "3444:14:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3458:2:36"
            },
            "returnParameters": {
              "id": 3873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3872,
                  "mutability": "mutable",
                  "name": "implementation_",
                  "nameLocation": "3495:15:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 3880,
                  "src": "3487:23:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3487:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3486:25:36"
            },
            "scope": 3959,
            "src": "3435:129:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3892,
              "nodeType": "Block",
              "src": "3833:39:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3889,
                        "name": "newAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3883,
                        "src": "3856:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3888,
                      "name": "_changeAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3500,
                      "src": "3843:12:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3843:22:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3891,
                  "nodeType": "ExpressionStatement",
                  "src": "3843:22:36"
                }
              ]
            },
            "documentation": {
              "id": 3881,
              "nodeType": "StructuredDocumentation",
              "src": "3570:194:36",
              "text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event.\n NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
            },
            "functionSelector": "8f283970",
            "id": 3893,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3886,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3885,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "3825:7:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3852,
                  "src": "3825:7:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "3825:7:36"
              }
            ],
            "name": "changeAdmin",
            "nameLocation": "3778:11:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3883,
                  "mutability": "mutable",
                  "name": "newAdmin",
                  "nameLocation": "3798:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 3893,
                  "src": "3790:16:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3882,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3790:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3789:18:36"
            },
            "returnParameters": {
              "id": 3887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3833:0:36"
            },
            "scope": 3959,
            "src": "3769:103:36",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3910,
              "nodeType": "Block",
              "src": "4095:71:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3902,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3896,
                        "src": "4123:17:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 3905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4148:2:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 3904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4142:5:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 3903,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4142:5:36",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4142:9:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 3907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4153:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3901,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3380,
                      "src": "4105:17:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 3908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4105:54:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3909,
                  "nodeType": "ExpressionStatement",
                  "src": "4105:54:36"
                }
              ]
            },
            "documentation": {
              "id": 3894,
              "nodeType": "StructuredDocumentation",
              "src": "3878:149:36",
              "text": " @dev Upgrade the implementation of the proxy.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
            },
            "functionSelector": "3659cfe6",
            "id": 3911,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3899,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3898,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "4087:7:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3852,
                  "src": "4087:7:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "4087:7:36"
              }
            ],
            "name": "upgradeTo",
            "nameLocation": "4041:9:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3896,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "4059:17:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 3911,
                  "src": "4051:25:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4051:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4050:27:36"
            },
            "returnParameters": {
              "id": 3900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4095:0:36"
            },
            "scope": 3959,
            "src": "4032:134:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3927,
              "nodeType": "Block",
              "src": "4641:65:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3922,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3914,
                        "src": "4669:17:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3923,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3916,
                        "src": "4688:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 3924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4694:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3921,
                      "name": "_upgradeToAndCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3380,
                      "src": "4651:17:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 3925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4651:48:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3926,
                  "nodeType": "ExpressionStatement",
                  "src": "4651:48:36"
                }
              ]
            },
            "documentation": {
              "id": 3912,
              "nodeType": "StructuredDocumentation",
              "src": "4172:365:36",
              "text": " @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
            },
            "functionSelector": "4f1ef286",
            "id": 3928,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3919,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3918,
                  "name": "ifAdmin",
                  "nameLocations": [
                    "4633:7:36"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3852,
                  "src": "4633:7:36"
                },
                "nodeType": "ModifierInvocation",
                "src": "4633:7:36"
              }
            ],
            "name": "upgradeToAndCall",
            "nameLocation": "4551:16:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3914,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "4576:17:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 3928,
                  "src": "4568:25:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4568:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3916,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4610:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 3928,
                  "src": "4595:19:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3915,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4595:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4567:48:36"
            },
            "returnParameters": {
              "id": 3920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4641:0:36"
            },
            "scope": 3959,
            "src": "4542:164:36",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3937,
              "nodeType": "Block",
              "src": "4825:35:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3934,
                      "name": "_getAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3457,
                      "src": "4842:9:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 3935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4842:11:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3933,
                  "id": 3936,
                  "nodeType": "Return",
                  "src": "4835:18:36"
                }
              ]
            },
            "documentation": {
              "id": 3929,
              "nodeType": "StructuredDocumentation",
              "src": "4712:50:36",
              "text": " @dev Returns the current admin."
            },
            "id": 3938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_admin",
            "nameLocation": "4776:6:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4782:2:36"
            },
            "returnParameters": {
              "id": 3933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3932,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3938,
                  "src": "4816:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4816:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4815:9:36"
            },
            "scope": 3959,
            "src": "4767:93:36",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3648
            ],
            "body": {
              "id": 3957,
              "nodeType": "Block",
              "src": "5034:154:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3944,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5052:3:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5056:6:36",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5052:10:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3946,
                            "name": "_getAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3457,
                            "src": "5066:9:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 3947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5066:11:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5052:25:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574",
                        "id": 3949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5079:68:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        },
                        "value": "TransparentUpgradeableProxy: admin cannot fallback to proxy target"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                          "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                        }
                      ],
                      "id": 3943,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5044:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5044:104:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3951,
                  "nodeType": "ExpressionStatement",
                  "src": "5044:104:36"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 3952,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5158:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TransparentUpgradeableProxy_$3959_$",
                          "typeString": "type(contract super TransparentUpgradeableProxy)"
                        }
                      },
                      "id": 3954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5164:15:36",
                      "memberName": "_beforeFallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3648,
                      "src": "5158:21:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5158:23:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3956,
                  "nodeType": "ExpressionStatement",
                  "src": "5158:23:36"
                }
              ]
            },
            "documentation": {
              "id": 3939,
              "nodeType": "StructuredDocumentation",
              "src": "4866:110:36",
              "text": " @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}."
            },
            "id": 3958,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeFallback",
            "nameLocation": "4990:15:36",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3941,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5025:8:36"
            },
            "parameters": {
              "id": 3940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5005:2:36"
            },
            "returnParameters": {
              "id": 3942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5034:0:36"
            },
            "scope": 3959,
            "src": "4981:207:36",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 3960,
        "src": "1634:3556:36",
        "usedErrors": [],
        "usedEvents": [
          3298,
          3444,
          3509
        ]
      }
    ],
    "src": "118:5073:36"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.23+commit.f704f362.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-11-30T22:41:29.746Z",
  "devdoc": {
    "details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
    "events": {
      "AdminChanged(address,address)": {
        "details": "Emitted when the admin account has changed."
      },
      "BeaconUpgraded(address)": {
        "details": "Emitted when the beacon is upgraded."
      },
      "Upgraded(address)": {
        "details": "Emitted when the implementation is upgraded."
      }
    },
    "kind": "dev",
    "methods": {
      "admin()": {
        "details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
      },
      "changeAdmin(address)": {
        "details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
      },
      "constructor": {
        "details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
      },
      "implementation()": {
        "details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
      },
      "upgradeTo(address)": {
        "details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}