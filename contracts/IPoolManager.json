{
  "contractName": "IPoolManager",
  "abi": [
    {
      "inputs": [],
      "name": "CurrenciesOutOfOrderOrEqual",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CurrencyNotSettled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FeeNotDynamic",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FeeTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "locker",
          "type": "address"
        }
      ],
      "name": "LockedBy",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MaxCurrenciesTouched",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotPoolManagerToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PoolNotInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProtocolFeeCannotBeFetched",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TickSpacingTooLarge",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TickSpacingTooSmall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Currency",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "PoolId",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "dynamicSwapFee",
          "type": "uint24"
        }
      ],
      "name": "DynamicSwapFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "PoolId",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "hookFees",
          "type": "uint24"
        }
      ],
      "name": "HookFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "PoolId",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "Currency",
          "name": "currency0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Currency",
          "name": "currency1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        },
        {
          "indexed": false,
          "internalType": "int24",
          "name": "tickSpacing",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "contract IHooks",
          "name": "hooks",
          "type": "address"
        }
      ],
      "name": "Initialize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Currency",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "PoolId",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int24",
          "name": "tickLower",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "int24",
          "name": "tickUpper",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "liquidityDelta",
          "type": "int256"
        }
      ],
      "name": "ModifyPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "protocolFeeController",
          "type": "address"
        }
      ],
      "name": "ProtocolFeeControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "PoolId",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "protocolFees",
          "type": "uint24"
        }
      ],
      "name": "ProtocolFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "PoolId",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int128",
          "name": "amount0",
          "type": "int128"
        },
        {
          "indexed": false,
          "internalType": "int128",
          "name": "amount1",
          "type": "int128"
        },
        {
          "indexed": false,
          "internalType": "uint160",
          "name": "sqrtPriceX96",
          "type": "uint160"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        },
        {
          "indexed": false,
          "internalType": "uint24",
          "name": "fee",
          "type": "uint24"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "Currency",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MIN_PROTOCOL_FEE_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "Currency",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "Currency",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hookFeesAccrued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Currency",
          "name": "",
          "type": "address"
        }
      ],
      "name": "protocolFeesAccrued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "Currency",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_TICK_SPACING",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_TICK_SPACING",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "PoolId",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "getSlot0",
      "outputs": [
        {
          "internalType": "uint160",
          "name": "sqrtPriceX96",
          "type": "uint160"
        },
        {
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        },
        {
          "internalType": "uint24",
          "name": "protocolFees",
          "type": "uint24"
        },
        {
          "internalType": "uint24",
          "name": "hookFees",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "PoolId",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "int24",
          "name": "tickLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "tickUpper",
          "type": "int24"
        }
      ],
      "name": "getLiquidity",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "PoolId",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "getLiquidity",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "liquidity",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "PoolId",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "int24",
          "name": "tickLower",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "tickUpper",
          "type": "int24"
        }
      ],
      "name": "getPosition",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "liquidity",
              "type": "uint128"
            },
            {
              "internalType": "uint256",
              "name": "feeGrowthInside0LastX128",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeGrowthInside1LastX128",
              "type": "uint256"
            }
          ],
          "internalType": "struct Position.Info",
          "name": "position",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Currency",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "reservesOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "getLock",
      "outputs": [
        {
          "internalType": "address",
          "name": "locker",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLockLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_length",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLockNonzeroDeltaCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_nonzeroDeltaCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "key",
          "type": "tuple"
        },
        {
          "internalType": "uint160",
          "name": "sqrtPriceX96",
          "type": "uint160"
        },
        {
          "internalType": "bytes",
          "name": "hookData",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "locker",
          "type": "address"
        },
        {
          "internalType": "Currency",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "currencyDelta",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "lock",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "key",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24"
            },
            {
              "internalType": "int256",
              "name": "liquidityDelta",
              "type": "int256"
            }
          ],
          "internalType": "struct IPoolManager.ModifyPositionParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "hookData",
          "type": "bytes"
        }
      ],
      "name": "modifyPosition",
      "outputs": [
        {
          "internalType": "BalanceDelta",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "key",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "zeroForOne",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountSpecified",
              "type": "int256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct IPoolManager.SwapParams",
          "name": "params",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "hookData",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [
        {
          "internalType": "BalanceDelta",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "key",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "hookData",
          "type": "bytes"
        }
      ],
      "name": "donate",
      "outputs": [
        {
          "internalType": "BalanceDelta",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Currency",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "take",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Currency",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Currency",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Currency",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "settle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "paid",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "key",
          "type": "tuple"
        }
      ],
      "name": "setProtocolFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "key",
          "type": "tuple"
        }
      ],
      "name": "setHookFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "key",
          "type": "tuple"
        }
      ],
      "name": "updateDynamicSwapFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "slot",
          "type": "bytes32"
        }
      ],
      "name": "extsload",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "value",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "slot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "nSlots",
          "type": "uint256"
        }
      ],
      "name": "extsload",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CurrenciesOutOfOrderOrEqual\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyNotSettled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeNotDynamic\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeeTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"locker\",\"type\":\"address\"}],\"name\":\"LockedBy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxCurrenciesTouched\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManagerToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PoolNotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProtocolFeeCannotBeFetched\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TickSpacingTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TickSpacingTooSmall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"dynamicSwapFee\",\"type\":\"uint24\"}],\"name\":\"DynamicSwapFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"hookFees\",\"type\":\"uint24\"}],\"name\":\"HookFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"}],\"name\":\"ModifyPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"protocolFeeController\",\"type\":\"address\"}],\"name\":\"ProtocolFeeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"protocolFees\",\"type\":\"uint24\"}],\"name\":\"ProtocolFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount0\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"amount1\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_TICK_SPACING\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PROTOCOL_FEE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_TICK_SPACING\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"locker\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"currencyDelta\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"donate\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"nSlots\",\"type\":\"uint256\"}],\"name\":\"extsload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"getLock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"locker\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_length\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockNonzeroDeltaCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonzeroDeltaCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"}],\"internalType\":\"struct Position.Info\",\"name\":\"position\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"PoolId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getSlot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint24\",\"name\":\"protocolFees\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"hookFees\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hookFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"lock\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"}],\"internalType\":\"struct IPoolManager.ModifyPositionParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"modifyPosition\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"protocolFeesAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"reservesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"setHookFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"setProtocolFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"settle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"take\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"}],\"name\":\"updateDynamicSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"LockedBy(address)\":[{\"params\":{\"locker\":\"The current locker\"}}]},\"events\":{\"Initialize(bytes32,address,address,uint24,int24,address)\":{\"params\":{\"currency0\":\"The first currency of the pool by address sort order\",\"currency1\":\"The second currency of the pool by address sort order\",\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"hooks\":\"The hooks contract address for the pool, or address(0) if none\",\"id\":\"The abi encoded hash of the pool key struct for the new pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\"}},\"ModifyPosition(bytes32,address,int24,int24,int256)\":{\"params\":{\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidityDelta\":\"The amount of liquidity that was added or removed\",\"sender\":\"The address that modified the pool\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"params\":{\"amount0\":\"The delta of the currency0 balance of the pool\",\"amount1\":\"The delta of the currency1 balance of the pool\",\"id\":\"The abi encoded hash of the pool key struct for the pool that was modified\",\"liquidity\":\"The liquidity of the pool after the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of the price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,address)\":{\"params\":{\"account\":\"The account to get the balance of\",\"currency\":\"The currency to get the balance of\"}},\"currencyDelta(address,address)\":{\"params\":{\"currency\":\"The currency for which to lookup the delta\",\"locker\":\"The address of the locker\"}},\"extsload(bytes32)\":{\"params\":{\"slot\":\"Key of slot to sload\"},\"returns\":{\"value\":\"The value of the slot as bytes32\"}},\"extsload(bytes32,uint256)\":{\"params\":{\"nSlots\":\"Number of slots to load into return value\",\"slot\":\"Key of slot to start sloading from\"},\"returns\":{\"value\":\"The value of the sload-ed slots concatenated as dynamic bytes\"}},\"lock(bytes)\":{\"params\":{\"data\":\"Any data to pass to the callback, via `ILockCallback(msg.sender).lockAcquired(data)`\"},\"returns\":{\"_0\":\"The data returned by the call to `ILockCallback(msg.sender).lockAcquired(data)`\"}},\"take(address,address,uint256)\":{\"details\":\"Can also be used as a mechanism for _free_ flash loans\"},\"transfer(address,address,uint256)\":{\"details\":\"Will revert if the sender does not have enough balance\",\"params\":{\"amount\":\"The amount to transfer\",\"currency\":\"The currency to transfer\",\"to\":\"The address to transfer to\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CurrenciesOutOfOrderOrEqual()\":[{\"notice\":\"PoolKey must have currencies where address(currency0) < address(currency1)\"}],\"CurrencyNotSettled()\":[{\"notice\":\"Thrown when a currency is not netted out after a lock\"}],\"FeeNotDynamic()\":[{\"notice\":\"Thrown when a pool does not have a dynamic fee.\"}],\"FeeTooLarge()\":[{\"notice\":\"Thrown when the protocol fee denominator is less than 4. Also thrown when the static or dynamic fee on a pool is exceeds 100%.\"}],\"InsufficientBalance()\":[{\"notice\":\"Thrown when user has insufficient Claims balance\"}],\"InvalidAddress()\":[{\"notice\":\"Thrown when transferring Claims to this address\"}],\"LockedBy(address)\":[{\"notice\":\"Thrown when a function is called by an address that is not the current locker\"}],\"MaxCurrenciesTouched()\":[{\"notice\":\"Thrown when currencies touched has exceeded max of 256\"}],\"NotPoolManagerToken()\":[{\"notice\":\"The ERC1155 being deposited is not the Uniswap ERC1155\"}],\"PoolNotInitialized()\":[{\"notice\":\"Thrown when trying to interact with a non-initialized pool\"}],\"ProtocolFeeCannotBeFetched()\":[{\"notice\":\"Thrown when not enough gas is provided to look up the protocol fee\"}],\"TickSpacingTooLarge()\":[{\"notice\":\"Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow\"}],\"TickSpacingTooSmall()\":[{\"notice\":\"Pools must have a positive non-zero tickSpacing passed to #initialize\"}]},\"events\":{\"Burn(address,address,uint256)\":{\"notice\":\"Emitted when burning `amount` of currency Claims from address\"},\"Initialize(bytes32,address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a new pool is initialized\"},\"Mint(address,address,uint256)\":{\"notice\":\"Emitted when minting `amount` of currency Claims to address\"},\"ModifyPosition(bytes32,address,int24,int24,int256)\":{\"notice\":\"Emitted when a liquidity position is modified\"},\"Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)\":{\"notice\":\"Emitted for swaps between currency0 and currency1\"},\"Transfer(address,address,address,uint256)\":{\"notice\":\"Emitted when transferring `amount` of currency Claims\"}},\"kind\":\"user\",\"methods\":{\"MAX_TICK_SPACING()\":{\"notice\":\"Returns the constant representing the maximum tickSpacing for an initialized pool key\"},\"MIN_PROTOCOL_FEE_DENOMINATOR()\":{\"notice\":\"Returns the minimum denominator for the protocol fee, which restricts it to a maximum of 25%\"},\"MIN_TICK_SPACING()\":{\"notice\":\"Returns the constant representing the minimum tickSpacing for an initialized pool key\"},\"balanceOf(address,address)\":{\"notice\":\"Get the balance of `account` for `currency`\"},\"burn(address,uint256)\":{\"notice\":\"Called by the user to redeem their Claims balance\"},\"currencyDelta(address,address)\":{\"notice\":\"Get the current delta for a locker in the given currency\"},\"donate((address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"Donate the given currency amounts to the pool with the given pool key\"},\"extsload(bytes32)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"extsload(bytes32,uint256)\":{\"notice\":\"Called by external contracts to access granular pool state\"},\"getLiquidity(bytes32)\":{\"notice\":\"Get the current value of liquidity of the given pool\"},\"getLiquidity(bytes32,address,int24,int24)\":{\"notice\":\"Get the current value of liquidity for the specified pool and position\"},\"getLock(uint256)\":{\"notice\":\"Returns the locker in the ith position of the locker queue.\"},\"getLockLength()\":{\"notice\":\"Returns the length of the lockers array, which is the number of locks open on the PoolManager.\"},\"getLockNonzeroDeltaCount()\":{\"notice\":\"Returns the number of nonzero deltas open on the PoolManager that must be zerod by the close of the initial lock.\"},\"getPosition(bytes32,address,int24,int24)\":{\"notice\":\"Get the position struct for a specified pool and position\"},\"getSlot0(bytes32)\":{\"notice\":\"Get the current value in slot0 of the given pool\"},\"hookFeesAccrued(address,address)\":{\"notice\":\"Given a hook and a currency address, returns the fees accrued\"},\"initialize((address,address,uint24,int24,address),uint160,bytes)\":{\"notice\":\"Initialize the state for a given pool ID\"},\"lock(bytes)\":{\"notice\":\"All operations go through this function\"},\"mint(address,address,uint256)\":{\"notice\":\"Called by the user to move value into Claims balance\"},\"modifyPosition((address,address,uint24,int24,address),(int24,int24,int256),bytes)\":{\"notice\":\"Modify the position for the given pool\"},\"protocolFeesAccrued(address)\":{\"notice\":\"Given a currency address, returns the protocol fees accrued in that currency\"},\"reservesOf(address)\":{\"notice\":\"Returns the reserves for a given ERC20 currency\"},\"setHookFees((address,address,uint24,int24,address))\":{\"notice\":\"Sets the hook's swap and withdrawal fees for the given pool\"},\"setProtocolFees((address,address,uint24,int24,address))\":{\"notice\":\"Sets the protocol's swap and withdrawal fees for the given pool Protocol fees are always a portion of a fee that is owed. If that underlying fee is 0, no protocol fees will accrue even if it is set to > 0.\"},\"settle(address)\":{\"notice\":\"Called by the user to pay what is owed\"},\"swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"Swap against the given pool\"},\"take(address,address,uint256)\":{\"notice\":\"Called by the user to net out some value owed to the user\"},\"transfer(address,address,uint256)\":{\"notice\":\"Transfer `amount` of `currency` from sender to `to`\"},\"updateDynamicSwapFee((address,address,uint24,int24,address))\":{\"notice\":\"Updates the pools swap fees for the a pool that has enabled dynamic swap fees.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/v4-core/src/interfaces/IPoolManager.sol\":\"IPoolManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/v4-core/src/interfaces/IClaims.sol\":{\"keccak256\":\"0xdf74a92ef73ec38d1f3fdb83a217a805fee5a9e8d50a079d429dcdf88728a1e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4f73e8176929eed516327517ca2d37804348e6073d5b50b5a1396337f089281\",\"dweb:/ipfs/QmWdk99E4PtBBSLe39qPRacFDK52avHN65XAN12CYbCGpU\"]},\"project:/contracts/v4-core/src/interfaces/IFees.sol\":{\"keccak256\":\"0x7a2d2b74602f23a8944b45c745e8a512f7d8f00f8ba22742636abaf929379697\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab38548046bb65d089fd56b335a3b98d2b4f03e9af4763c2b7da2b04322a6e73\",\"dweb:/ipfs/QmVQfsaSwqV8ynqc9KEGWjQkxnAzju7uQQaFvxqhAd32cW\"]},\"project:/contracts/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc8b2ff0889b0866f84a4a4f06702b92ac08e3a5e2a6048e09dcbba8d58297002\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4614b2c046f2521dc7f39496cd77af787184189f9e23f65086ac89515826190c\",\"dweb:/ipfs/QmdVEVCfz1wJq5zWnvRsKKCUniwYbDUdWf8NWYukCaXe54\"]},\"project:/contracts/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xb68e18109027f3d40cf922f861c41c149124b5007a428a6476b8f45ed8642845\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ab2915861fca8823d53011b16c0dfb7bf5115cc89d8acbbf7f83b12f0974e4\",\"dweb:/ipfs/QmdxDzSn4qm1utvSgTWNioieheDCYLJpWe576YoBhAEbXm\"]},\"project:/contracts/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92\",\"dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA\"]},\"project:/contracts/v4-core/src/libraries/BitMath.sol\":{\"keccak256\":\"0x652cd36970d953b3067c766b3b0c0063d4c403eba7352df09ec10dcc868910d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e357b092171edb755c8514b4b4ae758a8b43458c7a23409ebf5afd325fefa2be\",\"dweb:/ipfs/QmWKRWT2z15cVbVVDkjqdVnpf8Ck1jytcXbA7zCUevp7b6\"]},\"project:/contracts/v4-core/src/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x1f015a7a107f4c471985a958f1bfbc1710948f9bcd3786a02310bc0ad5080c69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1cacac08675284f319d151f6bc5d1c66cf1d54c5dad1c620a2e1e1336cbb93a\",\"dweb:/ipfs/QmPf8vQ3mBqniKHwvS1DDEFrV5dJfZSL6mMi9JVy6omQaz\"]},\"project:/contracts/v4-core/src/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x7731aeeba692b0ca5dac8f27803ec9e5ce98795a554c09ae05c220861bd0314e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://963a8155e442d31c4541c387d333db0c02941ae3517e9173ad30ebcb4f6a14e9\",\"dweb:/ipfs/QmevAr8oG4WSoi5gBqQ53VzBuFbDKoZHfJwjuTmVhzm8Tc\"]},\"project:/contracts/v4-core/src/libraries/FullMath.sol\":{\"keccak256\":\"0x6d8760794ed38264579c5da7b2afe8ff5543de999180850bc08687b77dce36ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e72da6f868ba5f5c829f78f649286c6b5922a8cda0317dfbb156b8a4d27fb24\",\"dweb:/ipfs/QmUQDZciNFhy4AFGXfYvoy22ihPc7ehvypeRVQwvVcD3vJ\"]},\"project:/contracts/v4-core/src/libraries/Pool.sol\":{\"keccak256\":\"0x4b4bbb00df0b43e296430d4088f719093dcbd16327c472af95c2b4ad84a9b78d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cc04d99d71e367fa8e2b3ab584e62c06604804b861aa8df69500b096755ce72d\",\"dweb:/ipfs/QmTJDRNjkXRD6ePSyG26Hfk5pNSNRu58CyYTBsc35kRX3e\"]},\"project:/contracts/v4-core/src/libraries/Position.sol\":{\"keccak256\":\"0x1319e4c172e31427c3b3521dd3c9c9c3949da22e25c9919ae57c47a8c9328e43\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1e0885e8e035681836fe02213e165d1ab48cf2488cf6ba8f01964b4b026d2b46\",\"dweb:/ipfs/QmR4W3DZYYvctASLFnm7Sf4wk2L77gwNRrTS2mBqtiUaud\"]},\"project:/contracts/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x197985a64d2ccf38a5e6a80cf70dc345594cc7296a2364b7447e553966ed89dc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://05c0f4aa083eb721febe1d23a1f55ced942eab0072318cb919c5fa42d0553042\",\"dweb:/ipfs/QmV1DBPTynduQnC9T5Ad87jHLZfevMkBQPFjPTMtstJgeN\"]},\"project:/contracts/v4-core/src/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0xe54bb39a96f98df7b8d36fade6b95bc866e138594b146ef0d4cee4e542170058\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a3e737e963339141ba91a2a11d635e7ffe9ed901325579094aa4ac76b435314a\",\"dweb:/ipfs/QmVQ5ENKDBNJEM6kgLi8FwifxbAW4xj2riknTWfnox79ZR\"]},\"project:/contracts/v4-core/src/libraries/SwapMath.sol\":{\"keccak256\":\"0xac5b75b36ff928e88cbec828bdc9db03e681cc3b337d5d7f6be9fd617b3fef7f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6aaea2ecabdb3fec93c7c6be19ea3a034cf396a59ab96f61c57b5214c04b5a6e\",\"dweb:/ipfs/QmYyd4ExT6xbvEHZTQBv9nZuvU6xjB6EN4uY8TmK8Tceqv\"]},\"project:/contracts/v4-core/src/libraries/TickBitmap.sol\":{\"keccak256\":\"0x7cccb8dff4c76da872a827f1549dc44cdff384d123e77a5361a02a31902bf15c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://88f850cd5bd2bbada4d9514f2516804392c7b23dc2cb541b74e9c88d0a351dcd\",\"dweb:/ipfs/QmZh9LvKUG23oFUZXAAa5gn77MguAbZ41VGjkES5U8N9Em\"]},\"project:/contracts/v4-core/src/libraries/TickMath.sol\":{\"keccak256\":\"0xc7e49d8f58765e4d586f943b782f3b11b5330864ffc273494420f268dc3b34a8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://12a96f136f09a15af9f4484f23782097a7233fb0658f12ebc94873d91bc7eba3\",\"dweb:/ipfs/Qmc7W5Ff9Tmnd6daXeqGjgcfritarGxRrqSSCYzZ1pZ2yZ\"]},\"project:/contracts/v4-core/src/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x2a8cb75af05f8557b698b089a0ab19e24279fffb7e87cddf5794404c7eaf1c69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://85f68e6d614205f3f0f55f6ac41805e3a7d523d95bda1c443f2e75444443ffe3\",\"dweb:/ipfs/QmdCheMqxWNx4CbxG5MH9BUQeSMeeXF6DHkf7Aax4duRUe\"]},\"project:/contracts/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xb348472d6a9050f8e162173712911896882939a0cd7316db386ced5182716845\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10db8d83e74b6cabcf71f0325d16e9c919c66ba4e41ab58a280b432f8b9ea6e4\",\"dweb:/ipfs/QmNWQJQqCrp9QWzbdBivkYBX6tfEgobkGYhoCxvoX3ZtKg\"]},\"project:/contracts/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0xb1395e2817b604745bf6cd41821aafeaaa252caafe45133e54f02d6f6be13d2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ec58bd7634ccb1b74f59378e54771ae11cba37494b57ae64e3f6640d4afdd9\",\"dweb:/ipfs/QmeYL1TuGXcTYfsQBGu7p9urSqGjiJky8iJAgwTRYqrJ4F\"]},\"project:/contracts/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x2928a23cdf4c3dd05fafd3094020723954150901c6935a40fbb8e3cbc1e0ebe3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddde47e0eda04cf7e1b8e903eafd22ff19866bcb2ce0f61b46a3470b4dc9927\",\"dweb:/ipfs/Qme84u2nmVFZkaBSwVJw3bhZSqt6P9xMHNsp1Y7ddWMDvi\"]},\"project:/contracts/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xef7421713157a514d757863e99c2d094a6fac1dcbae602ac0eb47eda2d651a6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2832668ba213b3928fd79e159b4d00b4b8f057844e2897902ec089014470f29\",\"dweb:/ipfs/QmV2MESks8RiTwRJpqynGCGsrmXKimRFpQFZSBXnxEiXKX\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {Currency} from \"../types/Currency.sol\";\nimport {PoolKey} from \"../types/PoolKey.sol\";\nimport {Pool} from \"../libraries/Pool.sol\";\nimport {IHooks} from \"./IHooks.sol\";\nimport {IFees} from \"./IFees.sol\";\nimport {IClaims} from \"./IClaims.sol\";\nimport {BalanceDelta} from \"../types/BalanceDelta.sol\";\nimport {PoolId} from \"../types/PoolId.sol\";\nimport {Position} from \"../libraries/Position.sol\";\n\ninterface IPoolManager is IFees, IClaims {\n    /// @notice Thrown when currencies touched has exceeded max of 256\n    error MaxCurrenciesTouched();\n\n    /// @notice Thrown when a currency is not netted out after a lock\n    error CurrencyNotSettled();\n\n    /// @notice Thrown when trying to interact with a non-initialized pool\n    error PoolNotInitialized();\n\n    /// @notice Thrown when a function is called by an address that is not the current locker\n    /// @param locker The current locker\n    error LockedBy(address locker);\n\n    /// @notice The ERC1155 being deposited is not the Uniswap ERC1155\n    error NotPoolManagerToken();\n\n    /// @notice Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow\n    error TickSpacingTooLarge();\n    /// @notice Pools must have a positive non-zero tickSpacing passed to #initialize\n    error TickSpacingTooSmall();\n\n    /// @notice PoolKey must have currencies where address(currency0) < address(currency1)\n    error CurrenciesOutOfOrderOrEqual();\n\n    /// @notice Emitted when a new pool is initialized\n    /// @param id The abi encoded hash of the pool key struct for the new pool\n    /// @param currency0 The first currency of the pool by address sort order\n    /// @param currency1 The second currency of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param hooks The hooks contract address for the pool, or address(0) if none\n    event Initialize(\n        PoolId indexed id,\n        Currency indexed currency0,\n        Currency indexed currency1,\n        uint24 fee,\n        int24 tickSpacing,\n        IHooks hooks\n    );\n\n    /// @notice Emitted when a liquidity position is modified\n    /// @param id The abi encoded hash of the pool key struct for the pool that was modified\n    /// @param sender The address that modified the pool\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param liquidityDelta The amount of liquidity that was added or removed\n    event ModifyPosition(\n        PoolId indexed id, address indexed sender, int24 tickLower, int24 tickUpper, int256 liquidityDelta\n    );\n\n    /// @notice Emitted for swaps between currency0 and currency1\n    /// @param id The abi encoded hash of the pool key struct for the pool that was modified\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param amount0 The delta of the currency0 balance of the pool\n    /// @param amount1 The delta of the currency1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of the price of the pool after the swap\n    event Swap(\n        PoolId indexed id,\n        address indexed sender,\n        int128 amount0,\n        int128 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick,\n        uint24 fee\n    );\n\n    event ProtocolFeeUpdated(PoolId indexed id, uint24 protocolFees);\n\n    event HookFeeUpdated(PoolId indexed id, uint24 hookFees);\n\n    event DynamicSwapFeeUpdated(PoolId indexed id, uint24 dynamicSwapFee);\n\n    /// @notice Returns the constant representing the maximum tickSpacing for an initialized pool key\n    function MAX_TICK_SPACING() external view returns (int24);\n\n    /// @notice Returns the constant representing the minimum tickSpacing for an initialized pool key\n    function MIN_TICK_SPACING() external view returns (int24);\n\n    /// @notice Get the current value in slot0 of the given pool\n    function getSlot0(PoolId id)\n        external\n        view\n        returns (uint160 sqrtPriceX96, int24 tick, uint24 protocolFees, uint24 hookFees);\n\n    /// @notice Get the current value of liquidity of the given pool\n    function getLiquidity(PoolId id) external view returns (uint128 liquidity);\n\n    /// @notice Get the current value of liquidity for the specified pool and position\n    function getLiquidity(PoolId id, address owner, int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (uint128 liquidity);\n\n    /// @notice Get the position struct for a specified pool and position\n    function getPosition(PoolId id, address owner, int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (Position.Info memory position);\n\n    /// @notice Returns the reserves for a given ERC20 currency\n    function reservesOf(Currency currency) external view returns (uint256);\n\n    /// @notice Returns the locker in the ith position of the locker queue.\n    function getLock(uint256 i) external view returns (address locker);\n\n    /// @notice Returns the length of the lockers array, which is the number of locks open on the PoolManager.\n    function getLockLength() external view returns (uint256 _length);\n\n    /// @notice Returns the number of nonzero deltas open on the PoolManager that must be zerod by the close of the initial lock.\n    function getLockNonzeroDeltaCount() external view returns (uint256 _nonzeroDeltaCount);\n\n    /// @notice Initialize the state for a given pool ID\n    function initialize(PoolKey memory key, uint160 sqrtPriceX96, bytes calldata hookData)\n        external\n        returns (int24 tick);\n\n    /// @notice Get the current delta for a locker in the given currency\n    /// @param locker The address of the locker\n    /// @param currency The currency for which to lookup the delta\n    function currencyDelta(address locker, Currency currency) external view returns (int256);\n\n    /// @notice All operations go through this function\n    /// @param data Any data to pass to the callback, via `ILockCallback(msg.sender).lockAcquired(data)`\n    /// @return The data returned by the call to `ILockCallback(msg.sender).lockAcquired(data)`\n    function lock(bytes calldata data) external returns (bytes memory);\n\n    struct ModifyPositionParams {\n        // the lower and upper tick of the position\n        int24 tickLower;\n        int24 tickUpper;\n        // how to modify the liquidity\n        int256 liquidityDelta;\n    }\n\n    /// @notice Modify the position for the given pool\n    function modifyPosition(PoolKey memory key, ModifyPositionParams memory params, bytes calldata hookData)\n        external\n        returns (BalanceDelta);\n\n    struct SwapParams {\n        bool zeroForOne;\n        int256 amountSpecified;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swap against the given pool\n    function swap(PoolKey memory key, SwapParams memory params, bytes calldata hookData)\n        external\n        returns (BalanceDelta);\n\n    /// @notice Donate the given currency amounts to the pool with the given pool key\n    function donate(PoolKey memory key, uint256 amount0, uint256 amount1, bytes calldata hookData)\n        external\n        returns (BalanceDelta);\n\n    /// @notice Called by the user to net out some value owed to the user\n    /// @dev Can also be used as a mechanism for _free_ flash loans\n    function take(Currency currency, address to, uint256 amount) external;\n\n    /// @notice Called by the user to move value into Claims balance\n    function mint(Currency token, address to, uint256 amount) external;\n\n    /// @notice Called by the user to redeem their Claims balance\n    function burn(Currency token, uint256 amount) external;\n\n    /// @notice Called by the user to pay what is owed\n    function settle(Currency token) external payable returns (uint256 paid);\n\n    /// @notice Sets the protocol's swap and withdrawal fees for the given pool\n    /// Protocol fees are always a portion of a fee that is owed. If that underlying fee is 0, no protocol fees will accrue even if it is set to > 0.\n    function setProtocolFees(PoolKey memory key) external;\n\n    /// @notice Sets the hook's swap and withdrawal fees for the given pool\n    function setHookFees(PoolKey memory key) external;\n\n    /// @notice Updates the pools swap fees for the a pool that has enabled dynamic swap fees.\n    function updateDynamicSwapFee(PoolKey memory key) external;\n\n    /// @notice Called by external contracts to access granular pool state\n    /// @param slot Key of slot to sload\n    /// @return value The value of the slot as bytes32\n    function extsload(bytes32 slot) external view returns (bytes32 value);\n\n    /// @notice Called by external contracts to access granular pool state\n    /// @param slot Key of slot to start sloading from\n    /// @param nSlots Number of slots to load into return value\n    /// @return value The value of the sload-ed slots concatenated as dynamic bytes\n    function extsload(bytes32 slot, uint256 nSlots) external view returns (bytes memory value);\n}\n",
  "sourcePath": "/home/stephensb/sb-labs/solidity-contracts/contracts/v4-core/src/interfaces/IPoolManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/v4-core/src/interfaces/IPoolManager.sol",
    "exportedSymbols": {
      "BalanceDelta": [
        14111
      ],
      "Currency": [
        14262
      ],
      "IClaims": [
        8252
      ],
      "IFees": [
        8314
      ],
      "IHooks": [
        8475
      ],
      "IPoolManager": [
        8867
      ],
      "Pool": [
        12135
      ],
      "PoolId": [
        14539
      ],
      "PoolKey": [
        14587
      ],
      "Position": [
        12303
      ]
    },
    "id": 8868,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8477,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:36"
      },
      {
        "absolutePath": "project:/contracts/v4-core/src/types/Currency.sol",
        "file": "../types/Currency.sol",
        "id": 8479,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8868,
        "sourceUnit": 14534,
        "src": "58:47:36",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8478,
              "name": "Currency",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14262,
              "src": "66:8:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/v4-core/src/types/PoolKey.sol",
        "file": "../types/PoolKey.sol",
        "id": 8481,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8868,
        "sourceUnit": 14588,
        "src": "106:45:36",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8480,
              "name": "PoolKey",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14587,
              "src": "114:7:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/v4-core/src/libraries/Pool.sol",
        "file": "../libraries/Pool.sol",
        "id": 8483,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8868,
        "sourceUnit": 12136,
        "src": "152:43:36",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8482,
              "name": "Pool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12135,
              "src": "160:4:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/v4-core/src/interfaces/IHooks.sol",
        "file": "./IHooks.sol",
        "id": 8485,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8868,
        "sourceUnit": 8476,
        "src": "196:36:36",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8484,
              "name": "IHooks",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8475,
              "src": "204:6:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/v4-core/src/interfaces/IFees.sol",
        "file": "./IFees.sol",
        "id": 8487,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8868,
        "sourceUnit": 8315,
        "src": "233:34:36",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8486,
              "name": "IFees",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8314,
              "src": "241:5:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/v4-core/src/interfaces/IClaims.sol",
        "file": "./IClaims.sol",
        "id": 8489,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8868,
        "sourceUnit": 8253,
        "src": "268:38:36",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8488,
              "name": "IClaims",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 8252,
              "src": "276:7:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/v4-core/src/types/BalanceDelta.sol",
        "file": "../types/BalanceDelta.sol",
        "id": 8491,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8868,
        "sourceUnit": 14257,
        "src": "307:55:36",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8490,
              "name": "BalanceDelta",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14111,
              "src": "315:12:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/v4-core/src/types/PoolId.sol",
        "file": "../types/PoolId.sol",
        "id": 8493,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8868,
        "sourceUnit": 14562,
        "src": "363:43:36",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8492,
              "name": "PoolId",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14539,
              "src": "371:6:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/v4-core/src/libraries/Position.sol",
        "file": "../libraries/Position.sol",
        "id": 8495,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8868,
        "sourceUnit": 12304,
        "src": "407:51:36",
        "symbolAliases": [
          {
            "foreign": {
              "id": 8494,
              "name": "Position",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12303,
              "src": "415:8:36",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8496,
              "name": "IFees",
              "nameLocations": [
                "486:5:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8314,
              "src": "486:5:36"
            },
            "id": 8497,
            "nodeType": "InheritanceSpecifier",
            "src": "486:5:36"
          },
          {
            "baseName": {
              "id": 8498,
              "name": "IClaims",
              "nameLocations": [
                "493:7:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8252,
              "src": "493:7:36"
            },
            "id": 8499,
            "nodeType": "InheritanceSpecifier",
            "src": "493:7:36"
          }
        ],
        "canonicalName": "IPoolManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 8867,
        "linearizedBaseContracts": [
          8867,
          8252,
          8314
        ],
        "name": "IPoolManager",
        "nameLocation": "470:12:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 8500,
              "nodeType": "StructuredDocumentation",
              "src": "507:66:36",
              "text": "@notice Thrown when currencies touched has exceeded max of 256"
            },
            "errorSelector": "543f71a6",
            "id": 8502,
            "name": "MaxCurrenciesTouched",
            "nameLocation": "584:20:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "604:2:36"
            },
            "src": "578:29:36"
          },
          {
            "documentation": {
              "id": 8503,
              "nodeType": "StructuredDocumentation",
              "src": "613:65:36",
              "text": "@notice Thrown when a currency is not netted out after a lock"
            },
            "errorSelector": "5212cba1",
            "id": 8505,
            "name": "CurrencyNotSettled",
            "nameLocation": "689:18:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "707:2:36"
            },
            "src": "683:27:36"
          },
          {
            "documentation": {
              "id": 8506,
              "nodeType": "StructuredDocumentation",
              "src": "716:70:36",
              "text": "@notice Thrown when trying to interact with a non-initialized pool"
            },
            "errorSelector": "486aa307",
            "id": 8508,
            "name": "PoolNotInitialized",
            "nameLocation": "797:18:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "815:2:36"
            },
            "src": "791:27:36"
          },
          {
            "documentation": {
              "id": 8509,
              "nodeType": "StructuredDocumentation",
              "src": "824:130:36",
              "text": "@notice Thrown when a function is called by an address that is not the current locker\n @param locker The current locker"
            },
            "errorSelector": "4f4b04cc",
            "id": 8513,
            "name": "LockedBy",
            "nameLocation": "965:8:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8511,
                  "mutability": "mutable",
                  "name": "locker",
                  "nameLocation": "982:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8513,
                  "src": "974:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "974:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "973:16:36"
            },
            "src": "959:31:36"
          },
          {
            "documentation": {
              "id": 8514,
              "nodeType": "StructuredDocumentation",
              "src": "996:66:36",
              "text": "@notice The ERC1155 being deposited is not the Uniswap ERC1155"
            },
            "errorSelector": "53fa5ae4",
            "id": 8516,
            "name": "NotPoolManagerToken",
            "nameLocation": "1073:19:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1092:2:36"
            },
            "src": "1067:28:36"
          },
          {
            "documentation": {
              "id": 8517,
              "nodeType": "StructuredDocumentation",
              "src": "1101:96:36",
              "text": "@notice Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow"
            },
            "errorSelector": "b02b5dc2",
            "id": 8519,
            "name": "TickSpacingTooLarge",
            "nameLocation": "1208:19:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:2:36"
            },
            "src": "1202:28:36"
          },
          {
            "documentation": {
              "id": 8520,
              "nodeType": "StructuredDocumentation",
              "src": "1235:81:36",
              "text": "@notice Pools must have a positive non-zero tickSpacing passed to #initialize"
            },
            "errorSelector": "16fe7696",
            "id": 8522,
            "name": "TickSpacingTooSmall",
            "nameLocation": "1327:19:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8521,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:2:36"
            },
            "src": "1321:28:36"
          },
          {
            "documentation": {
              "id": 8523,
              "nodeType": "StructuredDocumentation",
              "src": "1355:86:36",
              "text": "@notice PoolKey must have currencies where address(currency0) < address(currency1)"
            },
            "errorSelector": "eaa6c6eb",
            "id": 8525,
            "name": "CurrenciesOutOfOrderOrEqual",
            "nameLocation": "1452:27:36",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1479:2:36"
            },
            "src": "1446:36:36"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8526,
              "nodeType": "StructuredDocumentation",
              "src": "1488:552:36",
              "text": "@notice Emitted when a new pool is initialized\n @param id The abi encoded hash of the pool key struct for the new pool\n @param currency0 The first currency of the pool by address sort order\n @param currency1 The second currency of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param hooks The hooks contract address for the pool, or address(0) if none"
            },
            "eventSelector": "3fd553db44f207b1f41348cfc4d251860814af9eadc470e8e7895e4d120511f4",
            "id": 8544,
            "name": "Initialize",
            "nameLocation": "2051:10:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8529,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2086:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8544,
                  "src": "2071:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                    "typeString": "PoolId"
                  },
                  "typeName": {
                    "id": 8528,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8527,
                      "name": "PoolId",
                      "nameLocations": [
                        "2071:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14539,
                      "src": "2071:6:36"
                    },
                    "referencedDeclaration": 14539,
                    "src": "2071:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                      "typeString": "PoolId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8532,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "currency0",
                  "nameLocation": "2115:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8544,
                  "src": "2098:26:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                    "typeString": "Currency"
                  },
                  "typeName": {
                    "id": 8531,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8530,
                      "name": "Currency",
                      "nameLocations": [
                        "2098:8:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14262,
                      "src": "2098:8:36"
                    },
                    "referencedDeclaration": 14262,
                    "src": "2098:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                      "typeString": "Currency"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8535,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "currency1",
                  "nameLocation": "2151:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8544,
                  "src": "2134:26:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                    "typeString": "Currency"
                  },
                  "typeName": {
                    "id": 8534,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8533,
                      "name": "Currency",
                      "nameLocations": [
                        "2134:8:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14262,
                      "src": "2134:8:36"
                    },
                    "referencedDeclaration": 14262,
                    "src": "2134:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                      "typeString": "Currency"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8537,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "2177:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8544,
                  "src": "2170:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 8536,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2170:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8539,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tickSpacing",
                  "nameLocation": "2196:11:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8544,
                  "src": "2190:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 8538,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8542,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hooks",
                  "nameLocation": "2224:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8544,
                  "src": "2217:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHooks_$8475",
                    "typeString": "contract IHooks"
                  },
                  "typeName": {
                    "id": 8541,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8540,
                      "name": "IHooks",
                      "nameLocations": [
                        "2217:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8475,
                      "src": "2217:6:36"
                    },
                    "referencedDeclaration": 8475,
                    "src": "2217:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHooks_$8475",
                      "typeString": "contract IHooks"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2061:174:36"
            },
            "src": "2045:191:36"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8545,
              "nodeType": "StructuredDocumentation",
              "src": "2242:399:36",
              "text": "@notice Emitted when a liquidity position is modified\n @param id The abi encoded hash of the pool key struct for the pool that was modified\n @param sender The address that modified the pool\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param liquidityDelta The amount of liquidity that was added or removed"
            },
            "eventSelector": "c54f65a0367b92850ef8e90f7e302da8b0a137ab343132a9b8d0e63e684bf53c",
            "id": 8558,
            "name": "ModifyPosition",
            "nameLocation": "2652:14:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8548,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2691:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8558,
                  "src": "2676:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                    "typeString": "PoolId"
                  },
                  "typeName": {
                    "id": 8547,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8546,
                      "name": "PoolId",
                      "nameLocations": [
                        "2676:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14539,
                      "src": "2676:6:36"
                    },
                    "referencedDeclaration": 14539,
                    "src": "2676:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                      "typeString": "PoolId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8550,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2711:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8558,
                  "src": "2695:22:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2695:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8552,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nameLocation": "2725:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8558,
                  "src": "2719:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 8551,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2719:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8554,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nameLocation": "2742:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8558,
                  "src": "2736:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 8553,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2736:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8556,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "liquidityDelta",
                  "nameLocation": "2760:14:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8558,
                  "src": "2753:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 8555,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2666:114:36"
            },
            "src": "2646:135:36"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 8559,
              "nodeType": "StructuredDocumentation",
              "src": "2787:619:36",
              "text": "@notice Emitted for swaps between currency0 and currency1\n @param id The abi encoded hash of the pool key struct for the pool that was modified\n @param sender The address that initiated the swap call, and that received the callback\n @param amount0 The delta of the currency0 balance of the pool\n @param amount1 The delta of the currency1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of the price of the pool after the swap"
            },
            "eventSelector": "40e9cecb9f5f1f1c5b9c97dec2917b7ee92e57ba5563708daca94dd84ad7112f",
            "id": 8578,
            "name": "Swap",
            "nameLocation": "3417:4:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8562,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3446:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8578,
                  "src": "3431:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                    "typeString": "PoolId"
                  },
                  "typeName": {
                    "id": 8561,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8560,
                      "name": "PoolId",
                      "nameLocations": [
                        "3431:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14539,
                      "src": "3431:6:36"
                    },
                    "referencedDeclaration": 14539,
                    "src": "3431:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                      "typeString": "PoolId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8564,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3474:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8578,
                  "src": "3458:22:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8566,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "3497:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8578,
                  "src": "3490:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 8565,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3490:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8568,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "3521:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8578,
                  "src": "3514:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 8567,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3514:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8570,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sqrtPriceX96",
                  "nameLocation": "3546:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8578,
                  "src": "3538:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 8569,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "3538:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8572,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "3576:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8578,
                  "src": "3568:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8571,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3568:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8574,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tick",
                  "nameLocation": "3601:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8578,
                  "src": "3595:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 8573,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3595:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8576,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "3622:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8578,
                  "src": "3615:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 8575,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3615:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3421:210:36"
            },
            "src": "3411:221:36"
          },
          {
            "anonymous": false,
            "eventSelector": "e9c42593e71f84403b84352cd168d693e2c9fcd1fdbcc3feb21d92b43e6696f9",
            "id": 8585,
            "name": "ProtocolFeeUpdated",
            "nameLocation": "3644:18:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8581,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3678:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8585,
                  "src": "3663:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                    "typeString": "PoolId"
                  },
                  "typeName": {
                    "id": 8580,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8579,
                      "name": "PoolId",
                      "nameLocations": [
                        "3663:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14539,
                      "src": "3663:6:36"
                    },
                    "referencedDeclaration": 14539,
                    "src": "3663:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                      "typeString": "PoolId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8583,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "protocolFees",
                  "nameLocation": "3689:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8585,
                  "src": "3682:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 8582,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3682:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3662:40:36"
            },
            "src": "3638:65:36"
          },
          {
            "anonymous": false,
            "eventSelector": "c939c5b4f4e3398eb275de825cd913cca3ade8d1f42daa0ffe1d88accd407158",
            "id": 8592,
            "name": "HookFeeUpdated",
            "nameLocation": "3715:14:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8588,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3745:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8592,
                  "src": "3730:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                    "typeString": "PoolId"
                  },
                  "typeName": {
                    "id": 8587,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8586,
                      "name": "PoolId",
                      "nameLocations": [
                        "3730:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14539,
                      "src": "3730:6:36"
                    },
                    "referencedDeclaration": 14539,
                    "src": "3730:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                      "typeString": "PoolId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8590,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hookFees",
                  "nameLocation": "3756:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8592,
                  "src": "3749:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 8589,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3749:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3729:36:36"
            },
            "src": "3709:57:36"
          },
          {
            "anonymous": false,
            "eventSelector": "dda45bdfb4c4d89a045919c537cb189db3745c4b1977d65f1d7cf60b585e7b72",
            "id": 8599,
            "name": "DynamicSwapFeeUpdated",
            "nameLocation": "3778:21:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8595,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3815:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8599,
                  "src": "3800:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                    "typeString": "PoolId"
                  },
                  "typeName": {
                    "id": 8594,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8593,
                      "name": "PoolId",
                      "nameLocations": [
                        "3800:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14539,
                      "src": "3800:6:36"
                    },
                    "referencedDeclaration": 14539,
                    "src": "3800:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                      "typeString": "PoolId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8597,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "dynamicSwapFee",
                  "nameLocation": "3826:14:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8599,
                  "src": "3819:21:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 8596,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3819:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3799:42:36"
            },
            "src": "3772:70:36"
          },
          {
            "documentation": {
              "id": 8600,
              "nodeType": "StructuredDocumentation",
              "src": "3848:97:36",
              "text": "@notice Returns the constant representing the maximum tickSpacing for an initialized pool key"
            },
            "functionSelector": "60460f06",
            "id": 8605,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MAX_TICK_SPACING",
            "nameLocation": "3959:16:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3975:2:36"
            },
            "returnParameters": {
              "id": 8604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8603,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8605,
                  "src": "4001:5:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 8602,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4000:7:36"
            },
            "scope": 8867,
            "src": "3950:58:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8606,
              "nodeType": "StructuredDocumentation",
              "src": "4014:97:36",
              "text": "@notice Returns the constant representing the minimum tickSpacing for an initialized pool key"
            },
            "functionSelector": "07eff0dd",
            "id": 8611,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "MIN_TICK_SPACING",
            "nameLocation": "4125:16:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4141:2:36"
            },
            "returnParameters": {
              "id": 8610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8609,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8611,
                  "src": "4167:5:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 8608,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4167:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4166:7:36"
            },
            "scope": 8867,
            "src": "4116:58:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8612,
              "nodeType": "StructuredDocumentation",
              "src": "4180:60:36",
              "text": "@notice Get the current value in slot0 of the given pool"
            },
            "functionSelector": "c815641c",
            "id": 8626,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSlot0",
            "nameLocation": "4254:8:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8615,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4270:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8626,
                  "src": "4263:9:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                    "typeString": "PoolId"
                  },
                  "typeName": {
                    "id": 8614,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8613,
                      "name": "PoolId",
                      "nameLocations": [
                        "4263:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14539,
                      "src": "4263:6:36"
                    },
                    "referencedDeclaration": 14539,
                    "src": "4263:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                      "typeString": "PoolId"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4262:11:36"
            },
            "returnParameters": {
              "id": 8625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8618,
                  "mutability": "mutable",
                  "name": "sqrtPriceX96",
                  "nameLocation": "4329:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8626,
                  "src": "4321:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 8617,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "4321:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8620,
                  "mutability": "mutable",
                  "name": "tick",
                  "nameLocation": "4349:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8626,
                  "src": "4343:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 8619,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4343:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8622,
                  "mutability": "mutable",
                  "name": "protocolFees",
                  "nameLocation": "4362:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8626,
                  "src": "4355:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 8621,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4355:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8624,
                  "mutability": "mutable",
                  "name": "hookFees",
                  "nameLocation": "4383:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8626,
                  "src": "4376:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 8623,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4376:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4320:72:36"
            },
            "scope": 8867,
            "src": "4245:148:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8627,
              "nodeType": "StructuredDocumentation",
              "src": "4399:64:36",
              "text": "@notice Get the current value of liquidity of the given pool"
            },
            "functionSelector": "fa6793d5",
            "id": 8635,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLiquidity",
            "nameLocation": "4477:12:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8630,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4497:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8635,
                  "src": "4490:9:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                    "typeString": "PoolId"
                  },
                  "typeName": {
                    "id": 8629,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8628,
                      "name": "PoolId",
                      "nameLocations": [
                        "4490:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14539,
                      "src": "4490:6:36"
                    },
                    "referencedDeclaration": 14539,
                    "src": "4490:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                      "typeString": "PoolId"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4489:11:36"
            },
            "returnParameters": {
              "id": 8634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8633,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "4532:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8635,
                  "src": "4524:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8632,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4524:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4523:19:36"
            },
            "scope": 8867,
            "src": "4468:75:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8636,
              "nodeType": "StructuredDocumentation",
              "src": "4549:82:36",
              "text": "@notice Get the current value of liquidity for the specified pool and position"
            },
            "functionSelector": "33aa955b",
            "id": 8650,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLiquidity",
            "nameLocation": "4645:12:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8639,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4665:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8650,
                  "src": "4658:9:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                    "typeString": "PoolId"
                  },
                  "typeName": {
                    "id": 8638,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8637,
                      "name": "PoolId",
                      "nameLocations": [
                        "4658:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14539,
                      "src": "4658:6:36"
                    },
                    "referencedDeclaration": 14539,
                    "src": "4658:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                      "typeString": "PoolId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8641,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4677:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8650,
                  "src": "4669:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8640,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4669:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8643,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nameLocation": "4690:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8650,
                  "src": "4684:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 8642,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4684:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8645,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nameLocation": "4707:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8650,
                  "src": "4701:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 8644,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4701:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4657:60:36"
            },
            "returnParameters": {
              "id": 8649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8648,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "4773:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8650,
                  "src": "4765:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 8647,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4765:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4764:19:36"
            },
            "scope": 8867,
            "src": "4636:148:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8651,
              "nodeType": "StructuredDocumentation",
              "src": "4790:69:36",
              "text": "@notice Get the position struct for a specified pool and position"
            },
            "functionSelector": "048d9c70",
            "id": 8666,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPosition",
            "nameLocation": "4873:11:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8654,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4892:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8666,
                  "src": "4885:9:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                    "typeString": "PoolId"
                  },
                  "typeName": {
                    "id": 8653,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8652,
                      "name": "PoolId",
                      "nameLocations": [
                        "4885:6:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14539,
                      "src": "4885:6:36"
                    },
                    "referencedDeclaration": 14539,
                    "src": "4885:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_PoolId_$14539",
                      "typeString": "PoolId"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8656,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4904:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8666,
                  "src": "4896:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4896:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8658,
                  "mutability": "mutable",
                  "name": "tickLower",
                  "nameLocation": "4917:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8666,
                  "src": "4911:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 8657,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4911:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8660,
                  "mutability": "mutable",
                  "name": "tickUpper",
                  "nameLocation": "4934:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8666,
                  "src": "4928:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 8659,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4928:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4884:60:36"
            },
            "returnParameters": {
              "id": 8665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8664,
                  "mutability": "mutable",
                  "name": "position",
                  "nameLocation": "5013:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8666,
                  "src": "4992:29:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$12152_memory_ptr",
                    "typeString": "struct Position.Info"
                  },
                  "typeName": {
                    "id": 8663,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8662,
                      "name": "Position.Info",
                      "nameLocations": [
                        "4992:8:36",
                        "5001:4:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12152,
                      "src": "4992:13:36"
                    },
                    "referencedDeclaration": 12152,
                    "src": "4992:13:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$12152_storage_ptr",
                      "typeString": "struct Position.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4991:31:36"
            },
            "scope": 8867,
            "src": "4864:159:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8667,
              "nodeType": "StructuredDocumentation",
              "src": "5029:59:36",
              "text": "@notice Returns the reserves for a given ERC20 currency"
            },
            "functionSelector": "93c85a21",
            "id": 8675,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "reservesOf",
            "nameLocation": "5102:10:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8670,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "5122:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8675,
                  "src": "5113:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                    "typeString": "Currency"
                  },
                  "typeName": {
                    "id": 8669,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8668,
                      "name": "Currency",
                      "nameLocations": [
                        "5113:8:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14262,
                      "src": "5113:8:36"
                    },
                    "referencedDeclaration": 14262,
                    "src": "5113:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                      "typeString": "Currency"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5112:19:36"
            },
            "returnParameters": {
              "id": 8674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8673,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8675,
                  "src": "5155:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5155:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5154:9:36"
            },
            "scope": 8867,
            "src": "5093:71:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8676,
              "nodeType": "StructuredDocumentation",
              "src": "5170:71:36",
              "text": "@notice Returns the locker in the ith position of the locker queue."
            },
            "functionSelector": "d68f4dd1",
            "id": 8683,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLock",
            "nameLocation": "5255:7:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8678,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "5271:1:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8683,
                  "src": "5263:9:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8677,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5263:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5262:11:36"
            },
            "returnParameters": {
              "id": 8682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8681,
                  "mutability": "mutable",
                  "name": "locker",
                  "nameLocation": "5305:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8683,
                  "src": "5297:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5297:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5296:16:36"
            },
            "scope": 8867,
            "src": "5246:67:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8684,
              "nodeType": "StructuredDocumentation",
              "src": "5319:106:36",
              "text": "@notice Returns the length of the lockers array, which is the number of locks open on the PoolManager."
            },
            "functionSelector": "61f5c65b",
            "id": 8689,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLockLength",
            "nameLocation": "5439:13:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5452:2:36"
            },
            "returnParameters": {
              "id": 8688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8687,
                  "mutability": "mutable",
                  "name": "_length",
                  "nameLocation": "5486:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8689,
                  "src": "5478:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5478:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5477:17:36"
            },
            "scope": 8867,
            "src": "5430:65:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8690,
              "nodeType": "StructuredDocumentation",
              "src": "5501:125:36",
              "text": "@notice Returns the number of nonzero deltas open on the PoolManager that must be zerod by the close of the initial lock."
            },
            "functionSelector": "46063d05",
            "id": 8695,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLockNonzeroDeltaCount",
            "nameLocation": "5640:24:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5664:2:36"
            },
            "returnParameters": {
              "id": 8694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8693,
                  "mutability": "mutable",
                  "name": "_nonzeroDeltaCount",
                  "nameLocation": "5698:18:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8695,
                  "src": "5690:26:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5690:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5689:28:36"
            },
            "scope": 8867,
            "src": "5631:87:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8696,
              "nodeType": "StructuredDocumentation",
              "src": "5724:52:36",
              "text": "@notice Initialize the state for a given pool ID"
            },
            "functionSelector": "695c5bf5",
            "id": 8708,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "5790:10:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8699,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "5816:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8708,
                  "src": "5801:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolKey_$14587_memory_ptr",
                    "typeString": "struct PoolKey"
                  },
                  "typeName": {
                    "id": 8698,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8697,
                      "name": "PoolKey",
                      "nameLocations": [
                        "5801:7:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14587,
                      "src": "5801:7:36"
                    },
                    "referencedDeclaration": 14587,
                    "src": "5801:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolKey_$14587_storage_ptr",
                      "typeString": "struct PoolKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8701,
                  "mutability": "mutable",
                  "name": "sqrtPriceX96",
                  "nameLocation": "5829:12:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8708,
                  "src": "5821:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 8700,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "5821:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8703,
                  "mutability": "mutable",
                  "name": "hookData",
                  "nameLocation": "5858:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8708,
                  "src": "5843:23:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8702,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5843:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5800:67:36"
            },
            "returnParameters": {
              "id": 8707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8706,
                  "mutability": "mutable",
                  "name": "tick",
                  "nameLocation": "5908:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8708,
                  "src": "5902:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 8705,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5902:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5901:12:36"
            },
            "scope": 8867,
            "src": "5781:133:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8709,
              "nodeType": "StructuredDocumentation",
              "src": "5920:183:36",
              "text": "@notice Get the current delta for a locker in the given currency\n @param locker The address of the locker\n @param currency The currency for which to lookup the delta"
            },
            "functionSelector": "a54b2831",
            "id": 8719,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "currencyDelta",
            "nameLocation": "6117:13:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8711,
                  "mutability": "mutable",
                  "name": "locker",
                  "nameLocation": "6139:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8719,
                  "src": "6131:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6131:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8714,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "6156:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8719,
                  "src": "6147:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                    "typeString": "Currency"
                  },
                  "typeName": {
                    "id": 8713,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8712,
                      "name": "Currency",
                      "nameLocations": [
                        "6147:8:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14262,
                      "src": "6147:8:36"
                    },
                    "referencedDeclaration": 14262,
                    "src": "6147:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                      "typeString": "Currency"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6130:35:36"
            },
            "returnParameters": {
              "id": 8718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8717,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8719,
                  "src": "6189:6:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 8716,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6189:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6188:8:36"
            },
            "scope": 8867,
            "src": "6108:89:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8720,
              "nodeType": "StructuredDocumentation",
              "src": "6203:252:36",
              "text": "@notice All operations go through this function\n @param data Any data to pass to the callback, via `ILockCallback(msg.sender).lockAcquired(data)`\n @return The data returned by the call to `ILockCallback(msg.sender).lockAcquired(data)`"
            },
            "functionSelector": "81548319",
            "id": 8727,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "lock",
            "nameLocation": "6469:4:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8722,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6489:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8727,
                  "src": "6474:19:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8721,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6474:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6473:21:36"
            },
            "returnParameters": {
              "id": 8726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8725,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8727,
                  "src": "6513:12:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8724,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6513:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6512:14:36"
            },
            "scope": 8867,
            "src": "6460:67:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "canonicalName": "IPoolManager.ModifyPositionParams",
            "id": 8734,
            "members": [
              {
                "constant": false,
                "id": 8729,
                "mutability": "mutable",
                "name": "tickLower",
                "nameLocation": "6629:9:36",
                "nodeType": "VariableDeclaration",
                "scope": 8734,
                "src": "6623:15:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                },
                "typeName": {
                  "id": 8728,
                  "name": "int24",
                  "nodeType": "ElementaryTypeName",
                  "src": "6623:5:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8731,
                "mutability": "mutable",
                "name": "tickUpper",
                "nameLocation": "6654:9:36",
                "nodeType": "VariableDeclaration",
                "scope": 8734,
                "src": "6648:15:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int24",
                  "typeString": "int24"
                },
                "typeName": {
                  "id": 8730,
                  "name": "int24",
                  "nodeType": "ElementaryTypeName",
                  "src": "6648:5:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8733,
                "mutability": "mutable",
                "name": "liquidityDelta",
                "nameLocation": "6719:14:36",
                "nodeType": "VariableDeclaration",
                "scope": 8734,
                "src": "6712:21:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 8732,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "6712:6:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ModifyPositionParams",
            "nameLocation": "6540:20:36",
            "nodeType": "StructDefinition",
            "scope": 8867,
            "src": "6533:207:36",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 8735,
              "nodeType": "StructuredDocumentation",
              "src": "6746:50:36",
              "text": "@notice Modify the position for the given pool"
            },
            "functionSelector": "61ae449a",
            "id": 8749,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "modifyPosition",
            "nameLocation": "6810:14:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8738,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "6840:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8749,
                  "src": "6825:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolKey_$14587_memory_ptr",
                    "typeString": "struct PoolKey"
                  },
                  "typeName": {
                    "id": 8737,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8736,
                      "name": "PoolKey",
                      "nameLocations": [
                        "6825:7:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14587,
                      "src": "6825:7:36"
                    },
                    "referencedDeclaration": 14587,
                    "src": "6825:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolKey_$14587_storage_ptr",
                      "typeString": "struct PoolKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8741,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "6873:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8749,
                  "src": "6845:34:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ModifyPositionParams_$8734_memory_ptr",
                    "typeString": "struct IPoolManager.ModifyPositionParams"
                  },
                  "typeName": {
                    "id": 8740,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8739,
                      "name": "ModifyPositionParams",
                      "nameLocations": [
                        "6845:20:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8734,
                      "src": "6845:20:36"
                    },
                    "referencedDeclaration": 8734,
                    "src": "6845:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ModifyPositionParams_$8734_storage_ptr",
                      "typeString": "struct IPoolManager.ModifyPositionParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8743,
                  "mutability": "mutable",
                  "name": "hookData",
                  "nameLocation": "6896:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8749,
                  "src": "6881:23:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8742,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6881:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6824:81:36"
            },
            "returnParameters": {
              "id": 8748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8749,
                  "src": "6940:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$14111",
                    "typeString": "BalanceDelta"
                  },
                  "typeName": {
                    "id": 8746,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8745,
                      "name": "BalanceDelta",
                      "nameLocations": [
                        "6940:12:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14111,
                      "src": "6940:12:36"
                    },
                    "referencedDeclaration": 14111,
                    "src": "6940:12:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$14111",
                      "typeString": "BalanceDelta"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6939:14:36"
            },
            "scope": 8867,
            "src": "6801:153:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "canonicalName": "IPoolManager.SwapParams",
            "id": 8756,
            "members": [
              {
                "constant": false,
                "id": 8751,
                "mutability": "mutable",
                "name": "zeroForOne",
                "nameLocation": "6993:10:36",
                "nodeType": "VariableDeclaration",
                "scope": 8756,
                "src": "6988:15:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8750,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "6988:4:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8753,
                "mutability": "mutable",
                "name": "amountSpecified",
                "nameLocation": "7020:15:36",
                "nodeType": "VariableDeclaration",
                "scope": 8756,
                "src": "7013:22:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 8752,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7013:6:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8755,
                "mutability": "mutable",
                "name": "sqrtPriceLimitX96",
                "nameLocation": "7053:17:36",
                "nodeType": "VariableDeclaration",
                "scope": 8756,
                "src": "7045:25:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint160",
                  "typeString": "uint160"
                },
                "typeName": {
                  "id": 8754,
                  "name": "uint160",
                  "nodeType": "ElementaryTypeName",
                  "src": "7045:7:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapParams",
            "nameLocation": "6967:10:36",
            "nodeType": "StructDefinition",
            "scope": 8867,
            "src": "6960:117:36",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 8757,
              "nodeType": "StructuredDocumentation",
              "src": "7083:39:36",
              "text": "@notice Swap against the given pool"
            },
            "functionSelector": "f3cd914c",
            "id": 8771,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "7136:4:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8760,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "7156:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8771,
                  "src": "7141:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolKey_$14587_memory_ptr",
                    "typeString": "struct PoolKey"
                  },
                  "typeName": {
                    "id": 8759,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8758,
                      "name": "PoolKey",
                      "nameLocations": [
                        "7141:7:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14587,
                      "src": "7141:7:36"
                    },
                    "referencedDeclaration": 14587,
                    "src": "7141:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolKey_$14587_storage_ptr",
                      "typeString": "struct PoolKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8763,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "7179:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8771,
                  "src": "7161:24:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapParams_$8756_memory_ptr",
                    "typeString": "struct IPoolManager.SwapParams"
                  },
                  "typeName": {
                    "id": 8762,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8761,
                      "name": "SwapParams",
                      "nameLocations": [
                        "7161:10:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8756,
                      "src": "7161:10:36"
                    },
                    "referencedDeclaration": 8756,
                    "src": "7161:10:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapParams_$8756_storage_ptr",
                      "typeString": "struct IPoolManager.SwapParams"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8765,
                  "mutability": "mutable",
                  "name": "hookData",
                  "nameLocation": "7202:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8771,
                  "src": "7187:23:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8764,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7187:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7140:71:36"
            },
            "returnParameters": {
              "id": 8770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8769,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8771,
                  "src": "7246:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$14111",
                    "typeString": "BalanceDelta"
                  },
                  "typeName": {
                    "id": 8768,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8767,
                      "name": "BalanceDelta",
                      "nameLocations": [
                        "7246:12:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14111,
                      "src": "7246:12:36"
                    },
                    "referencedDeclaration": 14111,
                    "src": "7246:12:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$14111",
                      "typeString": "BalanceDelta"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7245:14:36"
            },
            "scope": 8867,
            "src": "7127:133:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8772,
              "nodeType": "StructuredDocumentation",
              "src": "7266:81:36",
              "text": "@notice Donate the given currency amounts to the pool with the given pool key"
            },
            "functionSelector": "234266d7",
            "id": 8787,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "donate",
            "nameLocation": "7361:6:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8775,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "7383:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8787,
                  "src": "7368:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolKey_$14587_memory_ptr",
                    "typeString": "struct PoolKey"
                  },
                  "typeName": {
                    "id": 8774,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8773,
                      "name": "PoolKey",
                      "nameLocations": [
                        "7368:7:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14587,
                      "src": "7368:7:36"
                    },
                    "referencedDeclaration": 14587,
                    "src": "7368:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolKey_$14587_storage_ptr",
                      "typeString": "struct PoolKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8777,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "7396:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8787,
                  "src": "7388:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7388:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8779,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "7413:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8787,
                  "src": "7405:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7405:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8781,
                  "mutability": "mutable",
                  "name": "hookData",
                  "nameLocation": "7437:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8787,
                  "src": "7422:23:36",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8780,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7422:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7367:79:36"
            },
            "returnParameters": {
              "id": 8786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8785,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8787,
                  "src": "7481:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$14111",
                    "typeString": "BalanceDelta"
                  },
                  "typeName": {
                    "id": 8784,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8783,
                      "name": "BalanceDelta",
                      "nameLocations": [
                        "7481:12:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14111,
                      "src": "7481:12:36"
                    },
                    "referencedDeclaration": 14111,
                    "src": "7481:12:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_BalanceDelta_$14111",
                      "typeString": "BalanceDelta"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7480:14:36"
            },
            "scope": 8867,
            "src": "7352:143:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8788,
              "nodeType": "StructuredDocumentation",
              "src": "7501:137:36",
              "text": "@notice Called by the user to net out some value owed to the user\n @dev Can also be used as a mechanism for _free_ flash loans"
            },
            "functionSelector": "0b0d9c09",
            "id": 8798,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "take",
            "nameLocation": "7652:4:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8791,
                  "mutability": "mutable",
                  "name": "currency",
                  "nameLocation": "7666:8:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8798,
                  "src": "7657:17:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                    "typeString": "Currency"
                  },
                  "typeName": {
                    "id": 8790,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8789,
                      "name": "Currency",
                      "nameLocations": [
                        "7657:8:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14262,
                      "src": "7657:8:36"
                    },
                    "referencedDeclaration": 14262,
                    "src": "7657:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                      "typeString": "Currency"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8793,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7684:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8798,
                  "src": "7676:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7676:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8795,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7696:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8798,
                  "src": "7688:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7688:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7656:47:36"
            },
            "returnParameters": {
              "id": 8797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7712:0:36"
            },
            "scope": 8867,
            "src": "7643:70:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8799,
              "nodeType": "StructuredDocumentation",
              "src": "7719:64:36",
              "text": "@notice Called by the user to move value into Claims balance"
            },
            "functionSelector": "c6c3bbe6",
            "id": 8809,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "7797:4:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8802,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7811:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8809,
                  "src": "7802:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                    "typeString": "Currency"
                  },
                  "typeName": {
                    "id": 8801,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8800,
                      "name": "Currency",
                      "nameLocations": [
                        "7802:8:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14262,
                      "src": "7802:8:36"
                    },
                    "referencedDeclaration": 14262,
                    "src": "7802:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                      "typeString": "Currency"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8804,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7826:2:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8809,
                  "src": "7818:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7818:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8806,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7838:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8809,
                  "src": "7830:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7830:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7801:44:36"
            },
            "returnParameters": {
              "id": 8808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7854:0:36"
            },
            "scope": 8867,
            "src": "7788:67:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8810,
              "nodeType": "StructuredDocumentation",
              "src": "7861:61:36",
              "text": "@notice Called by the user to redeem their Claims balance"
            },
            "functionSelector": "9dc29fac",
            "id": 8818,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "7936:4:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8813,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7950:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8818,
                  "src": "7941:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                    "typeString": "Currency"
                  },
                  "typeName": {
                    "id": 8812,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8811,
                      "name": "Currency",
                      "nameLocations": [
                        "7941:8:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14262,
                      "src": "7941:8:36"
                    },
                    "referencedDeclaration": 14262,
                    "src": "7941:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                      "typeString": "Currency"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8815,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7965:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8818,
                  "src": "7957:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7957:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7940:32:36"
            },
            "returnParameters": {
              "id": 8817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7981:0:36"
            },
            "scope": 8867,
            "src": "7927:55:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8819,
              "nodeType": "StructuredDocumentation",
              "src": "7988:50:36",
              "text": "@notice Called by the user to pay what is owed"
            },
            "functionSelector": "6a256b29",
            "id": 8827,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "settle",
            "nameLocation": "8052:6:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8822,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8068:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8827,
                  "src": "8059:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                    "typeString": "Currency"
                  },
                  "typeName": {
                    "id": 8821,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8820,
                      "name": "Currency",
                      "nameLocations": [
                        "8059:8:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14262,
                      "src": "8059:8:36"
                    },
                    "referencedDeclaration": 14262,
                    "src": "8059:8:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Currency_$14262",
                      "typeString": "Currency"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8058:16:36"
            },
            "returnParameters": {
              "id": 8826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8825,
                  "mutability": "mutable",
                  "name": "paid",
                  "nameLocation": "8109:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8827,
                  "src": "8101:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8101:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8100:14:36"
            },
            "scope": 8867,
            "src": "8043:72:36",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8828,
              "nodeType": "StructuredDocumentation",
              "src": "8121:225:36",
              "text": "@notice Sets the protocol's swap and withdrawal fees for the given pool\n Protocol fees are always a portion of a fee that is owed. If that underlying fee is 0, no protocol fees will accrue even if it is set to > 0."
            },
            "functionSelector": "282076cc",
            "id": 8834,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setProtocolFees",
            "nameLocation": "8360:15:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8831,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "8391:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8834,
                  "src": "8376:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolKey_$14587_memory_ptr",
                    "typeString": "struct PoolKey"
                  },
                  "typeName": {
                    "id": 8830,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8829,
                      "name": "PoolKey",
                      "nameLocations": [
                        "8376:7:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14587,
                      "src": "8376:7:36"
                    },
                    "referencedDeclaration": 14587,
                    "src": "8376:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolKey_$14587_storage_ptr",
                      "typeString": "struct PoolKey"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8375:20:36"
            },
            "returnParameters": {
              "id": 8833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8404:0:36"
            },
            "scope": 8867,
            "src": "8351:54:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8835,
              "nodeType": "StructuredDocumentation",
              "src": "8411:71:36",
              "text": "@notice Sets the hook's swap and withdrawal fees for the given pool"
            },
            "functionSelector": "af440f82",
            "id": 8841,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setHookFees",
            "nameLocation": "8496:11:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8838,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "8523:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8841,
                  "src": "8508:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolKey_$14587_memory_ptr",
                    "typeString": "struct PoolKey"
                  },
                  "typeName": {
                    "id": 8837,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8836,
                      "name": "PoolKey",
                      "nameLocations": [
                        "8508:7:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14587,
                      "src": "8508:7:36"
                    },
                    "referencedDeclaration": 14587,
                    "src": "8508:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolKey_$14587_storage_ptr",
                      "typeString": "struct PoolKey"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8507:20:36"
            },
            "returnParameters": {
              "id": 8840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8536:0:36"
            },
            "scope": 8867,
            "src": "8487:50:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8842,
              "nodeType": "StructuredDocumentation",
              "src": "8543:90:36",
              "text": "@notice Updates the pools swap fees for the a pool that has enabled dynamic swap fees."
            },
            "functionSelector": "48a76703",
            "id": 8848,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateDynamicSwapFee",
            "nameLocation": "8647:20:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8845,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "8683:3:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8848,
                  "src": "8668:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PoolKey_$14587_memory_ptr",
                    "typeString": "struct PoolKey"
                  },
                  "typeName": {
                    "id": 8844,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8843,
                      "name": "PoolKey",
                      "nameLocations": [
                        "8668:7:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14587,
                      "src": "8668:7:36"
                    },
                    "referencedDeclaration": 14587,
                    "src": "8668:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolKey_$14587_storage_ptr",
                      "typeString": "struct PoolKey"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8667:20:36"
            },
            "returnParameters": {
              "id": 8847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8696:0:36"
            },
            "scope": 8867,
            "src": "8638:59:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8849,
              "nodeType": "StructuredDocumentation",
              "src": "8703:166:36",
              "text": "@notice Called by external contracts to access granular pool state\n @param slot Key of slot to sload\n @return value The value of the slot as bytes32"
            },
            "functionSelector": "1e2eaeaf",
            "id": 8856,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "extsload",
            "nameLocation": "8883:8:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8851,
                  "mutability": "mutable",
                  "name": "slot",
                  "nameLocation": "8900:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8856,
                  "src": "8892:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8850,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8892:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8891:14:36"
            },
            "returnParameters": {
              "id": 8855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8854,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8937:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8856,
                  "src": "8929:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8853,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8929:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8928:15:36"
            },
            "scope": 8867,
            "src": "8874:70:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 8857,
              "nodeType": "StructuredDocumentation",
              "src": "8950:273:36",
              "text": "@notice Called by external contracts to access granular pool state\n @param slot Key of slot to start sloading from\n @param nSlots Number of slots to load into return value\n @return value The value of the sload-ed slots concatenated as dynamic bytes"
            },
            "functionSelector": "35fd631a",
            "id": 8866,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "extsload",
            "nameLocation": "9237:8:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8859,
                  "mutability": "mutable",
                  "name": "slot",
                  "nameLocation": "9254:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8866,
                  "src": "9246:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8858,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9246:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8861,
                  "mutability": "mutable",
                  "name": "nSlots",
                  "nameLocation": "9268:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8866,
                  "src": "9260:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9260:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9245:30:36"
            },
            "returnParameters": {
              "id": 8865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8864,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "9312:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 8866,
                  "src": "9299:18:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8863,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9299:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9298:20:36"
            },
            "scope": 8867,
            "src": "9228:91:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8868,
        "src": "460:8861:36",
        "usedErrors": [
          8194,
          8197,
          8277,
          8280,
          8283,
          8502,
          8505,
          8508,
          8513,
          8516,
          8519,
          8522,
          8525
        ],
        "usedEvents": [
          8229,
          8239,
          8251,
          8287,
          8544,
          8558,
          8578,
          8585,
          8592,
          8599
        ]
      }
    ],
    "src": "32:9290:36"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.28+commit.7893614a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.12",
  "updatedAt": "2024-12-18T07:36:00.861Z",
  "devdoc": {
    "errors": {
      "LockedBy(address)": [
        {
          "params": {
            "locker": "The current locker"
          }
        }
      ]
    },
    "events": {
      "Initialize(bytes32,address,address,uint24,int24,address)": {
        "params": {
          "currency0": "The first currency of the pool by address sort order",
          "currency1": "The second currency of the pool by address sort order",
          "fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
          "hooks": "The hooks contract address for the pool, or address(0) if none",
          "id": "The abi encoded hash of the pool key struct for the new pool",
          "tickSpacing": "The minimum number of ticks between initialized ticks"
        }
      },
      "ModifyPosition(bytes32,address,int24,int24,int256)": {
        "params": {
          "id": "The abi encoded hash of the pool key struct for the pool that was modified",
          "liquidityDelta": "The amount of liquidity that was added or removed",
          "sender": "The address that modified the pool",
          "tickLower": "The lower tick of the position",
          "tickUpper": "The upper tick of the position"
        }
      },
      "Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)": {
        "params": {
          "amount0": "The delta of the currency0 balance of the pool",
          "amount1": "The delta of the currency1 balance of the pool",
          "id": "The abi encoded hash of the pool key struct for the pool that was modified",
          "liquidity": "The liquidity of the pool after the swap",
          "sender": "The address that initiated the swap call, and that received the callback",
          "sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
          "tick": "The log base 1.0001 of the price of the pool after the swap"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "balanceOf(address,address)": {
        "params": {
          "account": "The account to get the balance of",
          "currency": "The currency to get the balance of"
        }
      },
      "currencyDelta(address,address)": {
        "params": {
          "currency": "The currency for which to lookup the delta",
          "locker": "The address of the locker"
        }
      },
      "extsload(bytes32)": {
        "params": {
          "slot": "Key of slot to sload"
        },
        "returns": {
          "value": "The value of the slot as bytes32"
        }
      },
      "extsload(bytes32,uint256)": {
        "params": {
          "nSlots": "Number of slots to load into return value",
          "slot": "Key of slot to start sloading from"
        },
        "returns": {
          "value": "The value of the sload-ed slots concatenated as dynamic bytes"
        }
      },
      "lock(bytes)": {
        "params": {
          "data": "Any data to pass to the callback, via `ILockCallback(msg.sender).lockAcquired(data)`"
        },
        "returns": {
          "_0": "The data returned by the call to `ILockCallback(msg.sender).lockAcquired(data)`"
        }
      },
      "take(address,address,uint256)": {
        "details": "Can also be used as a mechanism for _free_ flash loans"
      },
      "transfer(address,address,uint256)": {
        "details": "Will revert if the sender does not have enough balance",
        "params": {
          "amount": "The amount to transfer",
          "currency": "The currency to transfer",
          "to": "The address to transfer to"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "CurrenciesOutOfOrderOrEqual()": [
        {
          "notice": "PoolKey must have currencies where address(currency0) < address(currency1)"
        }
      ],
      "CurrencyNotSettled()": [
        {
          "notice": "Thrown when a currency is not netted out after a lock"
        }
      ],
      "FeeNotDynamic()": [
        {
          "notice": "Thrown when a pool does not have a dynamic fee."
        }
      ],
      "FeeTooLarge()": [
        {
          "notice": "Thrown when the protocol fee denominator is less than 4. Also thrown when the static or dynamic fee on a pool is exceeds 100%."
        }
      ],
      "InsufficientBalance()": [
        {
          "notice": "Thrown when user has insufficient Claims balance"
        }
      ],
      "InvalidAddress()": [
        {
          "notice": "Thrown when transferring Claims to this address"
        }
      ],
      "LockedBy(address)": [
        {
          "notice": "Thrown when a function is called by an address that is not the current locker"
        }
      ],
      "MaxCurrenciesTouched()": [
        {
          "notice": "Thrown when currencies touched has exceeded max of 256"
        }
      ],
      "NotPoolManagerToken()": [
        {
          "notice": "The ERC1155 being deposited is not the Uniswap ERC1155"
        }
      ],
      "PoolNotInitialized()": [
        {
          "notice": "Thrown when trying to interact with a non-initialized pool"
        }
      ],
      "ProtocolFeeCannotBeFetched()": [
        {
          "notice": "Thrown when not enough gas is provided to look up the protocol fee"
        }
      ],
      "TickSpacingTooLarge()": [
        {
          "notice": "Pools are limited to type(int16).max tickSpacing in #initialize, to prevent overflow"
        }
      ],
      "TickSpacingTooSmall()": [
        {
          "notice": "Pools must have a positive non-zero tickSpacing passed to #initialize"
        }
      ]
    },
    "events": {
      "Burn(address,address,uint256)": {
        "notice": "Emitted when burning `amount` of currency Claims from address"
      },
      "Initialize(bytes32,address,address,uint24,int24,address)": {
        "notice": "Emitted when a new pool is initialized"
      },
      "Mint(address,address,uint256)": {
        "notice": "Emitted when minting `amount` of currency Claims to address"
      },
      "ModifyPosition(bytes32,address,int24,int24,int256)": {
        "notice": "Emitted when a liquidity position is modified"
      },
      "Swap(bytes32,address,int128,int128,uint160,uint128,int24,uint24)": {
        "notice": "Emitted for swaps between currency0 and currency1"
      },
      "Transfer(address,address,address,uint256)": {
        "notice": "Emitted when transferring `amount` of currency Claims"
      }
    },
    "kind": "user",
    "methods": {
      "MAX_TICK_SPACING()": {
        "notice": "Returns the constant representing the maximum tickSpacing for an initialized pool key"
      },
      "MIN_PROTOCOL_FEE_DENOMINATOR()": {
        "notice": "Returns the minimum denominator for the protocol fee, which restricts it to a maximum of 25%"
      },
      "MIN_TICK_SPACING()": {
        "notice": "Returns the constant representing the minimum tickSpacing for an initialized pool key"
      },
      "balanceOf(address,address)": {
        "notice": "Get the balance of `account` for `currency`"
      },
      "burn(address,uint256)": {
        "notice": "Called by the user to redeem their Claims balance"
      },
      "currencyDelta(address,address)": {
        "notice": "Get the current delta for a locker in the given currency"
      },
      "donate((address,address,uint24,int24,address),uint256,uint256,bytes)": {
        "notice": "Donate the given currency amounts to the pool with the given pool key"
      },
      "extsload(bytes32)": {
        "notice": "Called by external contracts to access granular pool state"
      },
      "extsload(bytes32,uint256)": {
        "notice": "Called by external contracts to access granular pool state"
      },
      "getLiquidity(bytes32)": {
        "notice": "Get the current value of liquidity of the given pool"
      },
      "getLiquidity(bytes32,address,int24,int24)": {
        "notice": "Get the current value of liquidity for the specified pool and position"
      },
      "getLock(uint256)": {
        "notice": "Returns the locker in the ith position of the locker queue."
      },
      "getLockLength()": {
        "notice": "Returns the length of the lockers array, which is the number of locks open on the PoolManager."
      },
      "getLockNonzeroDeltaCount()": {
        "notice": "Returns the number of nonzero deltas open on the PoolManager that must be zerod by the close of the initial lock."
      },
      "getPosition(bytes32,address,int24,int24)": {
        "notice": "Get the position struct for a specified pool and position"
      },
      "getSlot0(bytes32)": {
        "notice": "Get the current value in slot0 of the given pool"
      },
      "hookFeesAccrued(address,address)": {
        "notice": "Given a hook and a currency address, returns the fees accrued"
      },
      "initialize((address,address,uint24,int24,address),uint160,bytes)": {
        "notice": "Initialize the state for a given pool ID"
      },
      "lock(bytes)": {
        "notice": "All operations go through this function"
      },
      "mint(address,address,uint256)": {
        "notice": "Called by the user to move value into Claims balance"
      },
      "modifyPosition((address,address,uint24,int24,address),(int24,int24,int256),bytes)": {
        "notice": "Modify the position for the given pool"
      },
      "protocolFeesAccrued(address)": {
        "notice": "Given a currency address, returns the protocol fees accrued in that currency"
      },
      "reservesOf(address)": {
        "notice": "Returns the reserves for a given ERC20 currency"
      },
      "setHookFees((address,address,uint24,int24,address))": {
        "notice": "Sets the hook's swap and withdrawal fees for the given pool"
      },
      "setProtocolFees((address,address,uint24,int24,address))": {
        "notice": "Sets the protocol's swap and withdrawal fees for the given pool Protocol fees are always a portion of a fee that is owed. If that underlying fee is 0, no protocol fees will accrue even if it is set to > 0."
      },
      "settle(address)": {
        "notice": "Called by the user to pay what is owed"
      },
      "swap((address,address,uint24,int24,address),(bool,int256,uint160),bytes)": {
        "notice": "Swap against the given pool"
      },
      "take(address,address,uint256)": {
        "notice": "Called by the user to net out some value owed to the user"
      },
      "transfer(address,address,uint256)": {
        "notice": "Transfer `amount` of `currency` from sender to `to`"
      },
      "updateDynamicSwapFee((address,address,uint24,int24,address))": {
        "notice": "Updates the pools swap fees for the a pool that has enabled dynamic swap fees."
      }
    },
    "version": 1
  }
}